package io.decagames.rotmg.dailyQuests.view.info
{
   import io.decagames.rotmg.ui.buttons.SliceScalingButton;
   import io.decagames.rotmg.ui.defaults.DefaultLabelFormat;
   import io.decagames.rotmg.ui.texture.TextureParser;
   
   public class DailyQuestCompleteButton extends SliceScalingButton
   {
      
      public static const BUTTON_WIDTH:int = 142;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"BUTTON_WIDTH")
         pushshort 142
         initproperty Qname(PackageNamespace(""),"BUTTON_WIDTH")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _completed:Boolean;
      
      public function DailyQuestCompleteButton()
      {
         method
         name null
         returns null
         
         body
         maxstack 4
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlex Qname(PackageNamespace("io.decagames.rotmg.ui.texture"),"TextureParser")
         getproperty Qname(PackageNamespace(""),"instance")
         pushstring "UI"
         pushstring "generic_green_button"
         callproperty Qname(PackageNamespace(""),"getSliceScalingBitmap") 2
         constructsuper 1
         getlocal_0
         pushstring "Complete!"
         getlex Qname(PackageNamespace("io.decagames.rotmg.ui.defaults"),"DefaultLabelFormat")
         getproperty Qname(PackageNamespace(""),"questButtonCompleteLabel")
         callpropvoid Qname(PackageNamespace(""),"setLabel") 2
         getlocal_0
         getlex Qname(PackageNamespace(""),"BUTTON_WIDTH")
         initproperty Qname(PackageNamespace(""),"width")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set completed(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"completed")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"863"),"_completed")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"label")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"863"),"_completed")
         iffalse ofs001b
         pushstring "Completed"
         jump ofs001f
         ofs001b:pushstring "Complete!"
         ofs001f:setproperty Qname(PackageNamespace(""),"text")
         findpropstrict Qname(PackageNamespace(""),"render")
         callpropvoid Qname(PackageNamespace(""),"render") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get completed() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"completed")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"863"),"_completed")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

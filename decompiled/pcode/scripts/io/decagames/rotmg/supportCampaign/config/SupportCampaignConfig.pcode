package io.decagames.rotmg.supportCampaign.config
{
   import io.decagames.rotmg.supportCampaign.data.SupporterCampaignModel;
   import io.decagames.rotmg.supportCampaign.signals.MaxRankReachedSignal;
   import io.decagames.rotmg.supportCampaign.signals.TierSelectedSignal;
   import io.decagames.rotmg.supportCampaign.signals.UpdateCampaignProgress;
   import io.decagames.rotmg.supportCampaign.tab.SupporterShopTabMediator;
   import io.decagames.rotmg.supportCampaign.tab.SupporterShopTabView;
   import io.decagames.rotmg.supportCampaign.tab.donate.DonatePanel;
   import io.decagames.rotmg.supportCampaign.tab.donate.DonatePanelMediator;
   import io.decagames.rotmg.supportCampaign.tab.donate.popup.DonateConfirmationPopup;
   import io.decagames.rotmg.supportCampaign.tab.donate.popup.DonateConfirmationPopupMediator;
   import io.decagames.rotmg.supportCampaign.tab.tiers.button.TierButton;
   import io.decagames.rotmg.supportCampaign.tab.tiers.button.TierButtonMediator;
   import io.decagames.rotmg.supportCampaign.tab.tiers.preview.TiersPreview;
   import io.decagames.rotmg.supportCampaign.tab.tiers.preview.TiersPreviewMediator;
   import io.decagames.rotmg.supportCampaign.tasks.GetCampaignStatusTask;
   import io.decagames.rotmg.supportCampaign.tooltips.PointsTooltip;
   import io.decagames.rotmg.supportCampaign.tooltips.PointsTooltipMediator;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;
   import robotlegs.bender.framework.api.IConfig;
   
   public class SupportCampaignConfig implements IConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var mediatorMap:IMediatorMap;
      
      [Inject]
      public var injector:Injector;
      
      public function SupportCampaignConfig()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function configure() : void
      {
         trait method Qname(PackageNamespace(""),"configure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.data"),"SupporterCampaignModel")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tasks"),"GetCampaignStatusTask")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.signals"),"UpdateCampaignProgress")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.signals"),"TierSelectedSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.signals"),"MaxRankReachedSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab"),"SupporterShopTabView")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab"),"SupporterShopTabMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.donate"),"DonatePanel")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.donate"),"DonatePanelMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.donate.popup"),"DonateConfirmationPopup")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.donate.popup"),"DonateConfirmationPopupMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.tiers.preview"),"TiersPreview")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.tiers.preview"),"TiersPreviewMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.tiers.button"),"TierButton")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tab.tiers.button"),"TierButtonMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tooltips"),"PointsTooltip")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("io.decagames.rotmg.supportCampaign.tooltips"),"PointsTooltipMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.junkbyte.console
{
   public class KeyBind
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _code:Boolean;
      
      private var _key:String;
      
      public function KeyBind(param1:*, param2:Boolean = false, param3:Boolean = false, param4:Boolean = false, param5:Boolean = false)
      {
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         optional false
         optional false
         optional false
         returns null
         
         body
         maxstack 3
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"String")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"String") 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"toUpperCase") 0
         initproperty Qname(PrivateNamespace(null,"1172"),"_key")
         getlocal_1
         getlex Qname(PackageNamespace(""),"uint")
         istypelate
         iffalse ofs0025
         getlocal_0
         pushtrue
         initproperty Qname(PrivateNamespace(null,"1172"),"_code")
         jump ofs004f
         ofs0025:getlocal_1
         not
         dup
         iftrue ofs0038
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_key")
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 1
         equals
         not
         ofs0038:iffalse ofs004f
         findpropstrict Qname(PackageNamespace(""),"Error")
         pushstring "KeyBind: character (first char) must be a single character. You gave ["
         getlocal_1
         add
         pushstring "]"
         add
         constructprop Qname(PackageNamespace(""),"Error") 1
         throw
         ofs004f:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_code")
         iffalse ofs0064
         getlocal_0
         pushstring "keycode:"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_key")
         add
         initproperty Qname(PrivateNamespace(null,"1172"),"_key")
         ofs0064:getlocal_2
         iffalse ofs0076
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_key")
         pushstring "+shift"
         add
         initproperty Qname(PrivateNamespace(null,"1172"),"_key")
         ofs0076:getlocal_3
         iffalse ofs0088
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_key")
         pushstring "+ctrl"
         add
         initproperty Qname(PrivateNamespace(null,"1172"),"_key")
         ofs0088:getlocal 4
         iffalse ofs009b
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_key")
         pushstring "+alt"
         add
         initproperty Qname(PrivateNamespace(null,"1172"),"_key")
         ofs009b:getlocal 5
         iffalse ofs00ae
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_key")
         pushstring "+up"
         add
         initproperty Qname(PrivateNamespace(null,"1172"),"_key")
         ofs00ae:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get useKeyCode() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"useKeyCode")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_code")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get key() : String
      {
         trait getter Qname(PackageNamespace(""),"key")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1172"),"_key")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.junkbyte.console.core
{
   import com.junkbyte.console.Console;
   import com.junkbyte.console.vos.WeakObject;
   import com.junkbyte.console.vos.WeakRef;
   import flash.display.DisplayObjectContainer;
   import flash.events.Event;
   import flash.utils.ByteArray;
   import flash.utils.getQualifiedClassName;
   
   public class CommandLine extends ConsoleCore
   {
      
      private static const DISABLED:String = "<b>Advanced CommandLine is disabled.</b>\nEnable by setting `Cc.config.commandLineAllowed = true;´\nType <b>/commands</b> for permitted commands.";
      
      private static const RESERVED:Array;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 4
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"1162"),"DISABLED")
         pushstring "<b>Advanced CommandLine is disabled.</b>\nEnable by setting `Cc.config.commandLineAllowed = true;´\nType <b>/commands</b> for permitted commands."
         initproperty Qname(PrivateNamespace(null,"1162"),"DISABLED")
         findproperty Qname(PrivateNamespace(null,"1162"),"RESERVED")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         getproperty Qname(PackageNamespace(""),"RETURNED")
         pushstring "base"
         pushstring "C"
         newarray 3
         initproperty Qname(PrivateNamespace(null,"1162"),"RESERVED")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _saved:WeakObject;
      
      private var _scope;
      
      private var _prevScope:WeakRef;
      
      private var _scopeStr:String = "";
      
      private var _slashCmds:Object;
      
      public var localCommands:Array;
      
      public function CommandLine(param1:Console)
      {
         method
         name null
         flag NEED_ACTIVATION
         param Qname(PackageNamespace("com.junkbyte.console"),"Console")
         returns null
         
         body
         maxstack 6
         localcount 3
         initscopedepth 7
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_2
         pushscope
         getscopeobject 1
         getlocal_1
         setslot 1
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Array")
         pushstring "filter"
         pushstring "filterexp"
         constructprop Qname(PackageNamespace(""),"Array") 2
         initproperty Qname(PackageNamespace(""),"localCommands")
         getlocal_0
         getscopeobject 1
         getslot 1
         constructsuper 1
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakObject")
         constructprop Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakObject") 0
         initproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         getlocal_0
         getscopeobject 1
         getslot 1
         initproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Object")
         constructprop Qname(PackageNamespace(""),"Object") 0
         initproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakRef")
         getscopeobject 1
         getslot 1
         constructprop Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakRef") 1
         initproperty Qname(PrivateNamespace(null,"1162"),"_prevScope")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         pushstring "C"
         getscopeobject 1
         getslot 1
         callpropvoid Qname(PackageNamespace(""),"set") 2
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         pushstring "cmd"
         newfunction 18549
         callpropvoid Qname(PackageNamespace(""),"registerCallback") 2
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         pushstring "scope"
         newfunction 18550
         callpropvoid Qname(PackageNamespace(""),"registerCallback") 2
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         pushstring "cls"
         getlocal_0
         getproperty Qname(PackageNamespace(""),"handleScopeString")
         callpropvoid Qname(PackageNamespace(""),"registerCallback") 2
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"CONNECT")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"sendCmdScope2Remote")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         getlocal_0
         pushstring "help"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"printHelp")
         pushstring "How to use command line"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "save|store"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"saveCmd")
         pushstring "Save current scope as weak reference. (same as Cc.store(...))"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "savestrong|storestrong"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"saveStrongCmd")
         pushstring "Save current scope as strong reference"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "saved|stored"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"savedCmd")
         pushstring "Show a list of all saved references"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "string"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"stringCmd")
         pushstring "Create String, useful to paste complex strings without worrying about \" or \'"
         pushfalse
         pushnull
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 5
         getlocal_0
         pushstring "commands"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"cmdsCmd")
         pushstring "Show a list of all slash commands"
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 4
         getlocal_0
         pushstring "inspect"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"inspectCmd")
         pushstring "Inspect current scope"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "explode"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"explodeCmd")
         pushstring "Explode current scope to its properties and values (similar to JSON)"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "map"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"mapCmd")
         pushstring "Get display list map starting from current scope"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "function"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"funCmd")
         pushstring "Create function. param is the commandline string to create as function. (experimental)"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "autoscope"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"autoscopeCmd")
         pushstring "Toggle autoscoping."
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "base"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"baseCmd")
         pushstring "Return to base scope"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         pushstring "/"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"prevCmd")
         pushstring "Return to previous scope"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set base(param1:Object) : void
      {
         trait setter Qname(PackageNamespace(""),"base")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"base")
         iffalse ofs0027
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Set new commandLine base from "
         getlocal_0
         getproperty Qname(PackageNamespace(""),"base")
         add
         pushstring " to "
         add
         getlocal_1
         add
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         jump ofs0046
         ofs0027:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_prevScope")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         setproperty Qname(PackageNamespace(""),"reference")
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         getlocal_0
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getlocal_1
         pushfalse
         callproperty Qname(PackageNamespace(""),"ShortClassName") 2
         initproperty Qname(PrivateNamespace(null,"1162"),"_scopeStr")
         ofs0046:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         pushstring "base"
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"set") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get base() : Object
      {
         trait getter Qname(PackageNamespace(""),"base")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         pushstring "base"
         callproperty Qname(PackageNamespace(""),"get") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function handleScopeString(param1:ByteArray) : void
      {
         trait method Qname(PackageNamespace(""),"handleScopeString")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUTF") 0
         initproperty Qname(PrivateNamespace(null,"1162"),"_scopeStr")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function handleScopeEvent(param1:uint) : void
      {
         trait method Qname(PackageNamespace(""),"handleScopeEvent")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         pushundefined
         coerce_a
         setlocal_3
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         getproperty Qname(PackageNamespace(""),"remoting")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getproperty Qname(PackageNamespace(""),"RECIEVER")
         ifne ofs003c
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         getlocal_2
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         pushstring "scope"
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"send") 2
         jump ofs006c
         ofs003c:getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"refs")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"getRefById") 1
         coerce_a
         setlocal_3
         getlocal_3
         iffalse ofs005f
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"cl")
         getlocal_3
         pushtrue
         pushfalse
         callpropvoid Qname(PackageNamespace(""),"setReturned") 3
         jump ofs006c
         ofs005f:getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         pushstring "Reference no longer exist."
         pushbyte -2
         callpropvoid Qname(PackageNamespace(""),"report") 2
         ofs006c:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function store(param1:String, param2:Object, param3:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"store")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_1
         iftrue ofs0015
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "ERROR: Give a name to save."
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         ofs0015:getlocal_2
         getlex Qname(PackageNamespace(""),"Function")
         istypelate
         iffalse ofs001f
         pushtrue
         setlocal_3
         ofs001f:getlocal_1
         getlex Qname(PackageNamespace(""),"RegExp")
         pushstring "[^\\w]*"
         pushstring "g"
         construct 2
         pushstring ""
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         coerce_s
         setlocal_1
         getlex Qname(PrivateNamespace(null,"1162"),"RESERVED")
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         pushbyte 0
         ifnge ofs005b
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "ERROR: The name ["
         getlocal_1
         add
         pushstring "] is reserved"
         add
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         ofs005b:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"set") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getHintsFor(param1:String, param2:uint) : Array
      {
         trait method Qname(PackageNamespace(""),"getHintsFor")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 5
         localcount 6
         initscopedepth 7
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_3
         pushscope
         getscopeobject 1
         pushnull
         coerce_s
         setslot 4
         getscopeobject 1
         pushnull
         coerce Qname(PackageNamespace(""),"Array")
         setslot 6
         getscopeobject 1
         pushnull
         coerce Qname(PackageNamespace(""),"Object")
         setslot 7
         getscopeobject 1
         pushnull
         coerce_s
         setslot 8
         getscopeobject 1
         getlocal_1
         setslot 1
         getscopeobject 1
         getlocal_2
         setslot 2
         getscopeobject 1
         findpropstrict Qname(PackageNamespace(""),"Array")
         constructprop Qname(PackageNamespace(""),"Array") 0
         coerce Qname(PackageNamespace(""),"Array")
         setslot 3
         pushbyte 0
         setlocal 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         coerce_a
         setlocal 5
         jump ofs00ae
         ofs0044:label
         getscopeobject 1
         getlocal 5
         getlocal 4
         nextname
         coerce_s
         setslot 4
         getscopeobject 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getscopeobject 1
         getslot 4
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce Qname(PackageNamespace(""),"Object")
         setslot 7
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         convert_b
         dup
         iftrue ofs0077
         pop
         getscopeobject 1
         getslot 7
         getproperty Multiname("allow",[PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         convert_b
         ofs0077:iffalse ofs00ae
         getscopeobject 1
         getslot 3
         pushstring "/"
         getscopeobject 1
         getslot 4
         add
         pushstring " "
         add
         getscopeobject 1
         getslot 7
         getproperty Multiname("d",[PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         iffalse ofs00a5
         getscopeobject 1
         getslot 7
         getproperty Multiname("d",[PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce_a
         jump ofs00a7
         ofs00a5:pushnull
         coerce_a
         ofs00a7:newarray 2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs00ae:hasnext2 5 4
         iftrue ofs0044
         kill 5
         kill 4
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         iffalse ofs0151
         pushbyte 0
         setlocal 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         coerce_a
         setlocal 5
         jump ofs0106
         ofs00d2:label
         getscopeobject 1
         getlocal 5
         getlocal 4
         nextname
         coerce_s
         setslot 8
         getscopeobject 1
         getslot 3
         pushstring "$"
         getscopeobject 1
         getslot 8
         add
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         getscopeobject 1
         getslot 8
         callproperty Qname(PackageNamespace(""),"get") 1
         callproperty Qname(PackageNamespace(""),"ShortClassName") 1
         newarray 2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0106:hasnext2 5 4
         iftrue ofs00d2
         kill 5
         kill 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         iffalse ofs0151
         getscopeobject 1
         getslot 3
         pushstring "this"
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         callproperty Qname(PackageNamespace(""),"ShortClassName") 1
         newarray 2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getscopeobject 1
         getscopeobject 1
         getslot 3
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"refs")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         callproperty Qname(PackageNamespace(""),"getPossibleCalls") 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat") 1
         coerce Qname(PackageNamespace(""),"Array")
         setslot 3
         ofs0151:getscopeobject 1
         getscopeobject 1
         getslot 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"toLowerCase") 0
         coerce_s
         setslot 1
         getscopeobject 1
         findpropstrict Qname(PackageNamespace(""),"Array")
         constructprop Qname(PackageNamespace(""),"Array") 0
         coerce Qname(PackageNamespace(""),"Array")
         setslot 5
         pushbyte 0
         setlocal 4
         getscopeobject 1
         getslot 3
         coerce_a
         setlocal 5
         jump ofs01b0
         ofs0179:label
         getscopeobject 1
         getlocal 5
         getlocal 4
         nextvalue
         coerce Qname(PackageNamespace(""),"Array")
         setslot 6
         getscopeobject 1
         getslot 6
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         callproperty Multiname("toLowerCase",[PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")]) 0
         getscopeobject 1
         getslot 1
         callproperty Multiname("indexOf",[PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")]) 1
         pushbyte 0
         ifne ofs01b0
         getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 6
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs01b0:hasnext2 5 4
         iftrue ofs0179
         kill 5
         kill 4
         getscopeobject 1
         getscopeobject 1
         getslot 5
         newfunction 18557
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"sort") 1
         coerce Qname(PackageNamespace(""),"Array")
         setslot 5
         getscopeobject 1
         getslot 2
         pushbyte 0
         greaterthan
         dup
         iffalse ofs01e7
         pop
         getscopeobject 1
         getslot 5
         getproperty Qname(PackageNamespace(""),"length")
         getscopeobject 1
         getslot 2
         greaterthan
         ofs01e7:iffalse ofs0207
         getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"splice") 1
         getscopeobject 1
         getslot 5
         pushstring "..."
         newarray 1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0207:getscopeobject 1
         getslot 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get scopeString() : String
      {
         trait getter Qname(PackageNamespace(""),"scopeString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         iffalse ofs0015
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scopeStr")
         coerce_s
         jump ofs0017
         ofs0015:pushstring ""
         ofs0017:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function addCLCmd(param1:String, param2:Function, param3:String, param4:Boolean = false, param5:String = ";") : void
      {
         trait method Qname(PackageNamespace(""),"addCLCmd")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"String")
         optional false
         optional ";"
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 9
         localcount 8
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushstring "|"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 6
         pushbyte 0
         setlocal 7
         jump ofs0050
         ofs0018:label
         getlocal 6
         getlocal 7
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce_s
         setlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getlocal_1
         findpropstrict Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         getlocal_1
         getlocal_2
         getlocal_3
         pushfalse
         getlocal 4
         getlocal 5
         constructprop Qname(PrivateNamespace(null,"1163"),"SlashCommand") 6
         setproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         getlocal 7
         pushbyte 0
         ifngt ofs004e
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getlocal_1
         pushfalse
         callpropvoid Multiname("setPropertyIsEnumerable",[PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")]) 2
         ofs004e:inclocal_i 7
         ofs0050:getlocal 7
         getlocal 6
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0018
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addSlashCommand(param1:String, param2:Function, param3:String = "", param4:Boolean = true, param5:String = ";") : void
      {
         trait method Qname(PackageNamespace(""),"addSlashCommand")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"String")
         optional ""
         optional true
         optional ";"
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 9
         localcount 7
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         setlocal 6
         getlocal_1
         getlex Qname(PackageNamespace(""),"RegExp")
         pushstring "[^\\w]*"
         pushstring "g"
         construct 2
         pushstring ""
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         coerce_s
         setlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         pushnull
         ifeq ofs0056
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         dup
         setlocal 6
         getproperty Qname(PackageNamespace(""),"user")
         iftrue ofs0056
         findpropstrict Qname(PackageNamespace(""),"Error")
         pushstring "Can not alter build-in slash command ["
         getlocal_1
         add
         pushstring "]"
         add
         constructprop Qname(PackageNamespace(""),"Error") 1
         throw
         ofs0056:getlocal_2
         pushnull
         ifne ofs006a
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getlocal_1
         deleteproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         pop
         jump ofs008a
         ofs006a:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getlocal_1
         findpropstrict Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getlocal_3
         callproperty Qname(PackageNamespace(""),"EscHTML") 1
         pushtrue
         getlocal 4
         getlocal 5
         constructprop Qname(PrivateNamespace(null,"1163"),"SlashCommand") 6
         setproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         ofs008a:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function run(param1:String, param2:Object = null) : *
      {
         trait method Qname(PackageNamespace(""),"run")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         flag NEED_ACTIVATION
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         optional null
         returns null
         
         body
         maxstack 6
         localcount 6
         initscopedepth 7
         maxscopedepth 12
         try from ofs0113 to ofs0219 target ofs021d type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"e")
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_3
         pushscope
         getscopeobject 1
         pushnull
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setslot 4
         getscopeobject 1
         pushnull
         coerce Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         setslot 5
         getscopeobject 1
         pushnull
         coerce_s
         setslot 6
         getscopeobject 1
         getlocal_1
         setslot 1
         getscopeobject 1
         getlocal_2
         setslot 2
         getscopeobject 1
         getslot 1
         iftrue ofs0030
         returnvoid
         ofs0030:getscopeobject 1
         getscopeobject 1
         getslot 1
         getlex Qname(PackageNamespace(""),"RegExp")
         pushstring "\\s*"
         construct 1
         pushstring ""
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         coerce_s
         setslot 1
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         getproperty Qname(PackageNamespace(""),"remoting")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getproperty Qname(PackageNamespace(""),"RECIEVER")
         ifne ofs00fa
         getscopeobject 1
         getslot 1
         pushbyte 0
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
         pushstring "~"
         ifne ofs0081
         getscopeobject 1
         getscopeobject 1
         getslot 1
         pushbyte 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substring") 1
         coerce_s
         setslot 1
         jump ofs00fa
         ofs0081:getscopeobject 1
         getslot 1
         findpropstrict Qname(PackageNamespace(""),"RegExp")
         pushstring "/"
         getlocal_0
         getproperty Qname(PackageNamespace(""),"localCommands")
         pushstring "|/"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         add
         constructprop Qname(PackageNamespace(""),"RegExp") 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"search") 1
         pushbyte 0
         ifeq ofs00fa
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Run command at remote: "
         getscopeobject 1
         getslot 1
         add
         pushbyte -2
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         getscopeobject 1
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setslot 4
         getscopeobject 1
         getslot 4
         getscopeobject 1
         getslot 1
         callpropvoid Qname(PackageNamespace(""),"writeUTF") 1
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"remoter")
         pushstring "cmd"
         getscopeobject 1
         getslot 4
         callproperty Qname(PackageNamespace(""),"send") 2
         iftrue ofs00f8
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Command could not be sent to client."
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         ofs00f8:pushnull
         returnvalue
         ofs00fa:findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "&gt; "
         getscopeobject 1
         getslot 1
         add
         pushbyte 4
         pushfalse
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 3
         getscopeobject 1
         pushnull
         coerce_a
         setslot 3
         ofs0113:getscopeobject 1
         getslot 1
         pushbyte 0
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
         pushstring "/"
         ifne ofs0139
         getlocal_0
         getscopeobject 1
         getslot 1
         pushbyte 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substring") 1
         callpropvoid Qname(PrivateNamespace(null,"1162"),"execCommand") 1
         jump ofs0219
         ofs0139:getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         iftrue ofs0152
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         getlex Qname(PrivateNamespace(null,"1162"),"DISABLED")
         pushbyte 9
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         pushnull
         returnvalue
         ofs0152:getscopeobject 1
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"Executer") 0
         coerce Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         setslot 5
         getscopeobject 1
         getslot 5
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"COMPLETE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"onExecLineComplete")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
         getscopeobject 1
         getslot 2
         iffalse ofs01d2
         pushbyte 0
         setlocal 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         coerce_a
         setlocal 5
         jump ofs01c3
         ofs0190:label
         getscopeobject 1
         getlocal 5
         getlocal 4
         nextname
         coerce_s
         setslot 6
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 6
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         iftrue ofs01c3
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 6
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         getscopeobject 1
         getslot 6
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         setproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         ofs01c3:hasnext2 5 4
         iftrue ofs0190
         kill 5
         kill 4
         jump ofs01dc
         ofs01d2:getscopeobject 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         coerce Qname(PackageNamespace(""),"Object")
         setslot 2
         ofs01dc:getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 2
         callpropvoid Qname(PackageNamespace(""),"setStored") 1
         getscopeobject 1
         getslot 5
         getlex Qname(PrivateNamespace(null,"1162"),"RESERVED")
         callpropvoid Qname(PackageNamespace(""),"setReserved") 1
         getscopeobject 1
         getslot 5
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAutoScope")
         setproperty Qname(PackageNamespace(""),"autoScope")
         getscopeobject 1
         getscopeobject 1
         getslot 5
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         getscopeobject 1
         getslot 1
         callproperty Qname(PackageNamespace(""),"exec") 2
         coerce_a
         setslot 3
         ofs0219:jump ofs0239
         ofs021d:getlocal_0
         pushscope
         getlocal_3
         pushscope
         newcatch 0
         dup
         setlocal 4
         dup
         pushscope
         swap
         setslot 1
         findpropstrict Qname(PrivateNamespace(null,"1162"),"reportError")
         getscopeobject 2
         getslot 1
         callpropvoid Qname(PrivateNamespace(null,"1162"),"reportError") 1
         popscope
         kill 4
         ofs0239:getscopeobject 1
         getslot 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function onExecLineComplete(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"onExecLineComplete")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"currentTarget")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         astypelate
         coerce Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"scope")
         ifne ofs002c
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"returned")
         callpropvoid Qname(PackageNamespace(""),"setReturned") 1
         jump ofs005e
         ofs002c:getlocal_2
         getproperty Qname(PackageNamespace(""),"scope")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"returned")
         ifne ofs0049
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"scope")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setReturned") 2
         jump ofs005e
         ofs0049:getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"returned")
         callpropvoid Qname(PackageNamespace(""),"setReturned") 1
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"scope")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setReturned") 2
         ofs005e:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function execCommand(param1:String) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"execCommand")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 7
         maxscopedepth 12
         try from ofs00bc to ofs0187 target ofs018b type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"err")
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_2
         pushscope
         getscopeobject 1
         pushnull
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         setslot 5
         getscopeobject 1
         pushnull
         coerce_s
         setslot 6
         getscopeobject 1
         pushbyte 0
         setslot 7
         getscopeobject 1
         getlocal_1
         setslot 1
         getscopeobject 1
         getscopeobject 1
         getslot 1
         getlex Qname(PackageNamespace(""),"RegExp")
         pushstring "[^\\w]"
         construct 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"search") 1
         convert_i
         setslot 2
         getscopeobject 1
         getscopeobject 1
         getslot 1
         pushbyte 0
         getscopeobject 1
         getslot 2
         pushbyte 0
         greaterthan
         iffalse ofs0052
         getscopeobject 1
         getslot 2
         convert_d
         jump ofs005a
         ofs0052:getscopeobject 1
         getslot 1
         getproperty Qname(PackageNamespace(""),"length")
         convert_d
         ofs005a:callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substring") 2
         coerce_s
         setslot 3
         getscopeobject 1
         getslot 3
         pushstring ""
         ifne ofs0084
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         getproperty Qname(PackageNamespace(""),"RETURNED")
         callproperty Qname(PackageNamespace(""),"get") 1
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setReturned") 2
         returnvoid
         ofs0084:getscopeobject 1
         getscopeobject 1
         getslot 2
         pushbyte 0
         greaterthan
         iffalse ofs00a6
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 2
         pushbyte 1
         add
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substring") 1
         coerce_s
         jump ofs00a8
         ofs00a6:pushstring ""
         ofs00a8:coerce_s
         setslot 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getscopeobject 1
         getslot 3
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         pushnull
         ifeq ofs01aa
         ofs00bc:getscopeobject 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         getscopeobject 1
         getslot 3
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         setslot 5
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         not
         dup
         iffalse ofs00e4
         pop
         getscopeobject 1
         getslot 5
         getproperty Qname(PackageNamespace(""),"allow")
         not
         ofs00e4:iffalse ofs00f6
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         getlex Qname(PrivateNamespace(null,"1162"),"DISABLED")
         pushbyte 9
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         ofs00f6:getscopeobject 1
         getslot 5
         getproperty Qname(PackageNamespace(""),"endMarker")
         iffalse ofs0151
         getscopeobject 1
         getscopeobject 1
         getslot 4
         getscopeobject 1
         getslot 5
         getproperty Qname(PackageNamespace(""),"endMarker")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         convert_i
         setslot 7
         getscopeobject 1
         getslot 7
         pushbyte 0
         ifnge ofs0151
         getscopeobject 1
         getscopeobject 1
         getslot 4
         getscopeobject 1
         getslot 7
         getscopeobject 1
         getslot 5
         getproperty Qname(PackageNamespace(""),"endMarker")
         getproperty Qname(PackageNamespace(""),"length")
         add
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substring") 1
         coerce_s
         setslot 6
         getscopeobject 1
         getscopeobject 1
         getslot 4
         pushbyte 0
         getscopeobject 1
         getslot 7
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substring") 2
         coerce_s
         setslot 4
         ofs0151:getscopeobject 1
         getslot 4
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs016a
         getscopeobject 1
         getslot 5
         callpropvoid Qname(PackageNamespace(""),"f") 0
         jump ofs0176
         ofs016a:getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 4
         callpropvoid Qname(PackageNamespace(""),"f") 1
         ofs0176:getscopeobject 1
         getslot 6
         iffalse ofs0187
         getlocal_0
         getscopeobject 1
         getslot 6
         callpropvoid Qname(PackageNamespace(""),"run") 1
         ofs0187:jump ofs01a6
         ofs018b:getlocal_0
         pushscope
         getlocal_2
         pushscope
         newcatch 0
         dup
         setlocal_3
         dup
         pushscope
         swap
         setslot 1
         findpropstrict Qname(PrivateNamespace(null,"1162"),"reportError")
         getscopeobject 2
         getslot 1
         callpropvoid Qname(PrivateNamespace(null,"1162"),"reportError") 1
         popscope
         kill 3
         ofs01a6:jump ofs01b7
         ofs01aa:findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Undefined command <b>/commands</b> for list of all commands."
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         ofs01b7:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setReturned(param1:*, param2:Boolean = false, param3:Boolean = true) : void
      {
         trait method Qname(PackageNamespace(""),"setReturned")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         optional true
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         iftrue ofs001a
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         getlex Qname(PrivateNamespace(null,"1162"),"DISABLED")
         pushbyte 9
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         ofs001a:getlocal_1
         getlex Qname(PackageNamespace(""),"undefined")
         ifstricteq ofs00bf
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         getproperty Qname(PackageNamespace(""),"RETURNED")
         getlocal_1
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"set") 3
         getlocal_2
         convert_b
         dup
         iffalse ofs0044
         pop
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         strictequals
         not
         ofs0044:iffalse ofs009d
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_prevScope")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         setproperty Qname(PackageNamespace(""),"reference")
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         getproperty Qname(PackageNamespace(""),"remoting")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getproperty Qname(PackageNamespace(""),"RECIEVER")
         ifeq ofs0080
         getlocal_0
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         pushfalse
         callproperty Qname(PackageNamespace(""),"ShortClassName") 2
         initproperty Qname(PrivateNamespace(null,"1162"),"_scopeStr")
         getlocal_0
         callpropvoid Qname(PackageNamespace(""),"sendCmdScope2Remote") 0
         ofs0080:findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Changed to "
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"refs")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"makeRefTyped") 1
         add
         pushbyte -1
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         jump ofs00bb
         ofs009d:getlocal_3
         iffalse ofs00bb
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Returned "
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"refs")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"makeString") 1
         add
         pushbyte -1
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         ofs00bb:jump ofs00d1
         ofs00bf:getlocal_3
         iffalse ofs00d1
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Exec successful, undefined return."
         pushbyte -1
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         ofs00d1:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sendCmdScope2Remote(param1:Event = null) : void
      {
         trait method Qname(PackageNamespace(""),"sendCmdScope2Remote")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.events"),"Event")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         getlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scopeStr")
         callpropvoid Qname(PackageNamespace(""),"writeUTF") 1
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"remoter")
         pushstring "cls"
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"send") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function reportError(param1:Error) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"reportError")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Error")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 11
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal 10
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"refs")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"makeString") 1
         coerce_s
         setlocal_2
         getlocal_2
         getlex Qname(PackageNamespace(""),"RegExp")
         pushstring "\\n\\s*"
         construct 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         pushbyte 10
         setlocal 4
         pushbyte 0
         setlocal 5
         getlocal_3
         getproperty Qname(PackageNamespace(""),"length")
         convert_i
         setlocal 6
         newarray 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 7
         findpropstrict Qname(PackageNamespace(""),"RegExp")
         pushstring "\\s*at\\s+("
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         getproperty Qname(PackageNamespace(""),"CLASSES")
         add
         pushstring "|"
         add
         findpropstrict Qname(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal_0
         callproperty Qname(PackageNamespace("flash.utils"),"getQualifiedClassName") 1
         add
         pushstring ")"
         add
         constructprop Qname(PackageNamespace(""),"RegExp") 1
         coerce Qname(PackageNamespace(""),"RegExp")
         setlocal 8
         pushbyte 0
         setlocal 9
         jump ofs00d5
         ofs0070:label
         getlocal_3
         getlocal 9
         getproperty MultinameL([PrivateNamespace(null,"1162"),PackageNamespace("com.junkbyte.console.core"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1163"),ProtectedNamespace("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:CommandLine"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce_s
         dup
         setlocal 10
         getlocal 8
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"search") 1
         pushbyte 0
         ifne ofs00a3
         getlocal 5
         pushbyte 0
         greaterthan
         dup
         iffalse ofs0099
         pop
         getlocal 9
         pushbyte 0
         greaterthan
         ofs0099:iffalse ofs00a1
         jump ofs00dd
         ofs00a1:inclocal_i 5
         ofs00a3:getlocal 7
         pushstring "<p"
         getlocal 4
         add
         pushstring "> "
         add
         getlocal 10
         add
         pushstring "</p"
         add
         getlocal 4
         add
         pushstring ">"
         add
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal 4
         pushbyte 6
         ifngt ofs00d3
         getlocal 4
         decrement_i
         setlocal 4
         ofs00d3:inclocal_i 9
         ofs00d5:getlocal 9
         getlocal 6
         iflt ofs0070
         ofs00dd:findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         getlocal 7
         pushstring "\n"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         pushbyte 9
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function saveCmd(param1:String = null) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"saveCmd")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         pushfalse
         callpropvoid Qname(PackageNamespace(""),"store") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function saveStrongCmd(param1:String = null) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"saveStrongCmd")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"store") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function savedCmd(... rest) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"savedCmd")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 8
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal 4
         pushnull
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakRef")
         setlocal 5
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Saved vars: "
         pushbyte -1
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         pushbyte 0
         convert_u
         setlocal_2
         pushbyte 0
         convert_u
         setlocal_3
         pushbyte 0
         setlocal 6
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         coerce_a
         setlocal 7
         jump ofs009a
         ofs0030:label
         getlocal 7
         getlocal 6
         nextname
         coerce_s
         setlocal 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_saved")
         getlocal 4
         callproperty Qname(PackageNamespace(""),"getWeakRef") 1
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakRef")
         setlocal 5
         getlocal_2
         increment
         convert_u
         setlocal_2
         getlocal 5
         getproperty Qname(PackageNamespace(""),"reference")
         pushnull
         ifne ofs005c
         getlocal_3
         increment
         convert_u
         setlocal_3
         ofs005c:findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         getlocal 5
         getproperty Qname(PackageNamespace(""),"strong")
         iffalse ofs0071
         pushstring "strong"
         coerce_a
         jump ofs0076
         ofs0071:pushstring "weak"
         coerce_a
         ofs0076:pushstring " <b>$"
         add
         getlocal 4
         add
         pushstring "</b> = "
         add
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"refs")
         getlocal 5
         getproperty Qname(PackageNamespace(""),"reference")
         callproperty Qname(PackageNamespace(""),"makeString") 1
         add
         pushbyte -2
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         ofs009a:hasnext2 7 6
         iftrue ofs0030
         kill 7
         kill 6
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Found "
         getlocal_2
         add
         pushstring " item(s), "
         add
         getlocal_3
         add
         pushstring " empty."
         add
         pushbyte -1
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function stringCmd(param1:String) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"stringCmd")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "String with "
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         add
         pushstring " chars entered. Use /save <i>(name)</i> to save."
         add
         pushbyte -2
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         getlocal_0
         getlocal_1
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setReturned") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function cmdsCmd(... rest) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"cmdsCmd")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         setlocal 4
         newarray 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_2
         newarray 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         pushbyte 0
         setlocal 5
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_slashCmds")
         coerce_a
         setlocal 6
         jump ofs0060
         ofs0021:label
         getlocal 6
         getlocal 5
         nextvalue
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         setlocal 4
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         convert_b
         dup
         iftrue ofs003f
         pop
         getlocal 4
         getproperty Qname(PackageNamespace(""),"allow")
         convert_b
         ofs003f:iffalse ofs0060
         getlocal 4
         getproperty Qname(PackageNamespace(""),"user")
         iffalse ofs0058
         getlocal_3
         getlocal 4
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         jump ofs0060
         ofs0058:getlocal_2
         getlocal 4
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0060:hasnext2 6 5
         iftrue ofs0021
         kill 6
         kill 5
         getlocal_2
         pushstring "n"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"sortOn") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Built-in commands:"
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAllowed")
         iftrue ofs0091
         pushstring " (limited permission)"
         coerce_a
         jump ofs0094
         ofs0091:pushstring ""
         coerce_a
         ofs0094:add
         pushbyte 4
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         pushbyte 0
         setlocal 5
         getlocal_2
         coerce_a
         setlocal 6
         jump ofs00d5
         ofs00a7:label
         getlocal 6
         getlocal 5
         nextvalue
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         setlocal 4
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "<b>/"
         getlocal 4
         getproperty Qname(PackageNamespace(""),"n")
         add
         pushstring "</b> <p-1>"
         add
         getlocal 4
         getproperty Qname(PackageNamespace(""),"d")
         add
         pushstring "</p-1>"
         add
         pushbyte -2
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         ofs00d5:hasnext2 6 5
         iftrue ofs00a7
         kill 6
         kill 5
         getlocal_3
         getproperty Qname(PackageNamespace(""),"length")
         iffalse ofs0146
         getlocal_3
         pushstring "n"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"sortOn") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "User commands:"
         pushbyte 4
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         pushbyte 0
         setlocal 5
         getlocal_3
         coerce_a
         setlocal 6
         jump ofs013b
         ofs010d:label
         getlocal 6
         getlocal 5
         nextvalue
         coerce Qname(PrivateNamespace(null,"1163"),"SlashCommand")
         setlocal 4
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "<b>/"
         getlocal 4
         getproperty Qname(PackageNamespace(""),"n")
         add
         pushstring "</b> <p-1>"
         add
         getlocal 4
         getproperty Qname(PackageNamespace(""),"d")
         add
         pushstring "</p-1>"
         add
         pushbyte -2
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         ofs013b:hasnext2 6 5
         iftrue ofs010d
         kill 6
         kill 5
         ofs0146:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function inspectCmd(... rest) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"inspectCmd")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"refs")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         callpropvoid Qname(PackageNamespace(""),"focus") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function explodeCmd(param1:String = "0") : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"explodeCmd")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional "0"
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"int") 1
         convert_i
         setlocal_2
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"reportChannel")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         getlocal_2
         pushbyte 0
         lessequals
         iffalse ofs002c
         pushbyte 3
         jump ofs002e
         ofs002c:getlocal_2
         convert_i
         ofs002e:callpropvoid Qname(PackageNamespace(""),"explodech") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function mapCmd(param1:String = "0") : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"mapCmd")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional "0"
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"console")
         getproperty Qname(PackageNamespace(""),"panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"reportChannel")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_scope")
         getlex Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         astypelate
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"int") 1
         callpropvoid Qname(PackageNamespace(""),"mapch") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function funCmd(param1:String = "") : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"funCmd")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional ""
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PrivateNamespace(null,"1163"),"FakeFunction")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"run")
         getlocal_1
         constructprop Qname(PrivateNamespace(null,"1163"),"FakeFunction") 2
         coerce Qname(PrivateNamespace(null,"1163"),"FakeFunction")
         setlocal_2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Function created. Use /savestrong <i>(name)</i> to save."
         pushbyte -2
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"exec")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setReturned") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function autoscopeCmd(... rest) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"autoscopeCmd")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAutoScope")
         not
         setproperty Qname(PackageNamespace(""),"commandLineAutoScope")
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Auto-scoping <b>"
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"commandLineAutoScope")
         iffalse ofs0028
         pushstring "enabled"
         coerce_a
         jump ofs002c
         ofs0028:pushstring "disabled"
         coerce_a
         ofs002c:add
         pushstring "</b>."
         add
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function baseCmd(... rest) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"baseCmd")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"base")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setReturned") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function prevCmd(... rest) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"prevCmd")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1162"),"_prevScope")
         getproperty Qname(PackageNamespace(""),"reference")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setReturned") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function printHelp(... rest) : void
      {
         trait method Qname(PrivateNamespace(null,"1162"),"printHelp")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "____Command Line Help___"
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "/filter (text) = filter/search logs for matching text"
         pushbyte 5
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "/commands to see all slash commands"
         pushbyte 5
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "Press up/down arrow keys to recall previous line"
         pushbyte 2
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "__Examples:"
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "<b>stage.stageWidth</b>"
         pushbyte 5
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "<b>stage.scaleMode = flash.display.StageScaleMode.NO_SCALE</b>"
         pushbyte 5
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "<b>stage.frameRate = 12</b>"
         pushbyte 5
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         findpropstrict Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report")
         pushstring "__________"
         pushbyte 10
         callpropvoid Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"report") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

class FakeFunction
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private var line:String;
   
   private var run:Function;
   
   function FakeFunction(param1:Function, param2:String)
   {
      method
      name null
      param Qname(PackageNamespace(""),"Function")
      param Qname(PackageNamespace(""),"String")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 3
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      getlocal_0
      getlocal_1
      initproperty Qname(PrivateNamespace(null,"1164"),"run")
      getlocal_0
      getlocal_2
      initproperty Qname(PrivateNamespace(null,"1164"),"line")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function exec(... rest) : *
   {
      trait method Qname(PackageNamespace(""),"exec")
      dispid 0
      method
      name null
      flag NEED_REST
      returns null
      
      body
      maxstack 3
      localcount 2
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1164"),"line")
      getlocal_1
      callproperty Qname(PrivateNamespace(null,"1164"),"run") 2
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

class SlashCommand
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public var n:String;
   
   public var f:Function;
   
   public var d:String;
   
   public var user:Boolean;
   
   public var allow:Boolean;
   
   public var endMarker:String;
   
   function SlashCommand(param1:String, param2:Function, param3:String, param4:Boolean, param5:Boolean, param6:String)
   {
      method
      name null
      param Qname(PackageNamespace(""),"String")
      param Qname(PackageNamespace(""),"Function")
      param Qname(PackageNamespace(""),"String")
      param Qname(PackageNamespace(""),"Boolean")
      param Qname(PackageNamespace(""),"Boolean")
      param Qname(PackageNamespace(""),"String")
      returns null
      
      body
      maxstack 2
      localcount 7
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      getlocal_0
      getlocal_1
      initproperty Qname(PackageNamespace(""),"n")
      getlocal_0
      getlocal_2
      initproperty Qname(PackageNamespace(""),"f")
      getlocal_0
      getlocal_3
      iffalse ofs001b
      getlocal_3
      coerce_s
      jump ofs001d
      ofs001b:pushstring ""
      ofs001d:initproperty Qname(PackageNamespace(""),"d")
      getlocal_0
      getlocal 4
      initproperty Qname(PackageNamespace(""),"user")
      getlocal_0
      getlocal 5
      initproperty Qname(PackageNamespace(""),"allow")
      getlocal_0
      getlocal 6
      initproperty Qname(PackageNamespace(""),"endMarker")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

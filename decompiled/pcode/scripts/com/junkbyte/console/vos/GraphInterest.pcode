package com.junkbyte.console.vos
{
   import com.junkbyte.console.core.Executer;
   import flash.utils.ByteArray;
   
   public class GraphInterest
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _ref:WeakRef;
      
      public var _prop:String;
      
      private var useExec:Boolean;
      
      public var key:String;
      
      public var col:Number;
      
      public var v:Number;
      
      public var avg:Number;
      
      public function GraphInterest(param1:String = "", param2:Number = 0)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Number")
         optional ""
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"col")
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"key")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function FromBytes(param1:ByteArray) : GraphInterest
      {
         trait method Qname(PackageNamespace(""),"FromBytes")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace("com.junkbyte.console.vos"),"GraphInterest")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUTF") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         construct 2
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"GraphInterest")
         setlocal_2
         getlocal_2
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readDouble") 0
         setproperty Qname(PackageNamespace(""),"v")
         getlocal_2
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readDouble") 0
         setproperty Qname(PackageNamespace(""),"avg")
         getlocal_2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setObject(param1:Object, param2:String) : Number
      {
         trait method Qname(PackageNamespace(""),"setObject")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakRef")
         getlocal_1
         constructprop Qname(PackageNamespace("com.junkbyte.console.vos"),"WeakRef") 1
         initproperty Qname(PrivateNamespace(null,"1200"),"_ref")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"_prop")
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"_prop")
         getlex Qname(PackageNamespace(""),"RegExp")
         pushstring "[^\\w\\d]"
         construct 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"search") 1
         pushbyte 0
         greaterequals
         initproperty Qname(PrivateNamespace(null,"1200"),"useExec")
         getlocal_0
         getlocal_0
         callproperty Qname(PackageNamespace(""),"getCurrentValue") 0
         initproperty Qname(PackageNamespace(""),"v")
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"v")
         initproperty Qname(PackageNamespace(""),"avg")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"v")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get obj() : Object
      {
         trait getter Qname(PackageNamespace(""),"obj")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1200"),"_ref")
         pushnull
         ifeq ofs001b
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1200"),"_ref")
         getproperty Qname(PackageNamespace(""),"reference")
         coerce Qname(PackageNamespace(""),"Object")
         jump ofs0021
         ofs001b:getlex Qname(PackageNamespace(""),"undefined")
         coerce Qname(PackageNamespace(""),"Object")
         ofs0021:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get prop() : String
      {
         trait getter Qname(PackageNamespace(""),"prop")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"_prop")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getCurrentValue() : Number
      {
         trait method Qname(PackageNamespace(""),"getCurrentValue")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1200"),"useExec")
         iffalse ofs0023
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Executer")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"obj")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"_prop")
         callproperty Qname(PackageNamespace(""),"Exec") 2
         convert_d
         jump ofs0032
         ofs0023:getlocal_0
         getproperty Qname(PackageNamespace(""),"obj")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"_prop")
         getproperty MultinameL([PrivateNamespace(null,"1200"),PackageNamespace(""),PackageNamespace("com.junkbyte.console.vos"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"2122"),PackageInternalNs("com.junkbyte.console.vos"),ProtectedNamespace("com.junkbyte.console.vos:GraphInterest"),StaticProtectedNs("com.junkbyte.console.vos:GraphInterest")])
         convert_d
         ofs0032:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setValue(param1:Number, param2:uint = 0) : void
      {
         trait method Qname(PackageNamespace(""),"setValue")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"v")
         getlocal_2
         pushbyte 0
         ifngt ofs0047
         findpropstrict Qname(PackageNamespace(""),"isNaN")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"avg")
         callproperty Qname(PackageNamespace(""),"isNaN") 1
         iffalse ofs002f
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"v")
         initproperty Qname(PackageNamespace(""),"avg")
         jump ofs0047
         ofs002f:getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"avg")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"v")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"avg")
         subtract
         getlocal_2
         divide
         add
         initproperty Qname(PackageNamespace(""),"avg")
         ofs0047:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function toBytes(param1:ByteArray) : void
      {
         trait method Qname(PackageNamespace(""),"toBytes")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"key")
         callpropvoid Qname(PackageNamespace(""),"writeUTF") 1
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"col")
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"v")
         callpropvoid Qname(PackageNamespace(""),"writeDouble") 1
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"avg")
         callpropvoid Qname(PackageNamespace(""),"writeDouble") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.junkbyte.console
{
   import flash.display.DisplayObject;
   import flash.display.DisplayObjectContainer;
   import flash.display.LoaderInfo;
   import flash.events.Event;
   import flash.geom.Rectangle;
   
   public class Cc
   {
      
      private static var _console:Console;
      
      private static var _config:ConsoleConfig;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Cc()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get config() : ConsoleConfig
      {
         trait getter Qname(PackageNamespace(""),"config")
         flag FINAL
         dispid 3
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_config")
         iftrue ofs0019
         findproperty Qname(PrivateNamespace(null,"1295"),"_config")
         findpropstrict Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig")
         constructprop Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig") 0
         setproperty Qname(PrivateNamespace(null,"1295"),"_config")
         ofs0019:getlex Qname(PrivateNamespace(null,"1295"),"_config")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function start(param1:DisplayObjectContainer, param2:String = "") : void
      {
         trait method Qname(PackageNamespace(""),"start")
         flag FINAL
         dispid 4
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         param Qname(PackageNamespace(""),"String")
         optional ""
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs002b
         getlocal_1
         convert_b
         dup
         iffalse ofs001a
         pop
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"parent")
         not
         ofs001a:iffalse ofs0027
         getlocal_1
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         ofs0027:jump ofs004c
         ofs002b:findproperty Qname(PrivateNamespace(null,"1295"),"_console")
         findpropstrict Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getlocal_2
         getlex Qname(PackageNamespace(""),"config")
         constructprop Qname(PackageNamespace("com.junkbyte.console"),"Console") 2
         setproperty Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         iffalse ofs004c
         getlocal_1
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         ofs004c:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function startOnStage(param1:DisplayObject, param2:String = "") : void
      {
         trait method Qname(PackageNamespace(""),"startOnStage")
         flag FINAL
         dispid 5
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.display"),"DisplayObject")
         param Qname(PackageNamespace(""),"String")
         optional ""
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0040
         getlocal_1
         coerce_a
         convert_b
         dup
         iffalse ofs0019
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"stage")
         coerce_a
         convert_b
         ofs0019:dup
         iffalse ofs002c
         pop
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"parent")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"stage")
         equals
         not
         ofs002c:iffalse ofs003c
         getlocal_1
         getproperty Qname(PackageNamespace(""),"stage")
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         ofs003c:jump ofs0088
         ofs0040:getlocal_1
         convert_b
         dup
         iffalse ofs004d
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"stage")
         convert_b
         ofs004d:iffalse ofs0061
         findpropstrict Qname(PackageNamespace(""),"start")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"stage")
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"start") 2
         jump ofs0088
         ofs0061:findproperty Qname(PrivateNamespace(null,"1295"),"_console")
         findpropstrict Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getlocal_2
         getlex Qname(PackageNamespace(""),"config")
         constructprop Qname(PackageNamespace("com.junkbyte.console"),"Console") 2
         setproperty Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         iffalse ofs0088
         getlocal_1
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ADDED_TO_STAGE")
         getlex Qname(PrivateNamespace(null,"1295"),"addedToStageHandle")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         ofs0088:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function add(param1:*, param2:int = 2, param3:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"add")
         flag FINAL
         dispid 6
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         optional 2
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"add") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function ch(param1:*, param2:*, param3:int = 2, param4:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"ch")
         flag FINAL
         dispid 7
         method
         name null
         flag HAS_OPTIONAL
         param null
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         optional 2
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0017
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"ch") 4
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function log(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"log")
         flag FINAL
         dispid 8
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"log")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function info(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"info")
         flag FINAL
         dispid 9
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"info")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function debug(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"debug")
         flag FINAL
         dispid 10
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"debug")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function warn(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"warn")
         flag FINAL
         dispid 11
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"warn")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function error(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"error")
         flag FINAL
         dispid 12
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"error")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function fatal(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"fatal")
         flag FINAL
         dispid 13
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"fatal")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function logch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"logch")
         flag FINAL
         dispid 14
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs001b
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"LOG")
         callpropvoid Qname(PackageNamespace(""),"addCh") 3
         ofs001b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function infoch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"infoch")
         flag FINAL
         dispid 15
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs001b
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"INFO")
         callpropvoid Qname(PackageNamespace(""),"addCh") 3
         ofs001b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function debugch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"debugch")
         flag FINAL
         dispid 16
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs001b
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"DEBUG")
         callpropvoid Qname(PackageNamespace(""),"addCh") 3
         ofs001b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function warnch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"warnch")
         flag FINAL
         dispid 17
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs001b
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"WARN")
         callpropvoid Qname(PackageNamespace(""),"addCh") 3
         ofs001b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function errorch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"errorch")
         flag FINAL
         dispid 18
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs001b
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"ERROR")
         callpropvoid Qname(PackageNamespace(""),"addCh") 3
         ofs001b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function fatalch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"fatalch")
         flag FINAL
         dispid 19
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs001b
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"FATAL")
         callpropvoid Qname(PackageNamespace(""),"addCh") 3
         ofs001b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function stack(param1:*, param2:int = -1, param3:int = 5) : void
      {
         trait method Qname(PackageNamespace(""),"stack")
         flag FINAL
         dispid 20
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         optional -1
         optional 5
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"stack") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function stackch(param1:*, param2:*, param3:int = -1, param4:int = 5) : void
      {
         trait method Qname(PackageNamespace(""),"stackch")
         flag FINAL
         dispid 21
         method
         name null
         flag HAS_OPTIONAL
         param null
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         optional -1
         optional 5
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0017
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"stackch") 4
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function inspect(param1:Object, param2:Boolean = true) : void
      {
         trait method Qname(PackageNamespace(""),"inspect")
         flag FINAL
         dispid 22
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Boolean")
         optional true
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0014
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"inspect") 2
         ofs0014:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function inspectch(param1:*, param2:Object, param3:Boolean = true) : void
      {
         trait method Qname(PackageNamespace(""),"inspectch")
         flag FINAL
         dispid 23
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Boolean")
         optional true
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"inspectch") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function explode(param1:Object, param2:int = 3) : void
      {
         trait method Qname(PackageNamespace(""),"explode")
         flag FINAL
         dispid 24
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"int")
         optional 3
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0014
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"explode") 2
         ofs0014:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function explodech(param1:*, param2:Object, param3:int = 3) : void
      {
         trait method Qname(PackageNamespace(""),"explodech")
         flag FINAL
         dispid 25
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"int")
         optional 3
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"explodech") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addHTML(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"addHTML")
         flag FINAL
         dispid 26
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"addHTML")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addHTMLch(param1:*, param2:int, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"addHTMLch")
         flag FINAL
         dispid 27
         method
         name null
         flag NEED_REST
         param null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0024
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"addHTMLch")
         pushnull
         findpropstrict Qname(PackageNamespace(""),"Array")
         getlocal_1
         getlocal_2
         constructprop Qname(PackageNamespace(""),"Array") 2
         getlocal_3
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat") 1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0024:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function map(param1:DisplayObjectContainer, param2:uint = 0) : void
      {
         trait method Qname(PackageNamespace(""),"map")
         flag FINAL
         dispid 28
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0014
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"map") 2
         ofs0014:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function mapch(param1:*, param2:DisplayObjectContainer, param3:uint = 0) : void
      {
         trait method Qname(PackageNamespace(""),"mapch")
         flag FINAL
         dispid 29
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"mapch") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function clear(param1:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"clear")
         flag FINAL
         dispid 30
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0013
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"clear") 1
         ofs0013:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function bindKey(param1:KeyBind, param2:Function = null, param3:Array = null) : void
      {
         trait method Qname(PackageNamespace(""),"bindKey")
         flag FINAL
         dispid 31
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.junkbyte.console"),"KeyBind")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"Array")
         optional null
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"bindKey") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addMenu(param1:String, param2:Function, param3:Array = null, param4:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"addMenu")
         flag FINAL
         dispid 32
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"String")
         optional null
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0017
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"addMenu") 4
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function listenUncaughtErrors(param1:LoaderInfo) : void
      {
         trait method Qname(PackageNamespace(""),"listenUncaughtErrors")
         flag FINAL
         dispid 33
         method
         name null
         param Qname(PackageNamespace("flash.display"),"LoaderInfo")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0013
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"listenUncaughtErrors") 1
         ofs0013:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function store(param1:String, param2:Object, param3:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"store")
         flag FINAL
         dispid 34
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"store") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addSlashCommand(param1:String, param2:Function, param3:String = "", param4:Boolean = true, param5:String = ";") : void
      {
         trait method Qname(PackageNamespace(""),"addSlashCommand")
         flag FINAL
         dispid 35
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"String")
         optional ""
         optional true
         optional ";"
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0019
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         getlocal 5
         callpropvoid Qname(PackageNamespace(""),"addSlashCommand") 5
         ofs0019:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function watch(param1:Object, param2:String = null) : String
      {
         trait method Qname(PackageNamespace(""),"watch")
         flag FINAL
         dispid 36
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"watch") 2
         returnvalue
         ofs0015:pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function unwatch(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"unwatch")
         flag FINAL
         dispid 37
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0013
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"unwatch") 1
         ofs0013:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addGraph(param1:String, param2:Object, param3:String, param4:Number = -1, param5:String = null, param6:Rectangle = null, param7:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"addGraph")
         flag FINAL
         dispid 38
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace("flash.geom"),"Rectangle")
         param Qname(PackageNamespace(""),"Boolean")
         optional -1
         optional null
         optional null
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs001d
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         getlocal 5
         getlocal 6
         getlocal 7
         callpropvoid Qname(PackageNamespace(""),"addGraph") 7
         ofs001d:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function fixGraphRange(param1:String, param2:Number = NaN, param3:Number = NaN) : void
      {
         trait method Qname(PackageNamespace(""),"fixGraphRange")
         flag FINAL
         dispid 39
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         optional NaN
         optional NaN
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"fixGraphRange") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function removeGraph(param1:String, param2:Object = null, param3:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"removeGraph")
         flag FINAL
         dispid 40
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional null
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0015
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"removeGraph") 3
         ofs0015:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function setViewingChannels(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"setViewingChannels")
         flag FINAL
         dispid 41
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"setViewingChannels")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function setIgnoredChannels(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"setIgnoredChannels")
         flag FINAL
         dispid 42
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0018
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"setIgnoredChannels")
         pushnull
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         ofs0018:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function set minimumPriority(param1:uint) : void
      {
         trait setter Qname(PackageNamespace(""),"minimumPriority")
         flag FINAL
         dispid 43
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"minimumPriority")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get width() : Number
      {
         trait getter Qname(PackageNamespace(""),"width")
         flag FINAL
         dispid 44
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"width")
         returnvalue
         ofs0012:pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set width(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"width")
         flag FINAL
         dispid 45
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"width")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get height() : Number
      {
         trait getter Qname(PackageNamespace(""),"height")
         flag FINAL
         dispid 46
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"height")
         returnvalue
         ofs0012:pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set height(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"height")
         flag FINAL
         dispid 47
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"height")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get x() : Number
      {
         trait getter Qname(PackageNamespace(""),"x")
         flag FINAL
         dispid 48
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"x")
         returnvalue
         ofs0012:pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set x(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"x")
         flag FINAL
         dispid 49
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"x")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get y() : Number
      {
         trait getter Qname(PackageNamespace(""),"y")
         flag FINAL
         dispid 50
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"y")
         returnvalue
         ofs0012:pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set y(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"y")
         flag FINAL
         dispid 51
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"y")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get visible() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"visible")
         flag FINAL
         dispid 52
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"visible")
         returnvalue
         ofs0012:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set visible(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"visible")
         flag FINAL
         dispid 53
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"visible")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get fpsMonitor() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"fpsMonitor")
         flag FINAL
         dispid 54
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"fpsMonitor")
         returnvalue
         ofs0012:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set fpsMonitor(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"fpsMonitor")
         flag FINAL
         dispid 55
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"fpsMonitor")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get memoryMonitor() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"memoryMonitor")
         flag FINAL
         dispid 56
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"memoryMonitor")
         returnvalue
         ofs0012:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set memoryMonitor(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"memoryMonitor")
         flag FINAL
         dispid 57
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"memoryMonitor")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get commandLine() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"commandLine")
         flag FINAL
         dispid 58
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"commandLine")
         returnvalue
         ofs0012:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set commandLine(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"commandLine")
         flag FINAL
         dispid 59
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"commandLine")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get displayRoller() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"displayRoller")
         flag FINAL
         dispid 60
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"displayRoller")
         returnvalue
         ofs0012:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set displayRoller(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"displayRoller")
         flag FINAL
         dispid 61
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"displayRoller")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function setRollerCaptureKey(param1:String, param2:Boolean = false, param3:Boolean = false, param4:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"setRollerCaptureKey")
         flag FINAL
         dispid 62
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         optional false
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0017
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal 4
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"setRollerCaptureKey") 4
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function get remoting() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"remoting")
         flag FINAL
         dispid 63
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"remoting")
         returnvalue
         ofs0012:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function set remoting(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"remoting")
         flag FINAL
         dispid 64
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0012
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"remoting")
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function remotingSocket(param1:String, param2:int) : void
      {
         trait method Qname(PackageNamespace(""),"remotingSocket")
         flag FINAL
         dispid 65
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0014
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"remotingSocket") 2
         ofs0014:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function remove() : void
      {
         trait method Qname(PackageNamespace(""),"remove")
         flag FINAL
         dispid 66
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs002d
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"parent")
         iffalse ofs0024
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"parent")
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         callpropvoid Qname(PackageNamespace(""),"removeChild") 1
         ofs0024:findproperty Qname(PrivateNamespace(null,"1295"),"_console")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1295"),"_console")
         ofs002d:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getAllLog(param1:String = "\r\n") : String
      {
         trait method Qname(PackageNamespace(""),"getAllLog")
         flag FINAL
         dispid 67
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional "\r\n"
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         iffalse ofs0014
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"getAllLog") 1
         returnvalue
         ofs0014:pushstring ""
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function get instance() : Console
      {
         trait getter Qname(PackageNamespace(""),"instance")
         flag FINAL
         dispid 68
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console"),"Console")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function addedToStageHandle(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1295"),"addedToStageHandle")
         flag FINAL
         dispid 69
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"currentTarget")
         getlex Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         astypelate
         coerce Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setlocal_2
         getlocal_2
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ADDED_TO_STAGE")
         getlex Qname(PrivateNamespace(null,"1295"),"addedToStageHandle")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         convert_b
         dup
         iffalse ofs0030
         pop
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         getproperty Qname(PackageNamespace(""),"parent")
         pushnull
         equals
         ofs0030:iffalse ofs0040
         getlocal_2
         getproperty Qname(PackageNamespace(""),"stage")
         getlex Qname(PrivateNamespace(null,"1295"),"_console")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         ofs0040:returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.util.MoreColorUtil;
   import kabam.lib.math.easing.Quad;
   
   public class GildedParticle extends Particle
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var mSize:Number;
      
      private var fSize:Number = 0;
      
      private var go:GameObject;
      
      private var currentLife:int;
      
      private var lifetimeMS:int = 2500;
      
      private var radius:Number;
      
      private var armOffset:Number = 0;
      
      public var color1_:uint;
      
      public var color2_:uint;
      
      public var color3_:uint;
      
      public function GildedParticle(param1:GameObject, param2:Number, param3:Number, param4:Number, param5:Number, param6:int, param7:uint = 2556008, param8:uint = 2556008, param9:uint = 2556008)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         optional 2556008
         optional 2556008
         optional 2556008
         returns null
         
         body
         maxstack 4
         localcount 10
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         pushdouble 3.5
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         add
         initproperty Qname(PrivateNamespace(null,"1142"),"mSize")
         getlocal_0
         getlocal 7
         pushbyte 1
         pushbyte 0
         constructsuper 3
         getlocal_0
         getlocal 6
         initproperty Qname(PrivateNamespace(null,"1142"),"lifetimeMS")
         getlocal_0
         getlocal 5
         initproperty Qname(PrivateNamespace(null,"1142"),"radius")
         getlocal_0
         getlocal 7
         initproperty Qname(PackageNamespace(""),"color1_")
         getlocal_0
         getlocal 8
         initproperty Qname(PackageNamespace(""),"color2_")
         getlocal_0
         getlocal 9
         initproperty Qname(PackageNamespace(""),"color3_")
         findproperty Qname(PackageNamespace(""),"z_")
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"z_")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"1142"),"fSize")
         findproperty Qname(PackageNamespace(""),"size_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"fSize")
         initproperty Qname(PackageNamespace(""),"size_")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"1142"),"currentLife")
         getlocal_0
         getlocal 4
         initproperty Qname(PrivateNamespace(null,"1142"),"armOffset")
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1142"),"go")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 8
         localcount 9
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"currentLife")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"lifetimeMS")
         divide
         convert_d
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"mSize")
         getlex Qname(PackageNamespace(""),"size_")
         ifngt ofs0025
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"fSize")
         getlocal_2
         pushdouble 0.01
         multiply
         add
         initproperty Qname(PrivateNamespace(null,"1142"),"fSize")
         ofs0025:findproperty Qname(PackageNamespace(""),"size_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"fSize")
         initproperty Qname(PackageNamespace(""),"size_")
         getlex Qname(PackageNamespace("kabam.lib.math.easing"),"Quad")
         getlocal_3
         callproperty Qname(PackageNamespace(""),"easeOut") 1
         convert_d
         setlocal 4
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         getlocal 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"armOffset")
         add
         multiply
         convert_d
         setlocal 5
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"radius")
         pushbyte 1
         getlocal 4
         subtract
         multiply
         convert_d
         dup
         setlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"cos") 1
         multiply
         convert_d
         setlocal 7
         getlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"sin") 1
         multiply
         convert_d
         setlocal 8
         findpropstrict Qname(PackageNamespace(""),"moveTo")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"go")
         getproperty Qname(PackageNamespace(""),"x_")
         getlocal 7
         add
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"go")
         getproperty Qname(PackageNamespace(""),"y_")
         getlocal 8
         add
         callpropvoid Qname(PackageNamespace(""),"moveTo") 2
         getlocal_3
         pushdouble 0.33
         ifnlt ofs00c6
         findpropstrict Qname(PackageNamespace(""),"setColor")
         getlex Qname(PackageNamespace("com.company.util"),"MoreColorUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color3_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color2_")
         getlocal_0
         getlocal_3
         pushbyte 0
         pushdouble 0.33
         callproperty Qname(PackageNamespace(""),"normalizedRange") 3
         callproperty Qname(PackageNamespace(""),"lerpColor") 3
         callpropvoid Qname(PackageNamespace(""),"setColor") 1
         jump ofs00ee
         ofs00c6:getlocal_3
         pushdouble 0.5
         ifngt ofs00ee
         findpropstrict Qname(PackageNamespace(""),"setColor")
         getlex Qname(PackageNamespace("com.company.util"),"MoreColorUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color2_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color1_")
         getlocal_0
         getlocal_3
         pushdouble 0.5
         pushbyte 1
         callproperty Qname(PackageNamespace(""),"normalizedRange") 3
         callproperty Qname(PackageNamespace(""),"lerpColor") 3
         callpropvoid Qname(PackageNamespace(""),"setColor") 1
         ofs00ee:getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1142"),"currentLife")
         getlocal_2
         add
         initproperty Qname(PrivateNamespace(null,"1142"),"currentLife")
         getlocal_3
         pushbyte 1
         lessthan
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function normalizedRange(param1:Number, param2:Number, param3:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"normalizedRange")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_2
         subtract
         getlocal_3
         getlocal_2
         subtract
         divide
         convert_d
         dup
         setlocal 4
         pushbyte 0
         ifnlt ofs001c
         pushbyte 0
         convert_d
         setlocal 4
         jump ofs0029
         ofs001c:getlocal 4
         pushbyte 1
         ifngt ofs0029
         pushbyte 1
         convert_d
         setlocal 4
         ofs0029:getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

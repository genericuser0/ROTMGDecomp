package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   
   public class HealEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var go_:GameObject;
      
      public var color1_:uint;
      
      public var color2_:uint;
      
      public function HealEffect(param1:GameObject, param2:uint, param3:uint = 16777215)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         optional 16777215
         returns null
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"go_")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"color1_")
         getlocal_0
         getlocal_3
         pushint 16777215
         ifne ofs0020
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color1_")
         convert_u
         jump ofs0022
         ofs0020:getlocal_3
         convert_u
         ofs0022:initproperty Qname(PackageNamespace(""),"color2_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 10
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 5
         pushbyte 0
         setlocal 6
         pushnan
         setlocal 7
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"HealParticle")
         setlocal 8
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"map_")
         pushnull
         ifne ofs0020
         pushfalse
         returnvalue
         ofs0020:findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"x_")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"y_")
         initproperty Qname(PackageNamespace(""),"y_")
         pushbyte 10
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs00ec
         ofs0045:label
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         getlocal 4
         getlocal_3
         divide
         multiply
         convert_d
         setlocal 5
         pushbyte 3
         findpropstrict Qname(PackageNamespace(""),"int")
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushbyte 5
         multiply
         callproperty Qname(PackageNamespace(""),"int") 1
         add
         pushbyte 20
         multiply
         convert_i
         setlocal 6
         pushdouble 0.3
         pushdouble 0.4
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         add
         convert_d
         setlocal 7
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"HealParticle")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color1_")
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushdouble 0.3
         multiply
         getlocal 6
         pushshort 1000
         pushdouble 0.1
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushdouble 0.1
         multiply
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getlocal 5
         getlocal 7
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color2_")
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"HealParticle") 9
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"HealParticle")
         setlocal 8
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 8
         getlex Qname(PackageNamespace(""),"x_")
         getlocal 7
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"cos") 1
         multiply
         add
         getlex Qname(PackageNamespace(""),"y_")
         getlocal 7
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"sin") 1
         multiply
         add
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 4
         ofs00ec:getlocal 4
         getlocal_3
         iflt ofs0045
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

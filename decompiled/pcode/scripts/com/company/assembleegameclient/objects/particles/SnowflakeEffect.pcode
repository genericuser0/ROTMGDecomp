package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.assembleegameclient.util.ColorUtil;
   import flash.geom.Point;
   
   public class SnowflakeEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var start_:Point;
      
      public var color1_:int;
      
      public var color2_:int;
      
      public var minRad_:Number;
      
      public var maxRad_:Number;
      
      public var maxLife_:int;
      
      public function SnowflakeEffect(param1:GameObject, param2:EffectProperties)
      {
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"EffectProperties")
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"color")
         initproperty Qname(PackageNamespace(""),"color1_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"color2")
         initproperty Qname(PackageNamespace(""),"color2_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"minRadius")
         initproperty Qname(PackageNamespace(""),"minRad_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"maxRadius")
         initproperty Qname(PackageNamespace(""),"maxRad_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"life")
         pushshort 1000
         multiply
         initproperty Qname(PackageNamespace(""),"maxLife_")
         findproperty Qname(PackageNamespace(""),"size_")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"size")
         initproperty Qname(PackageNamespace(""),"size_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function run(param1:int, param2:int, param3:int) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"934"),"run")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 7
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         setlocal 6
         pushnan
         setlocal 7
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 8
         getlocal_0
         getproperty Qname(PackageNamespace(""),"minRad_")
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"maxRad_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"minRad_")
         subtract
         multiply
         add
         convert_d
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs0083
         ofs0031:label
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"ColorUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color1_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color2_")
         callproperty Qname(PackageNamespace(""),"rangeRandomSmart") 2
         convert_i
         setlocal 6
         getlocal 5
         pushbyte 2
         multiply
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         getlocal_3
         divide
         convert_d
         setlocal 7
         findpropstrict Qname(PrivateNamespace(null,"935"),"SnowflakeParticle")
         getlex Qname(PackageNamespace(""),"size_")
         getlocal 6
         getlocal_0
         getproperty Qname(PackageNamespace(""),"maxLife_")
         getlocal 7
         getlocal 4
         pushtrue
         constructprop Qname(PrivateNamespace(null,"935"),"SnowflakeParticle") 6
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 8
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 8
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 5
         ofs0083:getlocal 5
         getlocal_3
         iflt ofs0031
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function runNormalRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runNormalRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlocal_2
         pushbyte 6
         callproperty Qname(PrivateNamespace(null,"934"),"run") 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function runEasyRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runEasyRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlocal_2
         pushbyte 6
         callproperty Qname(PrivateNamespace(null,"934"),"run") 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

import com.company.assembleegameclient.objects.particles.Particle;
import com.company.assembleegameclient.objects.particles.SparkParticle;
import com.company.assembleegameclient.util.MathUtil;
import com.company.assembleegameclient.util.RandomUtil;

class SnowflakeParticle extends Particle
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private var timeLeft_:int;
   
   private var angle_:Number;
   
   private var radius_:Number;
   
   private var dx_:Number;
   
   private var dy_:Number;
   
   private var split_:Boolean;
   
   private var timeSplit_:int;
   
   function SnowflakeParticle(param1:int, param2:int, param3:int, param4:Number, param5:Number, param6:Boolean = false)
   {
      method
      name null
      flag HAS_OPTIONAL
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"Number")
      param Qname(PackageNamespace(""),"Number")
      param Qname(PackageNamespace(""),"Boolean")
      optional false
      returns null
      
      body
      maxstack 4
      localcount 7
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_2
      pushbyte 0
      getlocal_1
      constructsuper 3
      getlocal_0
      getlocal_3
      initproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      getlocal_0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      pushdouble 0.5
      multiply
      initproperty Qname(PrivateNamespace(null,"936"),"timeSplit_")
      getlocal_0
      getlocal 4
      initproperty Qname(PrivateNamespace(null,"936"),"angle_")
      getlocal_0
      getlocal 5
      initproperty Qname(PrivateNamespace(null,"936"),"radius_")
      getlocal_0
      getlocal 5
      getlex Qname(PackageNamespace(""),"Math")
      getlocal 4
      callproperty Qname(PackageNamespace(""),"cos") 1
      multiply
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      divide
      initproperty Qname(PrivateNamespace(null,"936"),"dx_")
      getlocal_0
      getlocal 5
      getlex Qname(PackageNamespace(""),"Math")
      getlocal 4
      callproperty Qname(PackageNamespace(""),"sin") 1
      multiply
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      divide
      initproperty Qname(PrivateNamespace(null,"936"),"dy_")
      getlocal_0
      getlocal 6
      initproperty Qname(PrivateNamespace(null,"936"),"split_")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   override public function update(param1:int, param2:int) : Boolean
   {
      trait method Qname(PackageNamespace(""),"update")
      flag OVERRIDE
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 9
      localcount 3
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      getlocal_2
      subtract
      initproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      pushbyte 0
      ifnle ofs0018
      pushfalse
      returnvalue
      ofs0018:findpropstrict Qname(PackageNamespace(""),"moveTo")
      getlex Qname(PackageNamespace(""),"x_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"dx_")
      getlocal_2
      multiply
      add
      getlex Qname(PackageNamespace(""),"y_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"dy_")
      getlocal_2
      multiply
      add
      callpropvoid Qname(PackageNamespace(""),"moveTo") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"split_")
      convert_b
      dup
      iffalse ofs0047
      pop
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeSplit_")
      lessthan
      ofs0047:iffalse ofs00b8
      getlex Qname(PackageNamespace(""),"map_")
      findpropstrict Qname(PrivateNamespace(null,"935"),"SnowflakeParticle")
      getlex Qname(PackageNamespace(""),"size_")
      getlex Qname(PackageNamespace(""),"color_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"angle_")
      pushbyte 60
      getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"MathUtil")
      getproperty Qname(PackageNamespace(""),"TO_RAD")
      multiply
      add
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"radius_")
      pushdouble 0.5
      multiply
      constructprop Qname(PrivateNamespace(null,"935"),"SnowflakeParticle") 5
      getlex Qname(PackageNamespace(""),"x_")
      getlex Qname(PackageNamespace(""),"y_")
      callpropvoid Qname(PackageNamespace(""),"addObj") 3
      getlex Qname(PackageNamespace(""),"map_")
      findpropstrict Qname(PrivateNamespace(null,"935"),"SnowflakeParticle")
      getlex Qname(PackageNamespace(""),"size_")
      getlex Qname(PackageNamespace(""),"color_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"timeLeft_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"angle_")
      pushbyte 60
      getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"MathUtil")
      getproperty Qname(PackageNamespace(""),"TO_RAD")
      multiply
      subtract
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"936"),"radius_")
      pushdouble 0.5
      multiply
      constructprop Qname(PrivateNamespace(null,"935"),"SnowflakeParticle") 5
      getlex Qname(PackageNamespace(""),"x_")
      getlex Qname(PackageNamespace(""),"y_")
      callpropvoid Qname(PackageNamespace(""),"addObj") 3
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"936"),"split_")
      ofs00b8:getlex Qname(PackageNamespace(""),"map_")
      findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle")
      pushbyte 100
      getlex Qname(PackageNamespace(""),"z_")
      pushbyte 1
      add
      multiply
      getlex Qname(PackageNamespace(""),"color_")
      pushshort 600
      getlex Qname(PackageNamespace(""),"z_")
      getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
      pushbyte 1
      callproperty Qname(PackageNamespace(""),"plusMinus") 1
      getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
      pushbyte 1
      callproperty Qname(PackageNamespace(""),"plusMinus") 1
      constructprop Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle") 6
      getlex Qname(PackageNamespace(""),"x_")
      getlex Qname(PackageNamespace(""),"y_")
      callpropvoid Qname(PackageNamespace(""),"addObj") 3
      pushtrue
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.assembleegameclient.util.RandomUtil;
   
   public class PoisonEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var go_:GameObject;
      
      public var color_:int;
      
      public function PoisonEffect(param1:GameObject, param2:int)
      {
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace(""),"int")
         returns null
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"go_")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"color_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 9
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"map_")
         pushnull
         ifne ofs0010
         pushfalse
         returnvalue
         ofs0010:findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"x_")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"y_")
         initproperty Qname(PackageNamespace(""),"y_")
         pushbyte 10
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs006b
         ofs0035:label
         getlex Qname(PackageNamespace(""),"map_")
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle")
         pushbyte 100
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color_")
         pushshort 400
         pushdouble 0.75
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         pushbyte 4
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         pushbyte 4
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle") 6
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 4
         ofs006b:getlocal 4
         getlocal_3
         iflt ofs0035
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

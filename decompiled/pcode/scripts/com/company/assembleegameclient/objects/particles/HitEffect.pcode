package com.company.assembleegameclient.objects.particles
{
   public class HitEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var colors_:Vector.<uint>;
      
      public var numParts_:int;
      
      public var angle_:Number;
      
      public var speed_:Number;
      
      public function HitEffect(param1:Vector.<uint>, param2:int, param3:int, param4:Number, param5:Number)
      {
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"uint")>)
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns null
         
         body
         maxstack 2
         localcount 6
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"colors_")
         findproperty Qname(PackageNamespace(""),"size_")
         getlocal_2
         initproperty Qname(PackageNamespace(""),"size_")
         getlocal_0
         getlocal_3
         initproperty Qname(PackageNamespace(""),"numParts_")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"angle_")
         getlocal_0
         getlocal 5
         initproperty Qname(PackageNamespace(""),"speed_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function runNormalRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runNormalRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 9
         localcount 8
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 6
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         getlocal_0
         getproperty Qname(PackageNamespace(""),"colors_")
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs001c
         pushfalse
         returnvalue
         ofs001c:getlocal_0
         getproperty Qname(PackageNamespace(""),"speed_")
         pushshort 600
         divide
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"angle_")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         add
         callproperty Qname(PackageNamespace(""),"cos") 1
         multiply
         convert_d
         setlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"speed_")
         pushshort 600
         divide
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"angle_")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         add
         callproperty Qname(PackageNamespace(""),"sin") 1
         multiply
         convert_d
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs00de
         ofs0067:label
         getlocal_0
         getproperty Qname(PackageNamespace(""),"colors_")
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"colors_")
         getproperty Qname(PackageNamespace(""),"length")
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         callproperty Qname(PackageNamespace(""),"int") 1
         getproperty MultinameL([PrivateNamespace(null,"1863"),PackageNamespace(""),PackageNamespace("com.company.assembleegameclient.objects.particles"),PrivateNamespace(null,"921"),PackageInternalNs("com.company.assembleegameclient.objects.particles"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.objects.particles:HitEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:HitEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:ParticleEffect"),StaticProtectedNs("com.company.assembleegameclient.objects:GameObject"),StaticProtectedNs("com.company.assembleegameclient.objects:BasicObject")])
         convert_u
         setlocal 6
         findpropstrict Qname(PrivateNamespace(null,"921"),"HitParticle")
         getlocal 6
         pushdouble 0.5
         getlex Qname(PackageNamespace(""),"size_")
         pushshort 200
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushbyte 100
         multiply
         add
         getlocal_3
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushdouble 0.5
         subtract
         pushdouble 0.4
         multiply
         add
         getlocal 4
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushdouble 0.5
         subtract
         pushdouble 0.4
         multiply
         add
         pushbyte 0
         constructprop Qname(PrivateNamespace(null,"921"),"HitParticle") 7
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 7
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 5
         ofs00de:getlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"numParts_")
         iflt ofs0067
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function runEasyRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runEasyRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 9
         localcount 8
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 6
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         getlocal_0
         getproperty Qname(PackageNamespace(""),"colors_")
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs001c
         pushfalse
         returnvalue
         ofs001c:getlocal_0
         getproperty Qname(PackageNamespace(""),"speed_")
         pushshort 600
         divide
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"angle_")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         add
         callproperty Qname(PackageNamespace(""),"cos") 1
         multiply
         convert_d
         setlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"speed_")
         pushshort 600
         divide
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"angle_")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         add
         callproperty Qname(PackageNamespace(""),"sin") 1
         multiply
         convert_d
         setlocal 4
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"numParts_")
         pushdouble 0.2
         multiply
         initproperty Qname(PackageNamespace(""),"numParts_")
         pushbyte 0
         setlocal 5
         jump ofs00e7
         ofs0072:label
         getlocal_0
         getproperty Qname(PackageNamespace(""),"colors_")
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"colors_")
         getproperty Qname(PackageNamespace(""),"length")
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         callproperty Qname(PackageNamespace(""),"int") 1
         getproperty MultinameL([PrivateNamespace(null,"1863"),PackageNamespace(""),PackageNamespace("com.company.assembleegameclient.objects.particles"),PrivateNamespace(null,"921"),PackageInternalNs("com.company.assembleegameclient.objects.particles"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.objects.particles:HitEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:HitEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:ParticleEffect"),StaticProtectedNs("com.company.assembleegameclient.objects:GameObject"),StaticProtectedNs("com.company.assembleegameclient.objects:BasicObject")])
         convert_u
         setlocal 6
         findpropstrict Qname(PrivateNamespace(null,"921"),"HitParticle")
         getlocal 6
         pushdouble 0.5
         pushbyte 10
         pushbyte 5
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushbyte 100
         multiply
         add
         getlocal_3
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushdouble 0.5
         subtract
         pushdouble 0.4
         multiply
         add
         getlocal 4
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushdouble 0.5
         subtract
         pushdouble 0.4
         multiply
         add
         pushbyte 0
         constructprop Qname(PrivateNamespace(null,"921"),"HitParticle") 7
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 7
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 5
         ofs00e7:getlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"numParts_")
         iflt ofs0072
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

import com.company.assembleegameclient.objects.particles.Particle;
import flash.geom.Vector3D;

class HitParticle extends Particle
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public var lifetime_:int;
   
   public var timeLeft_:int;
   
   protected var moveVec_:Vector3D;
   
   function HitParticle(param1:uint, param2:Number, param3:int, param4:int, param5:Number, param6:Number, param7:Number)
   {
      method
      name null
      param Qname(PackageNamespace(""),"uint")
      param Qname(PackageNamespace(""),"Number")
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"Number")
      param Qname(PackageNamespace(""),"Number")
      param Qname(PackageNamespace(""),"Number")
      returns null
      
      body
      maxstack 4
      localcount 9
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
      constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 0
      initproperty Qname(ProtectedNamespace("HitEffect.as$1185:HitParticle"),"moveVec_")
      getlocal_0
      getlocal_1
      getlocal_2
      getlocal_3
      constructsuper 3
      getlocal_0
      getlocal_0
      getlocal 4
      dup
      setlocal 8
      initproperty Qname(PackageNamespace(""),"lifetime_")
      getlocal 8
      kill 8
      initproperty Qname(PackageNamespace(""),"timeLeft_")
      getlocal_0
      getproperty Qname(ProtectedNamespace("HitEffect.as$1185:HitParticle"),"moveVec_")
      getlocal 5
      setproperty Qname(PackageNamespace(""),"x")
      getlocal_0
      getproperty Qname(ProtectedNamespace("HitEffect.as$1185:HitParticle"),"moveVec_")
      getlocal 6
      setproperty Qname(PackageNamespace(""),"y")
      getlocal_0
      getproperty Qname(ProtectedNamespace("HitEffect.as$1185:HitParticle"),"moveVec_")
      getlocal 7
      setproperty Qname(PackageNamespace(""),"z")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   override public function update(param1:int, param2:int) : Boolean
   {
      trait method Qname(PackageNamespace(""),"update")
      flag OVERRIDE
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 4
      localcount 3
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_0
      getproperty Qname(PackageNamespace(""),"timeLeft_")
      getlocal_2
      subtract
      initproperty Qname(PackageNamespace(""),"timeLeft_")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"timeLeft_")
      pushbyte 0
      ifnle ofs0018
      pushfalse
      returnvalue
      ofs0018:findproperty Qname(PackageNamespace(""),"x_")
      getlex Qname(PackageNamespace(""),"x_")
      getlocal_0
      getproperty Qname(ProtectedNamespace("HitEffect.as$1185:HitParticle"),"moveVec_")
      getproperty Qname(PackageNamespace(""),"x")
      getlocal_2
      multiply
      pushdouble 0.008
      multiply
      add
      initproperty Qname(PackageNamespace(""),"x_")
      findproperty Qname(PackageNamespace(""),"y_")
      getlex Qname(PackageNamespace(""),"y_")
      getlocal_0
      getproperty Qname(ProtectedNamespace("HitEffect.as$1185:HitParticle"),"moveVec_")
      getproperty Qname(PackageNamespace(""),"y")
      getlocal_2
      multiply
      pushdouble 0.008
      multiply
      add
      initproperty Qname(PackageNamespace(""),"y_")
      findproperty Qname(PackageNamespace(""),"z_")
      getlex Qname(PackageNamespace(""),"z_")
      getlocal_0
      getproperty Qname(ProtectedNamespace("HitEffect.as$1185:HitParticle"),"moveVec_")
      getproperty Qname(PackageNamespace(""),"z")
      getlocal_2
      multiply
      pushdouble 0.008
      multiply
      add
      initproperty Qname(PackageNamespace(""),"z_")
      pushtrue
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

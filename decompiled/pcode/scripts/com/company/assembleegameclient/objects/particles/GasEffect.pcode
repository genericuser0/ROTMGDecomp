package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.assembleegameclient.util.RandomUtil;
   
   public class GasEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var go_:GameObject;
      
      public var props:EffectProperties;
      
      public var color_:int;
      
      public var rate:Number;
      
      public var type:String;
      
      public function GasEffect(param1:GameObject, param2:EffectProperties)
      {
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"EffectProperties")
         returns null
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"go_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"color")
         initproperty Qname(PackageNamespace(""),"color_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"rate")
         initproperty Qname(PackageNamespace(""),"rate")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"props")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 8
         localcount 11
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 5
         pushnan
         setlocal 6
         pushnan
         setlocal 7
         pushnan
         setlocal 8
         pushnan
         setlocal 9
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"GasParticle")
         setlocal 10
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"map_")
         pushnull
         ifne ofs0025
         pushfalse
         returnvalue
         ofs0025:findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"x_")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"y_")
         initproperty Qname(PackageNamespace(""),"y_")
         pushbyte 20
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs010f
         ofs004a:label
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         pushdouble 0.3
         add
         pushshort 200
         multiply
         convert_d
         setlocal 5
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         convert_d
         setlocal 6
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"speed")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"speed")
         getlocal 6
         pushbyte 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"speedVariance")
         subtract
         multiply
         multiply
         subtract
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         convert_d
         setlocal 7
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"speed")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"speed")
         getlocal 6
         pushbyte 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"speedVariance")
         subtract
         multiply
         multiply
         subtract
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         convert_d
         setlocal 8
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"life")
         pushshort 1000
         multiply
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"life")
         pushshort 1000
         multiply
         getlocal 6
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"lifeVariance")
         multiply
         multiply
         subtract
         convert_d
         setlocal 9
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"GasParticle")
         getlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color_")
         getlocal 9
         getlocal_0
         getproperty Qname(PackageNamespace(""),"props")
         getproperty Qname(PackageNamespace(""),"spread")
         pushdouble 0.75
         getlocal 7
         getlocal 8
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"GasParticle") 7
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"GasParticle")
         setlocal 10
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 10
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 4
         ofs010f:getlocal 4
         getlocal_0
         getproperty Qname(PackageNamespace(""),"rate")
         iflt ofs004a
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

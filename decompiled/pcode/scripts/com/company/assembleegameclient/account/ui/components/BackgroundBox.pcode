package com.company.assembleegameclient.account.ui.components
{
   import flash.display.Shape;
   
   public class BackgroundBox extends Shape
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _width:int;
      
      private var _height:int;
      
      private var _color:int;
      
      public function BackgroundBox()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setSize(param1:int, param2:int) : void
      {
         trait method Qname(PackageNamespace(""),"setSize")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1149"),"_width")
         getlocal_0
         getlocal_2
         initproperty Qname(PrivateNamespace(null,"1149"),"_height")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1149"),"drawFill") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setColor(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setColor")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1149"),"_color")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1149"),"drawFill") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function drawFill() : void
      {
         trait method Qname(PrivateNamespace(null,"1149"),"drawFill")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"clear") 0
         getlex Qname(PackageNamespace(""),"graphics")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1149"),"_color")
         callpropvoid Qname(PackageNamespace(""),"beginFill") 1
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 0
         dup
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1149"),"_width")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1149"),"_height")
         callpropvoid Qname(PackageNamespace(""),"drawRect") 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

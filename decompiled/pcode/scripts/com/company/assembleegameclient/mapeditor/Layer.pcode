package com.company.assembleegameclient.mapeditor
{
   public class Layer
   {
      
      public static const GROUND:int = 0;
      
      public static const OBJECT:int = 1;
      
      public static const REGION:int = 2;
      
      public static const NUM_LAYERS:int = 3;
      
      public static const EMPTY_TILE:Vector.<int>;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 5
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"GROUND")
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"GROUND")
         findproperty Qname(PackageNamespace(""),"OBJECT")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"OBJECT")
         findproperty Qname(PackageNamespace(""),"REGION")
         pushbyte 2
         initproperty Qname(PackageNamespace(""),"REGION")
         findproperty Qname(PackageNamespace(""),"NUM_LAYERS")
         pushbyte 3
         initproperty Qname(PackageNamespace(""),"NUM_LAYERS")
         findproperty Qname(PackageNamespace(""),"EMPTY_TILE")
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"1940"),PackageNamespace(""),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1941"),PackageNamespace("com.company.assembleegameclient.mapeditor"),PackageInternalNs("com.company.assembleegameclient.mapeditor"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.mapeditor:Layer"),StaticProtectedNs("com.company.assembleegameclient.mapeditor:Layer")])
         getlex Qname(PackageNamespace(""),"int")
         applytype 1
         pushbyte 3
         construct 1
         dup
         pushbyte 0
         pushbyte -1
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 1
         pushbyte -1
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 2
         pushbyte -1
         setproperty MultinameL([PackageNamespace("")])
         initproperty Qname(PackageNamespace(""),"EMPTY_TILE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Layer()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

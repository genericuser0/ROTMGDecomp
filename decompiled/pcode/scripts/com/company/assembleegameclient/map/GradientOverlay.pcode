package com.company.assembleegameclient.map
{
   import com.company.util.GraphicsUtil;
   import flash.display.GradientType;
   import flash.display.GraphicsGradientFill;
   import flash.display.GraphicsPath;
   import flash.display.IGraphicsData;
   import flash.display.Shape;
   
   public class GradientOverlay extends Shape
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const gradientFill_:GraphicsGradientFill;
      
      private const gradientPath_:GraphicsPath;
      
      private const gradientGraphicsData_:Vector.<IGraphicsData>;
      
      public function GradientOverlay()
      {
         method
         name null
         returns null
         
         body
         maxstack 9
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.display"),"GraphicsGradientFill")
         getlex Qname(PackageNamespace("flash.display"),"GradientType")
         getproperty Qname(PackageNamespace(""),"LINEAR")
         pushbyte 0
         dup
         newarray 2
         pushdouble 0.0
         pushbyte 1
         newarray 2
         pushbyte 0
         pushshort 255
         newarray 2
         getlex Qname(PackageNamespace("com.company.util"),"GraphicsUtil")
         pushbyte 10
         pushshort 600
         callproperty Qname(PackageNamespace(""),"getGradientMatrix") 2
         constructprop Qname(PackageNamespace("flash.display"),"GraphicsGradientFill") 5
         initproperty Qname(PrivateNamespace(null,"737"),"gradientFill_")
         getlocal_0
         getlex Qname(PackageNamespace("com.company.util"),"GraphicsUtil")
         pushbyte 0
         dup
         pushbyte 10
         pushshort 600
         callproperty Qname(PackageNamespace(""),"getRectPath") 4
         initproperty Qname(PrivateNamespace(null,"737"),"gradientPath_")
         getlocal_0
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"737"),PackageNamespace(""),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1737"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:GradientOverlay"),StaticProtectedNs("com.company.assembleegameclient.map:GradientOverlay"),StaticProtectedNs("flash.display:Shape"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         getlex Qname(PackageNamespace("flash.display"),"IGraphicsData")
         applytype 1
         pushbyte 3
         construct 1
         dup
         pushbyte 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"737"),"gradientFill_")
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"737"),"gradientPath_")
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 2
         getlex Qname(PackageNamespace("com.company.util"),"GraphicsUtil")
         getproperty Qname(PackageNamespace(""),"END_FILL")
         setproperty MultinameL([PackageNamespace("")])
         initproperty Qname(PrivateNamespace(null,"737"),"gradientGraphicsData_")
         getlocal_0
         constructsuper 0
         getlex Qname(PackageNamespace(""),"graphics")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"737"),"gradientGraphicsData_")
         callpropvoid Qname(PackageNamespace(""),"drawGraphicsData") 1
         findproperty Qname(PackageNamespace(""),"visible")
         pushfalse
         initproperty Qname(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

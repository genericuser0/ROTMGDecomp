package com.company.assembleegameclient.map
{
   import com.company.assembleegameclient.background.Background;
   import com.company.assembleegameclient.game.AGameSprite;
   import com.company.assembleegameclient.map.mapoverlay.MapOverlay;
   import com.company.assembleegameclient.map.partyoverlay.PartyOverlay;
   import com.company.assembleegameclient.objects.BasicObject;
   import com.company.assembleegameclient.objects.Party;
   import com.company.assembleegameclient.objects.Player;
   import flash.display.Sprite;
   import flash.geom.Point;
   import flash.utils.Dictionary;
   import org.osflash.signals.Signal;
   
   public class AbstractMap extends Sprite
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var goDict_:Dictionary;
      
      public var gs_:AGameSprite;
      
      public var name_:String;
      
      public var player_:Player = null;
      
      public var showDisplays_:Boolean;
      
      public var width_:int;
      
      public var height_:int;
      
      public var back_:int;
      
      protected var allowPlayerTeleport_:Boolean;
      
      public var background_:Background = null;
      
      public var map_:Sprite;
      
      public var mapHitArea:Sprite;
      
      public var hurtOverlay_:HurtOverlay = null;
      
      public var gradientOverlay_:GradientOverlay = null;
      
      public var mapOverlay_:MapOverlay = null;
      
      public var partyOverlay_:PartyOverlay = null;
      
      public var squareList_:Vector.<Square#93>;
      
      public var squares_:Vector.<Square#93>;
      
      public var boDict_:Dictionary;
      
      public var merchLookup_:Object;
      
      public var party_:Party = null;
      
      public var quest_:Quest = null;
      
      public var signalRenderSwitch:Signal;
      
      protected var wasLastFrameGpu:Boolean = false;
      
      public var isPetYard:Boolean = false;
      
      public var isQuestRoom:Boolean = false;
      
      public function AbstractMap()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.utils"),"Dictionary")
         constructprop Qname(PackageNamespace("flash.utils"),"Dictionary") 0
         initproperty Qname(PackageNamespace(""),"goDict_")
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.display"),"Sprite")
         constructprop Qname(PackageNamespace("flash.display"),"Sprite") 0
         initproperty Qname(PackageNamespace(""),"map_")
         getlocal_0
         getlex Multiname("Vector",[PrivateNamespace(null,"1442"),PackageNamespace(""),PrivateNamespace(null,"1443"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:AbstractMap"),StaticProtectedNs("com.company.assembleegameclient.map:AbstractMap"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         applytype 1
         construct 0
         initproperty Qname(PackageNamespace(""),"squareList_")
         getlocal_0
         getlex Multiname("Vector",[PrivateNamespace(null,"1442"),PackageNamespace(""),PrivateNamespace(null,"1443"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:AbstractMap"),StaticProtectedNs("com.company.assembleegameclient.map:AbstractMap"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         applytype 1
         construct 0
         initproperty Qname(PackageNamespace(""),"squares_")
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.utils"),"Dictionary")
         constructprop Qname(PackageNamespace("flash.utils"),"Dictionary") 0
         initproperty Qname(PackageNamespace(""),"boDict_")
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Object")
         constructprop Qname(PackageNamespace(""),"Object") 0
         initproperty Qname(PackageNamespace(""),"merchLookup_")
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         getlex Qname(PackageNamespace(""),"Boolean")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 1
         initproperty Qname(PackageNamespace(""),"signalRenderSwitch")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setProps(param1:int, param2:int, param3:String, param4:int, param5:Boolean, param6:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setProps")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 7
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setHitAreaProps(param1:int, param2:int) : void
      {
         trait method Qname(PackageNamespace(""),"setHitAreaProps")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addObj(param1:BasicObject, param2:Number, param3:Number) : void
      {
         trait method Qname(PackageNamespace(""),"addObj")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"BasicObject")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setGroundTile(param1:int, param2:int, param3:uint) : void
      {
         trait method Qname(PackageNamespace(""),"setGroundTile")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function initialize() : void
      {
         trait method Qname(PackageNamespace(""),"initialize")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function dispose() : void
      {
         trait method Qname(PackageNamespace(""),"dispose")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function update(param1:int, param2:int) : void
      {
         trait method Qname(PackageNamespace(""),"update")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function pSTopW(param1:Number, param2:Number) : Point
      {
         trait method Qname(PackageNamespace(""),"pSTopW")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function removeObj(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"removeObj")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function draw(param1:Camera, param2:int) : void
      {
         trait method Qname(PackageNamespace(""),"draw")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.map"),"Camera")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function allowPlayerTeleport() : Boolean
      {
         trait method Qname(PackageNamespace(""),"allowPlayerTeleport")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"name_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"Map")
         getproperty Qname(PackageNamespace(""),"NEXUS")
         equals
         not
         dup
         iffalse ofs001a
         pop
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.company.assembleegameclient.map:AbstractMap"),"allowPlayerTeleport_")
         convert_b
         ofs001a:returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

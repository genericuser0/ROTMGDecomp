package com.company.assembleegameclient.engine3d
{
   import flash.geom.Vector3D;
   
   public class Plane3D
   {
      
      public static const NONE:int = 0;
      
      public static const POSITIVE:int = 1;
      
      public static const NEGATIVE:int = 2;
      
      public static const EQUAL:int = 3;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"NONE")
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"NONE")
         findproperty Qname(PackageNamespace(""),"POSITIVE")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"POSITIVE")
         findproperty Qname(PackageNamespace(""),"NEGATIVE")
         pushbyte 2
         initproperty Qname(PackageNamespace(""),"NEGATIVE")
         findproperty Qname(PackageNamespace(""),"EQUAL")
         pushbyte 3
         initproperty Qname(PackageNamespace(""),"EQUAL")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var normal_:Vector3D;
      
      public var d_:Number;
      
      public function Plane3D(param1:Vector3D = null, param2:Vector3D = null, param3:Vector3D = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         optional null
         optional null
         optional null
         returns null
         
         body
         maxstack 5
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_1
         pushnull
         equals
         not
         dup
         iffalse ofs0013
         pop
         getlocal_2
         pushnull
         equals
         not
         ofs0013:dup
         iffalse ofs001d
         pop
         getlocal_3
         pushnull
         equals
         not
         ofs001d:iffalse ofs004b
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
         constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 0
         initproperty Qname(PackageNamespace(""),"normal_")
         findpropstrict Qname(PackageNamespace(""),"computeNormal")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         callpropvoid Qname(PackageNamespace(""),"computeNormal") 4
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"dotProduct") 1
         negate
         initproperty Qname(PackageNamespace(""),"d_")
         ofs004b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function computeNormal(param1:Vector3D, param2:Vector3D, param3:Vector3D, param4:Vector3D) : void
      {
         trait method Qname(PackageNamespace(""),"computeNormal")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 11
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_2
         getproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"x")
         subtract
         convert_d
         setlocal 5
         getlocal_2
         getproperty Qname(PackageNamespace(""),"y")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"y")
         subtract
         convert_d
         setlocal 6
         getlocal_2
         getproperty Qname(PackageNamespace(""),"z")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"z")
         subtract
         convert_d
         setlocal 7
         getlocal_3
         getproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"x")
         subtract
         convert_d
         setlocal 8
         getlocal_3
         getproperty Qname(PackageNamespace(""),"y")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"y")
         subtract
         convert_d
         setlocal 9
         getlocal_3
         getproperty Qname(PackageNamespace(""),"z")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"z")
         subtract
         convert_d
         setlocal 10
         getlocal 4
         getlocal 6
         getlocal 10
         multiply
         getlocal 7
         getlocal 9
         multiply
         subtract
         setproperty Qname(PackageNamespace(""),"x")
         getlocal 4
         getlocal 7
         getlocal 8
         multiply
         getlocal 5
         getlocal 10
         multiply
         subtract
         setproperty Qname(PackageNamespace(""),"y")
         getlocal 4
         getlocal 5
         getlocal 9
         multiply
         getlocal 6
         getlocal 8
         multiply
         subtract
         setproperty Qname(PackageNamespace(""),"z")
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"normalize") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function computeNormalVec(param1:Vector.<Number>, param2:Vector3D) : void
      {
         trait method Qname(PackageNamespace(""),"computeNormalVec")
         flag FINAL
         dispid 4
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Number")>)
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 9
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         getlocal_1
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         subtract
         convert_d
         setlocal_3
         getlocal_1
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         getlocal_1
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         subtract
         convert_d
         setlocal 4
         getlocal_1
         pushbyte 5
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         getlocal_1
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         subtract
         convert_d
         setlocal 5
         getlocal_1
         pushbyte 6
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         getlocal_1
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         subtract
         convert_d
         setlocal 6
         getlocal_1
         pushbyte 7
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         getlocal_1
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         subtract
         convert_d
         setlocal 7
         getlocal_1
         pushbyte 8
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         getlocal_1
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"2087"),PackageNamespace(""),PrivateNamespace(null,"2088"),PackageNamespace("com.company.assembleegameclient.engine3d"),PackageInternalNs("com.company.assembleegameclient.engine3d"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.engine3d:Plane3D"),StaticProtectedNs("com.company.assembleegameclient.engine3d:Plane3D")])
         subtract
         convert_d
         setlocal 8
         getlocal_2
         getlocal 4
         getlocal 8
         multiply
         getlocal 5
         getlocal 7
         multiply
         subtract
         setproperty Qname(PackageNamespace(""),"x")
         getlocal_2
         getlocal 5
         getlocal 6
         multiply
         getlocal_3
         getlocal 8
         multiply
         subtract
         setproperty Qname(PackageNamespace(""),"y")
         getlocal_2
         getlocal_3
         getlocal 7
         multiply
         getlocal 4
         getlocal 6
         multiply
         subtract
         setproperty Qname(PackageNamespace(""),"z")
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"normalize") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function testPoint(param1:Vector3D) : int
      {
         trait method Qname(PackageNamespace(""),"testPoint")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"dotProduct") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d_")
         add
         convert_d
         setlocal_2
         getlocal_2
         pushdouble 0.001
         ifngt ofs001f
         getlex Qname(PackageNamespace(""),"POSITIVE")
         returnvalue
         ofs001f:getlocal_2
         pushdouble -0.001
         ifnlt ofs002c
         getlex Qname(PackageNamespace(""),"NEGATIVE")
         returnvalue
         ofs002c:getlex Qname(PackageNamespace(""),"EQUAL")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function lineIntersect(param1:Line3D) : Number
      {
         trait method Qname(PackageNamespace(""),"lineIntersect")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.engine3d"),"Line3D")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d_")
         negate
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v0_")
         getproperty Qname(PackageNamespace(""),"x")
         multiply
         subtract
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"y")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v0_")
         getproperty Qname(PackageNamespace(""),"y")
         multiply
         subtract
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"z")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v0_")
         getproperty Qname(PackageNamespace(""),"z")
         multiply
         subtract
         convert_d
         setlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v1_")
         getproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v0_")
         getproperty Qname(PackageNamespace(""),"x")
         subtract
         multiply
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"y")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v1_")
         getproperty Qname(PackageNamespace(""),"y")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v0_")
         getproperty Qname(PackageNamespace(""),"y")
         subtract
         multiply
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"z")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v1_")
         getproperty Qname(PackageNamespace(""),"z")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"v0_")
         getproperty Qname(PackageNamespace(""),"z")
         subtract
         multiply
         add
         convert_d
         setlocal_3
         getlocal_3
         pushbyte 0
         ifne ofs008e
         getlex Qname(PackageNamespace(""),"NaN")
         returnvalue
         ofs008e:getlocal_2
         getlocal_3
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function zAtXY(param1:Number, param2:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"zAtXY")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         multiply
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"y")
         getlocal_2
         multiply
         add
         negate
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         getproperty Qname(PackageNamespace(""),"z")
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushstring "Plane(n = "
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal_")
         add
         pushstring ", d = "
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d_")
         add
         pushstring ")"
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

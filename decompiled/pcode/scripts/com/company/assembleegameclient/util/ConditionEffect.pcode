package com.company.assembleegameclient.util
{
   import com.company.assembleegameclient.util.redrawers.GlowRedrawer;
   import com.company.util.AssetLibrary;
   import com.company.util.PointUtil;
   import flash.display.BitmapData;
   import flash.filters.BitmapFilterQuality;
   import flash.filters.GlowFilter;
   import flash.geom.Matrix;
   import kabam.rotmg.text.model.TextKey;
   
   public class ConditionEffect
   {
      
      public static const NOTHING:uint = 0;
      
      public static const DEAD:uint = 1;
      
      public static const QUIET:uint = 2;
      
      public static const WEAK:uint = 3;
      
      public static const SLOWED:uint = 4;
      
      public static const SICK:uint = 5;
      
      public static const DAZED:uint = 6;
      
      public static const STUNNED:uint = 7;
      
      public static const BLIND:uint = 8;
      
      public static const HALLUCINATING:uint = 9;
      
      public static const DRUNK:uint = 10;
      
      public static const CONFUSED:uint = 11;
      
      public static const STUN_IMMUNE:uint = 12;
      
      public static const INVISIBLE:uint = 13;
      
      public static const PARALYZED:uint = 14;
      
      public static const SPEEDY:uint = 15;
      
      public static const BLEEDING:uint = 16;
      
      public static const ARMORBROKENIMMUNE:uint = 17;
      
      public static const HEALING:uint = 18;
      
      public static const DAMAGING:uint = 19;
      
      public static const BERSERK:uint = 20;
      
      public static const PAUSED:uint = 21;
      
      public static const STASIS:uint = 22;
      
      public static const STASIS_IMMUNE:uint = 23;
      
      public static const INVINCIBLE:uint = 24;
      
      public static const INVULNERABLE:uint = 25;
      
      public static const ARMORED:uint = 26;
      
      public static const ARMORBROKEN:uint = 27;
      
      public static const HEXED:uint = 28;
      
      public static const NINJA_SPEEDY:uint = 29;
      
      public static const UNSTABLE:uint = 30;
      
      public static const DARKNESS:uint = 31;
      
      public static const SLOWED_IMMUNE:uint = 32;
      
      public static const DAZED_IMMUNE:uint = 33;
      
      public static const PARALYZED_IMMUNE:uint = 34;
      
      public static const PETRIFIED:uint = 35;
      
      public static const PETRIFIED_IMMUNE:uint = 36;
      
      public static const PET_EFFECT_ICON:uint = 37;
      
      public static const CURSE:uint = 38;
      
      public static const CURSE_IMMUNE:uint = 39;
      
      public static const HP_BOOST:uint = 40;
      
      public static const MP_BOOST:uint = 41;
      
      public static const ATT_BOOST:uint = 42;
      
      public static const DEF_BOOST:uint = 43;
      
      public static const SPD_BOOST:uint = 44;
      
      public static const VIT_BOOST:uint = 45;
      
      public static const WIS_BOOST:uint = 46;
      
      public static const DEX_BOOST:uint = 47;
      
      public static const SILENCED:uint = 48;
      
      public static const EXPOSED:uint = 49;
      
      public static const ENERGIZED:uint = 50;
      
      public static const HP_DEBUFF:uint = 51;
      
      public static const MP_DEBUFF:uint = 52;
      
      public static const ATT_DEBUFF:uint = 53;
      
      public static const DEF_DEBUFF:uint = 54;
      
      public static const SPD_DEBUFF:uint = 55;
      
      public static const VIT_DEBUFF:uint = 56;
      
      public static const WIS_DEBUFF:uint = 57;
      
      public static const DEX_DEBUFF:uint = 58;
      
      public static const INSPIRED:uint = 59;
      
      public static const GROUND_DAMAGE:uint = 99;
      
      public static const DEAD_BIT:uint;
      
      public static const QUIET_BIT:uint;
      
      public static const WEAK_BIT:uint;
      
      public static const SLOWED_BIT:uint;
      
      public static const SICK_BIT:uint;
      
      public static const DAZED_BIT:uint;
      
      public static const STUNNED_BIT:uint;
      
      public static const BLIND_BIT:uint;
      
      public static const HALLUCINATING_BIT:uint;
      
      public static const DRUNK_BIT:uint;
      
      public static const CONFUSED_BIT:uint;
      
      public static const STUN_IMMUNE_BIT:uint;
      
      public static const INVISIBLE_BIT:uint;
      
      public static const PARALYZED_BIT:uint;
      
      public static const SPEEDY_BIT:uint;
      
      public static const BLEEDING_BIT:uint;
      
      public static const ARMORBROKEN_IMMUNE_BIT:uint;
      
      public static const HEALING_BIT:uint;
      
      public static const DAMAGING_BIT:uint;
      
      public static const BERSERK_BIT:uint;
      
      public static const PAUSED_BIT:uint;
      
      public static const STASIS_BIT:uint;
      
      public static const STASIS_IMMUNE_BIT:uint;
      
      public static const INVINCIBLE_BIT:uint;
      
      public static const INVULNERABLE_BIT:uint;
      
      public static const ARMORED_BIT:uint;
      
      public static const ARMORBROKEN_BIT:uint;
      
      public static const HEXED_BIT:uint;
      
      public static const NINJA_SPEEDY_BIT:uint;
      
      public static const UNSTABLE_BIT:uint;
      
      public static const DARKNESS_BIT:uint;
      
      public static const SLOWED_IMMUNE_BIT:uint;
      
      public static const DAZED_IMMUNE_BIT:uint;
      
      public static const PARALYZED_IMMUNE_BIT:uint;
      
      public static const PETRIFIED_BIT:uint;
      
      public static const PETRIFIED_IMMUNE_BIT:uint;
      
      public static const PET_EFFECT_ICON_BIT:uint;
      
      public static const CURSE_BIT:uint;
      
      public static const CURSE_IMMUNE_BIT:uint;
      
      public static const HP_BOOST_BIT:uint;
      
      public static const MP_BOOST_BIT:uint;
      
      public static const ATT_BOOST_BIT:uint;
      
      public static const DEF_BOOST_BIT:uint;
      
      public static const SPD_BOOST_BIT:uint;
      
      public static const VIT_BOOST_BIT:uint;
      
      public static const WIS_BOOST_BIT:uint;
      
      public static const DEX_BOOST_BIT:uint;
      
      public static const SILENCED_BIT:uint;
      
      public static const EXPOSED_BIT:uint;
      
      public static const ENERGIZED_BIT:uint;
      
      public static const HP_DEBUFF_BIT:uint;
      
      public static const MP_DEBUFF_BIT:uint;
      
      public static const ATT_DEBUFF_BIT:uint;
      
      public static const DEF_DEBUFF_BIT:uint;
      
      public static const SPD_DEBUFF_BIT:uint;
      
      public static const VIT_DEBUFF_BIT:uint;
      
      public static const WIS_DEBUFF_BIT:uint;
      
      public static const DEX_DEBUFF_BIT:uint;
      
      public static const INSPIRED_BIT:uint;
      
      public static const MAP_FILTER_BITMASK:uint;
      
      public static const CE_FIRST_BATCH:uint = 0;
      
      public static const CE_SECOND_BATCH:uint = 1;
      
      public static const NUMBER_CE_BATCHES:uint = 2;
      
      public static const NEW_CON_THREASHOLD:uint = 32;
      
      public static var effects_:Vector.<ConditionEffect>;
      
      private static var conditionEffectFromName_:Object = null;
      
      private static var effectIconCache:Object = null;
      
      private static var bitToIcon_:Object = null;
      
      private static const GLOW_FILTER:GlowFilter;
      
      private static var bitToIcon2_:Object = null;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 11
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"NOTHING")
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"NOTHING")
         findproperty Qname(PackageNamespace(""),"DEAD")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"DEAD")
         findproperty Qname(PackageNamespace(""),"QUIET")
         pushbyte 2
         initproperty Qname(PackageNamespace(""),"QUIET")
         findproperty Qname(PackageNamespace(""),"WEAK")
         pushbyte 3
         initproperty Qname(PackageNamespace(""),"WEAK")
         findproperty Qname(PackageNamespace(""),"SLOWED")
         pushbyte 4
         initproperty Qname(PackageNamespace(""),"SLOWED")
         findproperty Qname(PackageNamespace(""),"SICK")
         pushbyte 5
         initproperty Qname(PackageNamespace(""),"SICK")
         findproperty Qname(PackageNamespace(""),"DAZED")
         pushbyte 6
         initproperty Qname(PackageNamespace(""),"DAZED")
         findproperty Qname(PackageNamespace(""),"STUNNED")
         pushbyte 7
         initproperty Qname(PackageNamespace(""),"STUNNED")
         findproperty Qname(PackageNamespace(""),"BLIND")
         pushbyte 8
         initproperty Qname(PackageNamespace(""),"BLIND")
         findproperty Qname(PackageNamespace(""),"HALLUCINATING")
         pushbyte 9
         initproperty Qname(PackageNamespace(""),"HALLUCINATING")
         findproperty Qname(PackageNamespace(""),"DRUNK")
         pushbyte 10
         initproperty Qname(PackageNamespace(""),"DRUNK")
         findproperty Qname(PackageNamespace(""),"CONFUSED")
         pushbyte 11
         initproperty Qname(PackageNamespace(""),"CONFUSED")
         findproperty Qname(PackageNamespace(""),"STUN_IMMUNE")
         pushbyte 12
         initproperty Qname(PackageNamespace(""),"STUN_IMMUNE")
         findproperty Qname(PackageNamespace(""),"INVISIBLE")
         pushbyte 13
         initproperty Qname(PackageNamespace(""),"INVISIBLE")
         findproperty Qname(PackageNamespace(""),"PARALYZED")
         pushbyte 14
         initproperty Qname(PackageNamespace(""),"PARALYZED")
         findproperty Qname(PackageNamespace(""),"SPEEDY")
         pushbyte 15
         initproperty Qname(PackageNamespace(""),"SPEEDY")
         findproperty Qname(PackageNamespace(""),"BLEEDING")
         pushbyte 16
         initproperty Qname(PackageNamespace(""),"BLEEDING")
         findproperty Qname(PackageNamespace(""),"ARMORBROKENIMMUNE")
         pushbyte 17
         initproperty Qname(PackageNamespace(""),"ARMORBROKENIMMUNE")
         findproperty Qname(PackageNamespace(""),"HEALING")
         pushbyte 18
         initproperty Qname(PackageNamespace(""),"HEALING")
         findproperty Qname(PackageNamespace(""),"DAMAGING")
         pushbyte 19
         initproperty Qname(PackageNamespace(""),"DAMAGING")
         findproperty Qname(PackageNamespace(""),"BERSERK")
         pushbyte 20
         initproperty Qname(PackageNamespace(""),"BERSERK")
         findproperty Qname(PackageNamespace(""),"PAUSED")
         pushbyte 21
         initproperty Qname(PackageNamespace(""),"PAUSED")
         findproperty Qname(PackageNamespace(""),"STASIS")
         pushbyte 22
         initproperty Qname(PackageNamespace(""),"STASIS")
         findproperty Qname(PackageNamespace(""),"STASIS_IMMUNE")
         pushbyte 23
         initproperty Qname(PackageNamespace(""),"STASIS_IMMUNE")
         findproperty Qname(PackageNamespace(""),"INVINCIBLE")
         pushbyte 24
         initproperty Qname(PackageNamespace(""),"INVINCIBLE")
         findproperty Qname(PackageNamespace(""),"INVULNERABLE")
         pushbyte 25
         initproperty Qname(PackageNamespace(""),"INVULNERABLE")
         findproperty Qname(PackageNamespace(""),"ARMORED")
         pushbyte 26
         initproperty Qname(PackageNamespace(""),"ARMORED")
         findproperty Qname(PackageNamespace(""),"ARMORBROKEN")
         pushbyte 27
         initproperty Qname(PackageNamespace(""),"ARMORBROKEN")
         findproperty Qname(PackageNamespace(""),"HEXED")
         pushbyte 28
         initproperty Qname(PackageNamespace(""),"HEXED")
         findproperty Qname(PackageNamespace(""),"NINJA_SPEEDY")
         pushbyte 29
         initproperty Qname(PackageNamespace(""),"NINJA_SPEEDY")
         findproperty Qname(PackageNamespace(""),"UNSTABLE")
         pushbyte 30
         initproperty Qname(PackageNamespace(""),"UNSTABLE")
         findproperty Qname(PackageNamespace(""),"DARKNESS")
         pushbyte 31
         initproperty Qname(PackageNamespace(""),"DARKNESS")
         findproperty Qname(PackageNamespace(""),"SLOWED_IMMUNE")
         pushbyte 32
         initproperty Qname(PackageNamespace(""),"SLOWED_IMMUNE")
         findproperty Qname(PackageNamespace(""),"DAZED_IMMUNE")
         pushbyte 33
         initproperty Qname(PackageNamespace(""),"DAZED_IMMUNE")
         findproperty Qname(PackageNamespace(""),"PARALYZED_IMMUNE")
         pushbyte 34
         initproperty Qname(PackageNamespace(""),"PARALYZED_IMMUNE")
         findproperty Qname(PackageNamespace(""),"PETRIFIED")
         pushbyte 35
         initproperty Qname(PackageNamespace(""),"PETRIFIED")
         findproperty Qname(PackageNamespace(""),"PETRIFIED_IMMUNE")
         pushbyte 36
         initproperty Qname(PackageNamespace(""),"PETRIFIED_IMMUNE")
         findproperty Qname(PackageNamespace(""),"PET_EFFECT_ICON")
         pushbyte 37
         initproperty Qname(PackageNamespace(""),"PET_EFFECT_ICON")
         findproperty Qname(PackageNamespace(""),"CURSE")
         pushbyte 38
         initproperty Qname(PackageNamespace(""),"CURSE")
         findproperty Qname(PackageNamespace(""),"CURSE_IMMUNE")
         pushbyte 39
         initproperty Qname(PackageNamespace(""),"CURSE_IMMUNE")
         findproperty Qname(PackageNamespace(""),"HP_BOOST")
         pushbyte 40
         initproperty Qname(PackageNamespace(""),"HP_BOOST")
         findproperty Qname(PackageNamespace(""),"MP_BOOST")
         pushbyte 41
         initproperty Qname(PackageNamespace(""),"MP_BOOST")
         findproperty Qname(PackageNamespace(""),"ATT_BOOST")
         pushbyte 42
         initproperty Qname(PackageNamespace(""),"ATT_BOOST")
         findproperty Qname(PackageNamespace(""),"DEF_BOOST")
         pushbyte 43
         initproperty Qname(PackageNamespace(""),"DEF_BOOST")
         findproperty Qname(PackageNamespace(""),"SPD_BOOST")
         pushbyte 44
         initproperty Qname(PackageNamespace(""),"SPD_BOOST")
         findproperty Qname(PackageNamespace(""),"VIT_BOOST")
         pushbyte 45
         initproperty Qname(PackageNamespace(""),"VIT_BOOST")
         findproperty Qname(PackageNamespace(""),"WIS_BOOST")
         pushbyte 46
         initproperty Qname(PackageNamespace(""),"WIS_BOOST")
         findproperty Qname(PackageNamespace(""),"DEX_BOOST")
         pushbyte 47
         initproperty Qname(PackageNamespace(""),"DEX_BOOST")
         findproperty Qname(PackageNamespace(""),"SILENCED")
         pushbyte 48
         initproperty Qname(PackageNamespace(""),"SILENCED")
         findproperty Qname(PackageNamespace(""),"EXPOSED")
         pushbyte 49
         initproperty Qname(PackageNamespace(""),"EXPOSED")
         findproperty Qname(PackageNamespace(""),"ENERGIZED")
         pushbyte 50
         initproperty Qname(PackageNamespace(""),"ENERGIZED")
         findproperty Qname(PackageNamespace(""),"HP_DEBUFF")
         pushbyte 51
         initproperty Qname(PackageNamespace(""),"HP_DEBUFF")
         findproperty Qname(PackageNamespace(""),"MP_DEBUFF")
         pushbyte 52
         initproperty Qname(PackageNamespace(""),"MP_DEBUFF")
         findproperty Qname(PackageNamespace(""),"ATT_DEBUFF")
         pushbyte 53
         initproperty Qname(PackageNamespace(""),"ATT_DEBUFF")
         findproperty Qname(PackageNamespace(""),"DEF_DEBUFF")
         pushbyte 54
         initproperty Qname(PackageNamespace(""),"DEF_DEBUFF")
         findproperty Qname(PackageNamespace(""),"SPD_DEBUFF")
         pushbyte 55
         initproperty Qname(PackageNamespace(""),"SPD_DEBUFF")
         findproperty Qname(PackageNamespace(""),"VIT_DEBUFF")
         pushbyte 56
         initproperty Qname(PackageNamespace(""),"VIT_DEBUFF")
         findproperty Qname(PackageNamespace(""),"WIS_DEBUFF")
         pushbyte 57
         initproperty Qname(PackageNamespace(""),"WIS_DEBUFF")
         findproperty Qname(PackageNamespace(""),"DEX_DEBUFF")
         pushbyte 58
         initproperty Qname(PackageNamespace(""),"DEX_DEBUFF")
         findproperty Qname(PackageNamespace(""),"INSPIRED")
         pushbyte 59
         initproperty Qname(PackageNamespace(""),"INSPIRED")
         findproperty Qname(PackageNamespace(""),"GROUND_DAMAGE")
         pushbyte 99
         initproperty Qname(PackageNamespace(""),"GROUND_DAMAGE")
         findproperty Qname(PackageNamespace(""),"DEAD_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DEAD")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"DEAD_BIT")
         findproperty Qname(PackageNamespace(""),"QUIET_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"QUIET")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"QUIET_BIT")
         findproperty Qname(PackageNamespace(""),"WEAK_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"WEAK")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"WEAK_BIT")
         findproperty Qname(PackageNamespace(""),"SLOWED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"SLOWED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"SLOWED_BIT")
         findproperty Qname(PackageNamespace(""),"SICK_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"SICK")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"SICK_BIT")
         findproperty Qname(PackageNamespace(""),"DAZED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DAZED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"DAZED_BIT")
         findproperty Qname(PackageNamespace(""),"STUNNED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"STUNNED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"STUNNED_BIT")
         findproperty Qname(PackageNamespace(""),"BLIND_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"BLIND")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"BLIND_BIT")
         findproperty Qname(PackageNamespace(""),"HALLUCINATING_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"HALLUCINATING")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"HALLUCINATING_BIT")
         findproperty Qname(PackageNamespace(""),"DRUNK_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DRUNK")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"DRUNK_BIT")
         findproperty Qname(PackageNamespace(""),"CONFUSED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"CONFUSED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"CONFUSED_BIT")
         findproperty Qname(PackageNamespace(""),"STUN_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"STUN_IMMUNE")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"STUN_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"INVISIBLE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"INVISIBLE")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"INVISIBLE_BIT")
         findproperty Qname(PackageNamespace(""),"PARALYZED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"PARALYZED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"PARALYZED_BIT")
         findproperty Qname(PackageNamespace(""),"SPEEDY_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"SPEEDY")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"SPEEDY_BIT")
         findproperty Qname(PackageNamespace(""),"BLEEDING_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"BLEEDING")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"BLEEDING_BIT")
         findproperty Qname(PackageNamespace(""),"ARMORBROKEN_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"ARMORBROKENIMMUNE")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"ARMORBROKEN_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"HEALING_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"HEALING")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"HEALING_BIT")
         findproperty Qname(PackageNamespace(""),"DAMAGING_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DAMAGING")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"DAMAGING_BIT")
         findproperty Qname(PackageNamespace(""),"BERSERK_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"BERSERK")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"BERSERK_BIT")
         findproperty Qname(PackageNamespace(""),"PAUSED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"PAUSED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"PAUSED_BIT")
         findproperty Qname(PackageNamespace(""),"STASIS_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"STASIS")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"STASIS_BIT")
         findproperty Qname(PackageNamespace(""),"STASIS_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"STASIS_IMMUNE")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"STASIS_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"INVINCIBLE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"INVINCIBLE")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"INVINCIBLE_BIT")
         findproperty Qname(PackageNamespace(""),"INVULNERABLE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"INVULNERABLE")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"INVULNERABLE_BIT")
         findproperty Qname(PackageNamespace(""),"ARMORED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"ARMORED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"ARMORED_BIT")
         findproperty Qname(PackageNamespace(""),"ARMORBROKEN_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"ARMORBROKEN")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"ARMORBROKEN_BIT")
         findproperty Qname(PackageNamespace(""),"HEXED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"HEXED")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"HEXED_BIT")
         findproperty Qname(PackageNamespace(""),"NINJA_SPEEDY_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"NINJA_SPEEDY")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"NINJA_SPEEDY_BIT")
         findproperty Qname(PackageNamespace(""),"UNSTABLE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"UNSTABLE")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"UNSTABLE_BIT")
         findproperty Qname(PackageNamespace(""),"DARKNESS_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DARKNESS")
         decrement
         lshift
         initproperty Qname(PackageNamespace(""),"DARKNESS_BIT")
         findproperty Qname(PackageNamespace(""),"SLOWED_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"SLOWED_IMMUNE")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"SLOWED_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"DAZED_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DAZED_IMMUNE")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"DAZED_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"PARALYZED_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"PARALYZED_IMMUNE")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"PARALYZED_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"PETRIFIED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"PETRIFIED")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"PETRIFIED_BIT")
         findproperty Qname(PackageNamespace(""),"PETRIFIED_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"PETRIFIED_IMMUNE")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"PETRIFIED_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"PET_EFFECT_ICON_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"PET_EFFECT_ICON")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"PET_EFFECT_ICON_BIT")
         findproperty Qname(PackageNamespace(""),"CURSE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"CURSE")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"CURSE_BIT")
         findproperty Qname(PackageNamespace(""),"CURSE_IMMUNE_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"CURSE_IMMUNE")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"CURSE_IMMUNE_BIT")
         findproperty Qname(PackageNamespace(""),"HP_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"HP_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"HP_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"MP_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"MP_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"MP_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"ATT_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"ATT_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"ATT_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"DEF_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DEF_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"DEF_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"SPD_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"SPD_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"SPD_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"VIT_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"VIT_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"VIT_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"WIS_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"WIS_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"WIS_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"DEX_BOOST_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DEX_BOOST")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"DEX_BOOST_BIT")
         findproperty Qname(PackageNamespace(""),"SILENCED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"SILENCED")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"SILENCED_BIT")
         findproperty Qname(PackageNamespace(""),"EXPOSED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"EXPOSED")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"EXPOSED_BIT")
         findproperty Qname(PackageNamespace(""),"ENERGIZED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"ENERGIZED")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"ENERGIZED_BIT")
         findproperty Qname(PackageNamespace(""),"HP_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"HP_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"HP_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"MP_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"MP_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"MP_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"ATT_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"ATT_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"ATT_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"DEF_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DEF_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"DEF_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"SPD_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"SPD_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"SPD_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"VIT_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"VIT_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"VIT_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"WIS_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"WIS_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"WIS_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"DEX_DEBUFF_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"DEX_DEBUFF")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"DEX_DEBUFF_BIT")
         findproperty Qname(PackageNamespace(""),"INSPIRED_BIT")
         pushbyte 1
         getlex Qname(PackageNamespace(""),"INSPIRED")
         getlex Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         subtract
         lshift
         initproperty Qname(PackageNamespace(""),"INSPIRED_BIT")
         findproperty Qname(PackageNamespace(""),"MAP_FILTER_BITMASK")
         getlex Qname(PackageNamespace(""),"DRUNK_BIT")
         getlex Qname(PackageNamespace(""),"BLIND_BIT")
         bitor
         getlex Qname(PackageNamespace(""),"PAUSED_BIT")
         bitor
         initproperty Qname(PackageNamespace(""),"MAP_FILTER_BITMASK")
         findproperty Qname(PackageNamespace(""),"CE_FIRST_BATCH")
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"CE_FIRST_BATCH")
         findproperty Qname(PackageNamespace(""),"CE_SECOND_BATCH")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"CE_SECOND_BATCH")
         findproperty Qname(PackageNamespace(""),"NUMBER_CE_BATCHES")
         pushbyte 2
         initproperty Qname(PackageNamespace(""),"NUMBER_CE_BATCHES")
         findproperty Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         pushbyte 32
         initproperty Qname(PackageNamespace(""),"NEW_CON_THREASHOLD")
         findproperty Qname(PackageNamespace(""),"effects_")
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"1253"),PackageNamespace(""),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getlocal_0
         applytype 1
         pushbyte 60
         construct 1
         dup
         pushbyte 0
         getlocal_0
         pushstring "Nothing"
         pushbyte 0
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_NOTHING")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 1
         getlocal_0
         pushstring "Dead"
         getlex Qname(PackageNamespace(""),"DEAD_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_DEAD")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 2
         getlocal_0
         pushstring "Quiet"
         getlex Qname(PackageNamespace(""),"QUIET_BIT")
         pushbyte 32
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_QUIET")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 3
         getlocal_0
         pushstring "Weak"
         getlex Qname(PackageNamespace(""),"WEAK_BIT")
         pushbyte 34
         pushbyte 35
         pushbyte 36
         pushbyte 37
         newarray 4
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_WEAK")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 4
         getlocal_0
         pushstring "Slowed"
         getlex Qname(PackageNamespace(""),"SLOWED_BIT")
         pushbyte 1
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITION_EFFECT_SLOWED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 5
         getlocal_0
         pushstring "Sick"
         getlex Qname(PackageNamespace(""),"SICK_BIT")
         pushbyte 39
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_SICK")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 6
         getlocal_0
         pushstring "Dazed"
         getlex Qname(PackageNamespace(""),"DAZED_BIT")
         pushbyte 44
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITION_EFFECT_DAZED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 7
         getlocal_0
         pushstring "Stunned"
         getlex Qname(PackageNamespace(""),"STUNNED_BIT")
         pushbyte 45
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_STUNNED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 8
         getlocal_0
         pushstring "Blind"
         getlex Qname(PackageNamespace(""),"BLIND_BIT")
         pushbyte 41
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_BLIND")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 9
         getlocal_0
         pushstring "Hallucinating"
         getlex Qname(PackageNamespace(""),"HALLUCINATING_BIT")
         pushbyte 42
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_HALLUCINATING")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 10
         getlocal_0
         pushstring "Drunk"
         getlex Qname(PackageNamespace(""),"DRUNK_BIT")
         pushbyte 43
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_DRUNK")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 11
         getlocal_0
         pushstring "Confused"
         getlex Qname(PackageNamespace(""),"CONFUSED_BIT")
         pushbyte 2
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_CONFUSED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 12
         getlocal_0
         pushstring "Stun Immune"
         getlex Qname(PackageNamespace(""),"STUN_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_STUN_IMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 13
         getlocal_0
         pushstring "Invisible"
         getlex Qname(PackageNamespace(""),"INVISIBLE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_INVISIBLE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 14
         getlocal_0
         pushstring "Paralyzed"
         getlex Qname(PackageNamespace(""),"PARALYZED_BIT")
         pushbyte 53
         pushbyte 54
         newarray 2
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITION_EFFECT_PARALYZED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 15
         getlocal_0
         pushstring "Speedy"
         getlex Qname(PackageNamespace(""),"SPEEDY_BIT")
         pushbyte 0
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_SPEEDY")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 16
         getlocal_0
         pushstring "Bleeding"
         getlex Qname(PackageNamespace(""),"BLEEDING_BIT")
         pushbyte 46
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_BLEEDING")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 17
         getlocal_0
         pushstring "Armor Broken Immune"
         getlex Qname(PackageNamespace(""),"ARMORBROKEN_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_ARMOR_BROKEN_IMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 18
         getlocal_0
         pushstring "Healing"
         getlex Qname(PackageNamespace(""),"HEALING_BIT")
         pushbyte 47
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_HEALING")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 19
         getlocal_0
         pushstring "Damaging"
         getlex Qname(PackageNamespace(""),"DAMAGING_BIT")
         pushbyte 49
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_DAMAGING")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 20
         getlocal_0
         pushstring "Berserk"
         getlex Qname(PackageNamespace(""),"BERSERK_BIT")
         pushbyte 50
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_BERSERK")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 21
         getlocal_0
         pushstring "Paused"
         getlex Qname(PackageNamespace(""),"PAUSED_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_PAUSED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 22
         getlocal_0
         pushstring "Stasis"
         getlex Qname(PackageNamespace(""),"STASIS_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_STASIS")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 23
         getlocal_0
         pushstring "Stasis Immune"
         getlex Qname(PackageNamespace(""),"STASIS_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_STASIS_IMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 24
         getlocal_0
         pushstring "Invincible"
         getlex Qname(PackageNamespace(""),"INVINCIBLE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_INVINCIBLE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 25
         getlocal_0
         pushstring "Invulnerable"
         getlex Qname(PackageNamespace(""),"INVULNERABLE_BIT")
         pushbyte 17
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_INVULNERABLE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 26
         getlocal_0
         pushstring "Armored"
         getlex Qname(PackageNamespace(""),"ARMORED_BIT")
         pushbyte 16
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_ARMORED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 27
         getlocal_0
         pushstring "Armor Broken"
         getlex Qname(PackageNamespace(""),"ARMORBROKEN_BIT")
         pushbyte 55
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_ARMOR_BROKEN")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 28
         getlocal_0
         pushstring "Hexed"
         getlex Qname(PackageNamespace(""),"HEXED_BIT")
         pushbyte 42
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_HEXED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 29
         getlocal_0
         pushstring "Ninja Speedy"
         getlex Qname(PackageNamespace(""),"NINJA_SPEEDY_BIT")
         pushbyte 0
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_NINJA_SPEEDY")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 30
         getlocal_0
         pushstring "Unstable"
         getlex Qname(PackageNamespace(""),"UNSTABLE_BIT")
         pushbyte 56
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_UNSTABLE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 31
         getlocal_0
         pushstring "Darkness"
         getlex Qname(PackageNamespace(""),"DARKNESS_BIT")
         pushbyte 57
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_DARKNESS")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 32
         getlocal_0
         pushstring "Slowed Immune"
         getlex Qname(PackageNamespace(""),"SLOWED_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_SLOWIMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 33
         getlocal_0
         pushstring "Dazed Immune"
         getlex Qname(PackageNamespace(""),"DAZED_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_DAZEDIMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 34
         getlocal_0
         pushstring "Paralyzed Immune"
         getlex Qname(PackageNamespace(""),"PARALYZED_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_PARALYZEDIMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 35
         getlocal_0
         pushstring "Petrify"
         getlex Qname(PackageNamespace(""),"PETRIFIED_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_PETRIFIED")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 36
         getlocal_0
         pushstring "Petrify Immune"
         getlex Qname(PackageNamespace(""),"PETRIFIED_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_PETRIFY_IMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 37
         getlocal_0
         pushstring "Pet Disable"
         getlex Qname(PackageNamespace(""),"PET_EFFECT_ICON_BIT")
         pushbyte 27
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_STASIS")
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 38
         getlocal_0
         pushstring "Curse"
         getlex Qname(PackageNamespace(""),"CURSE_BIT")
         pushbyte 58
         newarray 1
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_CURSE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 39
         getlocal_0
         pushstring "Curse Immune"
         getlex Qname(PackageNamespace(""),"CURSE_IMMUNE_BIT")
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"CONDITIONEFFECT_CURSE_IMMUNE")
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 40
         getlocal_0
         pushstring "HP Boost"
         getlex Qname(PackageNamespace(""),"HP_BOOST_BIT")
         pushbyte 32
         newarray 1
         pushstring "HP Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 41
         getlocal_0
         pushstring "MP Boost"
         getlex Qname(PackageNamespace(""),"MP_BOOST_BIT")
         pushbyte 33
         newarray 1
         pushstring "MP Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 42
         getlocal_0
         pushstring "Att Boost"
         getlex Qname(PackageNamespace(""),"ATT_BOOST_BIT")
         pushbyte 34
         newarray 1
         pushstring "Att Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 43
         getlocal_0
         pushstring "Def Boost"
         getlex Qname(PackageNamespace(""),"DEF_BOOST_BIT")
         pushbyte 35
         newarray 1
         pushstring "Def Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 44
         getlocal_0
         pushstring "Spd Boost"
         getlex Qname(PackageNamespace(""),"SPD_BOOST_BIT")
         pushbyte 36
         newarray 1
         pushstring "Spd Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 45
         getlocal_0
         pushstring "Vit Boost"
         getlex Qname(PackageNamespace(""),"VIT_BOOST_BIT")
         pushbyte 38
         newarray 1
         pushstring "Vit Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 46
         getlocal_0
         pushstring "Wis Boost"
         getlex Qname(PackageNamespace(""),"WIS_BOOST_BIT")
         pushbyte 39
         newarray 1
         pushstring "Wis Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 47
         getlocal_0
         pushstring "Dex Boost"
         getlex Qname(PackageNamespace(""),"DEX_BOOST_BIT")
         pushbyte 37
         newarray 1
         pushstring "Dex Boost"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 48
         getlocal_0
         pushstring "Silenced"
         getlex Qname(PackageNamespace(""),"SILENCED_BIT")
         pushbyte 33
         newarray 1
         pushstring "Silenced"
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 49
         getlocal_0
         pushstring "Exposed"
         getlex Qname(PackageNamespace(""),"EXPOSED_BIT")
         pushbyte 59
         newarray 1
         pushstring "Exposed"
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 50
         getlocal_0
         pushstring "Energized"
         getlex Qname(PackageNamespace(""),"ENERGIZED_BIT")
         pushbyte 60
         newarray 1
         pushstring "Energized"
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 51
         getlocal_0
         pushstring "HP Debuff"
         getlex Qname(PackageNamespace(""),"HP_DEBUFF_BIT")
         pushbyte 48
         newarray 1
         pushstring "HP Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 52
         getlocal_0
         pushstring "MP Debuff"
         getlex Qname(PackageNamespace(""),"MP_DEBUFF_BIT")
         pushbyte 49
         newarray 1
         pushstring "MP Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 53
         getlocal_0
         pushstring "Att Debuff"
         getlex Qname(PackageNamespace(""),"ATT_DEBUFF_BIT")
         pushbyte 50
         newarray 1
         pushstring "Att Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 54
         getlocal_0
         pushstring "Def Debuff"
         getlex Qname(PackageNamespace(""),"DEF_DEBUFF_BIT")
         pushbyte 51
         newarray 1
         pushstring "Def Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 55
         getlocal_0
         pushstring "Spd Debuff"
         getlex Qname(PackageNamespace(""),"SPD_DEBUFF_BIT")
         pushbyte 52
         newarray 1
         pushstring "Spd Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 56
         getlocal_0
         pushstring "Vit Debuff"
         getlex Qname(PackageNamespace(""),"VIT_DEBUFF_BIT")
         pushbyte 54
         newarray 1
         pushstring "Vit Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 57
         getlocal_0
         pushstring "Wis Debuff"
         getlex Qname(PackageNamespace(""),"WIS_DEBUFF_BIT")
         pushbyte 55
         newarray 1
         pushstring "Wis Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 58
         getlocal_0
         pushstring "Dex Debuff"
         getlex Qname(PackageNamespace(""),"DEX_DEBUFF_BIT")
         pushbyte 53
         newarray 1
         pushstring "Dex Debuff"
         pushtrue
         construct 5
         setproperty MultinameL([PackageNamespace("")])
         dup
         pushbyte 59
         getlocal_0
         pushstring "Inspired"
         getlex Qname(PackageNamespace(""),"INSPIRED_BIT")
         pushbyte 62
         newarray 1
         pushstring "Inspired"
         construct 4
         setproperty MultinameL([PackageNamespace("")])
         setproperty Qname(PackageNamespace(""),"effects_")
         findproperty Qname(PrivateNamespace(null,"1253"),"conditionEffectFromName_")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1253"),"conditionEffectFromName_")
         findproperty Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         findproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon_")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon_")
         findproperty Qname(PrivateNamespace(null,"1253"),"GLOW_FILTER")
         findpropstrict Qname(PackageNamespace("flash.filters"),"GlowFilter")
         pushbyte 0
         pushdouble 0.3
         pushbyte 6
         dup
         pushbyte 2
         getlex Qname(PackageNamespace("flash.filters"),"BitmapFilterQuality")
         getproperty Qname(PackageNamespace(""),"LOW")
         pushfalse
         pushfalse
         constructprop Qname(PackageNamespace("flash.filters"),"GlowFilter") 8
         initproperty Qname(PrivateNamespace(null,"1253"),"GLOW_FILTER")
         findproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var name_:String;
      
      public var bit_:uint;
      
      public var iconOffsets_:Array;
      
      public var localizationKey_:String;
      
      public var icon16Bit_:Boolean;
      
      public function ConditionEffect(param1:String, param2:uint, param3:Array, param4:String = "", param5:Boolean = false)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         optional ""
         optional false
         returns null
         
         body
         maxstack 2
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"name_")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"bit_")
         getlocal_0
         getlocal_3
         initproperty Qname(PackageNamespace(""),"iconOffsets_")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"localizationKey_")
         getlocal_0
         getlocal 5
         initproperty Qname(PackageNamespace(""),"icon16Bit_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getConditionEffectFromName(param1:String) : uint
      {
         trait method Qname(PackageNamespace(""),"getConditionEffectFromName")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal_2
         getlex Qname(PrivateNamespace(null,"1253"),"conditionEffectFromName_")
         pushnull
         ifne ofs0048
         findproperty Qname(PrivateNamespace(null,"1253"),"conditionEffectFromName_")
         findpropstrict Qname(PackageNamespace(""),"Object")
         constructprop Qname(PackageNamespace(""),"Object") 0
         setproperty Qname(PrivateNamespace(null,"1253"),"conditionEffectFromName_")
         pushbyte 0
         convert_u
         setlocal_2
         jump ofs003d
         ofs0024:label
         getlex Qname(PrivateNamespace(null,"1253"),"conditionEffectFromName_")
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"name_")
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getlocal_2
         increment
         convert_u
         setlocal_2
         ofs003d:getlocal_2
         getlex Qname(PackageNamespace(""),"effects_")
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0024
         ofs0048:getlex Qname(PrivateNamespace(null,"1253"),"conditionEffectFromName_")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getConditionEffectEnumFromName(param1:String) : ConditionEffect
      {
         trait method Qname(PackageNamespace(""),"getConditionEffectEnumFromName")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("com.company.assembleegameclient.util"),"ConditionEffect")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.util"),"ConditionEffect")
         setlocal_2
         pushbyte 0
         setlocal_3
         getlex Qname(PackageNamespace(""),"effects_")
         coerce_a
         setlocal 4
         jump ofs0028
         ofs0014:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("com.company.assembleegameclient.util"),"ConditionEffect")
         setlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"name_")
         getlocal_1
         ifne ofs0028
         getlocal_2
         returnvalue
         ofs0028:hasnext2 4 3
         iftrue ofs0014
         kill 4
         kill 3
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getConditionEffectIcons(param1:uint, param2:Vector.<BitmapData>, param3:int) : void
      {
         trait method Qname(PackageNamespace(""),"getConditionEffectIcons")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 4
         pushbyte 0
         convert_u
         setlocal 5
         pushnull
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal 6
         jump ofs0052
         ofs0016:label
         getlocal_1
         getlocal_1
         decrement
         bitand
         convert_u
         setlocal 4
         getlocal_1
         getlocal 4
         bitxor
         convert_u
         setlocal 5
         findpropstrict Qname(PrivateNamespace(null,"1253"),"getIconsFromBit")
         getlocal 5
         callproperty Qname(PrivateNamespace(null,"1253"),"getIconsFromBit") 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         dup
         setlocal 6
         pushnull
         ifeq ofs004e
         getlocal_2
         getlocal 6
         getlocal_3
         getlocal 6
         getproperty Qname(PackageNamespace(""),"length")
         modulo
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs004e:getlocal 4
         convert_u
         setlocal_1
         ofs0052:getlocal_1
         pushbyte 0
         ifne ofs0016
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getConditionEffectIcons2(param1:uint, param2:Vector.<BitmapData>, param3:int) : void
      {
         trait method Qname(PackageNamespace(""),"getConditionEffectIcons2")
         flag FINAL
         dispid 6
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 4
         pushbyte 0
         convert_u
         setlocal 5
         pushnull
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal 6
         jump ofs0052
         ofs0016:label
         getlocal_1
         getlocal_1
         decrement
         bitand
         convert_u
         setlocal 4
         getlocal_1
         getlocal 4
         bitxor
         convert_u
         setlocal 5
         findpropstrict Qname(PrivateNamespace(null,"1253"),"getIconsFromBit2")
         getlocal 5
         callproperty Qname(PrivateNamespace(null,"1253"),"getIconsFromBit2") 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         dup
         setlocal 6
         pushnull
         ifeq ofs004e
         getlocal_2
         getlocal 6
         getlocal_3
         getlocal 6
         getproperty Qname(PackageNamespace(""),"length")
         modulo
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs004e:getlocal 4
         convert_u
         setlocal_1
         ofs0052:getlocal_1
         pushbyte 0
         ifne ofs0016
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addConditionEffectIcon(param1:Vector.<BitmapData>, param2:int, param3:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"addConditionEffectIcon")
         flag FINAL
         dispid 7
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal 4
         pushnull
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         setlocal 5
         pushnull
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         setlocal 6
         getlex Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         pushnull
         ifne ofs0026
         findproperty Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         newobject 0
         setproperty Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         ofs0026:getlex Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         iffalse ofs0044
         getlex Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal 4
         jump ofs00ef
         ofs0044:findpropstrict Qname(PackageNamespace("flash.geom"),"Matrix")
         constructprop Qname(PackageNamespace("flash.geom"),"Matrix") 0
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         dup
         setlocal 5
         pushbyte 4
         dup
         callpropvoid Qname(PackageNamespace(""),"translate") 2
         findpropstrict Qname(PackageNamespace("flash.geom"),"Matrix")
         constructprop Qname(PackageNamespace("flash.geom"),"Matrix") 0
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         dup
         setlocal 6
         pushdouble 1.5
         pushdouble 1.5
         callpropvoid Qname(PackageNamespace(""),"translate") 2
         getlocal_3
         iffalse ofs009b
         findpropstrict Qname(PackageNamespace(""),"BitmapDataSpy")
         pushbyte 18
         dup
         pushtrue
         pushbyte 0
         constructprop Qname(PackageNamespace(""),"BitmapDataSpy") 4
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         dup
         setlocal 4
         getlex Qname(PackageNamespace("com.company.util"),"AssetLibrary")
         pushstring "lofiInterfaceBig"
         getlocal_2
         callproperty Qname(PackageNamespace(""),"getImageFromSet") 2
         getlocal 6
         callpropvoid Qname(PackageNamespace(""),"draw") 2
         jump ofs00bf
         ofs009b:findpropstrict Qname(PackageNamespace(""),"BitmapDataSpy")
         pushbyte 16
         dup
         pushtrue
         pushbyte 0
         constructprop Qname(PackageNamespace(""),"BitmapDataSpy") 4
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         dup
         setlocal 4
         getlex Qname(PackageNamespace("com.company.util"),"AssetLibrary")
         pushstring "lofiInterface2"
         getlocal_2
         callproperty Qname(PackageNamespace(""),"getImageFromSet") 2
         getlocal 5
         callpropvoid Qname(PackageNamespace(""),"draw") 2
         ofs00bf:getlex Qname(PackageNamespace("com.company.assembleegameclient.util.redrawers"),"GlowRedrawer")
         getlocal 4
         pushdouble 4.294967295E9
         callproperty Qname(PackageNamespace(""),"outlineGlow") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         dup
         dup
         dup
         setlocal 4
         getproperty Qname(PackageNamespace(""),"rect")
         getlex Qname(PackageNamespace("com.company.util"),"PointUtil")
         getproperty Qname(PackageNamespace(""),"ORIGIN")
         getlex Qname(PrivateNamespace(null,"1253"),"GLOW_FILTER")
         callpropvoid Qname(PackageNamespace(""),"applyFilter") 4
         getlex Qname(PrivateNamespace(null,"1253"),"effectIconCache")
         getlocal_2
         getlocal 4
         setproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         ofs00ef:getlocal_1
         getlocal 4
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private static function getIconsFromBit(param1:uint) : Vector.<BitmapData>
      {
         trait method Qname(PrivateNamespace(null,"1253"),"getIconsFromBit")
         flag FINAL
         dispid 8
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         
         body
         maxstack 5
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         setlocal_2
         pushbyte 0
         convert_u
         setlocal_3
         pushnull
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal 4
         pushbyte 0
         setlocal 5
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal 6
         getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon_")
         pushnull
         ifne ofs0112
         findproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon_")
         findpropstrict Qname(PackageNamespace(""),"Object")
         constructprop Qname(PackageNamespace(""),"Object") 0
         setproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon_")
         findpropstrict Qname(PackageNamespace("flash.geom"),"Matrix")
         constructprop Qname(PackageNamespace("flash.geom"),"Matrix") 0
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         setlocal_2
         getlocal_2
         pushbyte 4
         dup
         callpropvoid Qname(PackageNamespace(""),"translate") 2
         pushbyte 0
         convert_u
         setlocal_3
         jump ofs010b
         ofs004c:label
         pushnull
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal 4
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"iconOffsets_")
         pushnull
         ifeq ofs00f2
         getlex Multiname("Vector",[PrivateNamespace(null,"1253"),PackageNamespace(""),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getlex Qname(PackageNamespace("flash.display"),"BitmapData")
         applytype 1
         construct 0
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs00de
         ofs007a:label
         findpropstrict Qname(PackageNamespace(""),"BitmapDataSpy")
         pushbyte 16
         dup
         pushtrue
         pushbyte 0
         constructprop Qname(PackageNamespace(""),"BitmapDataSpy") 4
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         dup
         setlocal 6
         getlex Qname(PackageNamespace("com.company.util"),"AssetLibrary")
         pushstring "lofiInterface2"
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"iconOffsets_")
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         callproperty Qname(PackageNamespace(""),"getImageFromSet") 2
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"draw") 2
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util.redrawers"),"GlowRedrawer")
         getlocal 6
         pushdouble 4.294967295E9
         callproperty Qname(PackageNamespace(""),"outlineGlow") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         dup
         dup
         dup
         setlocal 6
         getproperty Qname(PackageNamespace(""),"rect")
         getlex Qname(PackageNamespace("com.company.util"),"PointUtil")
         getproperty Qname(PackageNamespace(""),"ORIGIN")
         getlex Qname(PrivateNamespace(null,"1253"),"GLOW_FILTER")
         callpropvoid Qname(PackageNamespace(""),"applyFilter") 4
         getlocal 4
         getlocal 6
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         inclocal_i 5
         ofs00de:getlocal 5
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"iconOffsets_")
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs007a
         ofs00f2:getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon_")
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"bit_")
         getlocal 4
         setproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getlocal_3
         increment
         convert_u
         setlocal_3
         ofs010b:getlocal_3
         pushbyte 32
         iflt ofs004c
         ofs0112:getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon_")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function getIconsFromBit2(param1:uint) : Vector.<BitmapData>
      {
         trait method Qname(PrivateNamespace(null,"1253"),"getIconsFromBit2")
         flag FINAL
         dispid 9
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         
         body
         maxstack 5
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal_2
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_3
         pushnull
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         setlocal 4
         pushnull
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         setlocal 5
         pushbyte 0
         convert_u
         setlocal 6
         pushbyte 0
         setlocal 7
         getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         pushnull
         ifne ofs0186
         findproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         newarray 0
         setproperty Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         getlex Multiname("Vector",[PrivateNamespace(null,"1253"),PackageNamespace(""),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getlex Qname(PackageNamespace("flash.display"),"BitmapData")
         applytype 1
         construct 0
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal_2
         findpropstrict Qname(PackageNamespace("flash.geom"),"Matrix")
         constructprop Qname(PackageNamespace("flash.geom"),"Matrix") 0
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         dup
         setlocal 4
         pushbyte 4
         dup
         callpropvoid Qname(PackageNamespace(""),"translate") 2
         findpropstrict Qname(PackageNamespace("flash.geom"),"Matrix")
         constructprop Qname(PackageNamespace("flash.geom"),"Matrix") 0
         coerce Qname(PackageNamespace("flash.geom"),"Matrix")
         dup
         setlocal 5
         pushdouble 1.5
         pushdouble 1.5
         callpropvoid Qname(PackageNamespace(""),"translate") 2
         pushbyte 32
         convert_u
         setlocal 6
         jump ofs017a
         ofs0075:label
         pushnull
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal_2
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"iconOffsets_")
         pushnull
         ifeq ofs015f
         getlex Multiname("Vector",[PrivateNamespace(null,"1253"),PackageNamespace(""),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getlex Qname(PackageNamespace("flash.display"),"BitmapData")
         applytype 1
         construct 0
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         setlocal_2
         pushbyte 0
         setlocal 7
         jump ofs014a
         ofs00a2:label
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"icon16Bit_")
         iffalse ofs00ea
         findpropstrict Qname(PackageNamespace(""),"BitmapDataSpy")
         pushbyte 18
         dup
         pushtrue
         pushbyte 0
         constructprop Qname(PackageNamespace(""),"BitmapDataSpy") 4
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_3
         getlocal_3
         getlex Qname(PackageNamespace("com.company.util"),"AssetLibrary")
         pushstring "lofiInterfaceBig"
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"iconOffsets_")
         getlocal 7
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         callproperty Qname(PackageNamespace(""),"getImageFromSet") 2
         getlocal 5
         callpropvoid Qname(PackageNamespace(""),"draw") 2
         jump ofs011e
         ofs00ea:findpropstrict Qname(PackageNamespace(""),"BitmapDataSpy")
         pushbyte 16
         dup
         pushtrue
         pushbyte 0
         constructprop Qname(PackageNamespace(""),"BitmapDataSpy") 4
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_3
         getlocal_3
         getlex Qname(PackageNamespace("com.company.util"),"AssetLibrary")
         pushstring "lofiInterface2"
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"iconOffsets_")
         getlocal 7
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         callproperty Qname(PackageNamespace(""),"getImageFromSet") 2
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"draw") 2
         ofs011e:getlex Qname(PackageNamespace("com.company.assembleegameclient.util.redrawers"),"GlowRedrawer")
         getlocal_3
         pushdouble 4.294967295E9
         callproperty Qname(PackageNamespace(""),"outlineGlow") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_3
         getlocal_3
         getlocal_3
         getlocal_3
         getproperty Qname(PackageNamespace(""),"rect")
         getlex Qname(PackageNamespace("com.company.util"),"PointUtil")
         getproperty Qname(PackageNamespace(""),"ORIGIN")
         getlex Qname(PrivateNamespace(null,"1253"),"GLOW_FILTER")
         callpropvoid Qname(PackageNamespace(""),"applyFilter") 4
         getlocal_2
         getlocal_3
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         inclocal_i 7
         ofs014a:getlocal 7
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"iconOffsets_")
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs00a2
         ofs015f:getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         getlex Qname(PackageNamespace(""),"effects_")
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getproperty Qname(PackageNamespace(""),"bit_")
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         getlocal 6
         increment
         convert_u
         setlocal 6
         ofs017a:getlocal 6
         getlex Qname(PackageNamespace(""),"effects_")
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0075
         ofs0186:getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         pushnull
         equals
         not
         dup
         iffalse ofs019f
         pop
         getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         pushnull
         equals
         not
         ofs019f:iffalse ofs01ad
         getlex Qname(PrivateNamespace(null,"1253"),"bitToIcon2_")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1253"),PackageNamespace(""),PrivateNamespace(null,"1743"),PackageNamespace("com.company.assembleegameclient.util"),PackageInternalNs("com.company.assembleegameclient.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.util:ConditionEffect"),StaticProtectedNs("com.company.assembleegameclient.util:ConditionEffect")])
         returnvalue
         ofs01ad:pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

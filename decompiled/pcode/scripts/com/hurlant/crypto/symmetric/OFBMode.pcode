package com.hurlant.crypto.symmetric
{
   import flash.utils.ByteArray;
   
   public class OFBMode extends IVMode implements IMode
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function OFBMode(param1:ISymmetricKey, param2:IPad = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.hurlant.crypto.symmetric"),"ISymmetricKey")
         param Qname(PackageNamespace("com.hurlant.crypto.symmetric"),"IPad")
         optional null
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         pushnull
         constructsuper 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function encrypt(param1:ByteArray) : void
      {
         trait method Qname(PackageNamespace(""),"encrypt")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4e")
         callproperty Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4e") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         getlocal_0
         getlocal_1
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"1131"),"core") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function decrypt(param1:ByteArray) : void
      {
         trait method Qname(PackageNamespace(""),"decrypt")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4d")
         callproperty Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4d") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         getlocal_0
         getlocal_1
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"1131"),"core") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function core(param1:ByteArray, param2:ByteArray) : void
      {
         trait method Qname(PrivateNamespace(null,"1131"),"core")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 8
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 6
         pushbyte 0
         convert_u
         setlocal 7
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setlocal_3
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal 4
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs00a5
         ofs0027:label
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"key")
         getlocal_2
         callpropvoid Qname(Namespace("com.hurlant.crypto.symmetric:ISymmetricKey"),"encrypt") 1
         getlocal 4
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal 4
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 1
         getlocal 5
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         add
         getlocal_3
         ifnlt ofs0052
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         convert_u
         jump ofs0057
         ofs0052:getlocal_3
         getlocal 5
         subtract
         convert_u
         ofs0057:convert_u
         setlocal 6
         pushbyte 0
         convert_u
         setlocal 7
         jump ofs0086
         ofs0063:label
         getlocal_1
         getlocal 5
         getlocal 7
         add
         getlocal_1
         getlocal 5
         getlocal 7
         add
         getproperty MultinameL([PrivateNamespace(null,"1131"),PackageNamespace("com.hurlant.crypto.symmetric"),PackageNamespace(""),PrivateNamespace(null,"2073"),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:OFBMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:OFBMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         getlocal_2
         getlocal 7
         getproperty MultinameL([PrivateNamespace(null,"1131"),PackageNamespace("com.hurlant.crypto.symmetric"),PackageNamespace(""),PrivateNamespace(null,"2073"),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:OFBMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:OFBMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         bitxor
         setproperty MultinameL([PrivateNamespace(null,"1131"),PackageNamespace("com.hurlant.crypto.symmetric"),PackageNamespace(""),PrivateNamespace(null,"2073"),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:OFBMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:OFBMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         getlocal 7
         increment
         convert_u
         setlocal 7
         ofs0086:getlocal 7
         getlocal 6
         iflt ofs0063
         getlocal_2
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 1
         getlocal 5
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         add
         convert_u
         setlocal 5
         ofs00a5:getlocal 5
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0027
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"key")
         callproperty Qname(Namespace("com.hurlant.crypto.symmetric:ISymmetricKey"),"toString") 0
         pushstring "-ofb"
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.hurlant.crypto.symmetric
{
   import flash.utils.ByteArray;
   
   public class CBCMode extends IVMode implements IMode
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function CBCMode(param1:ISymmetricKey, param2:IPad = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.hurlant.crypto.symmetric"),"ISymmetricKey")
         param Qname(PackageNamespace("com.hurlant.crypto.symmetric"),"IPad")
         optional null
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlocal_2
         constructsuper 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function encrypt(param1:ByteArray) : void
      {
         trait method Qname(PackageNamespace(""),"encrypt")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 4
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"padding")
         getlocal_1
         callpropvoid Qname(Namespace("com.hurlant.crypto.symmetric:IPad"),"pad") 1
         findpropstrict Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4e")
         callproperty Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4e") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         pushbyte 0
         convert_u
         setlocal_3
         jump ofs0077
         ofs0022:label
         pushbyte 0
         convert_u
         setlocal 4
         jump ofs004d
         ofs002c:label
         getlocal_1
         getlocal_3
         getlocal 4
         add
         getlocal_1
         getlocal_3
         getlocal 4
         add
         getproperty MultinameL([PrivateNamespace(null,"2067"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2068"),PackageNamespace(""),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"2067"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2068"),PackageNamespace(""),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         bitxor
         setproperty MultinameL([PrivateNamespace(null,"2067"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2068"),PackageNamespace(""),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         getlocal 4
         increment
         convert_u
         setlocal 4
         ofs004d:getlocal 4
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         iflt ofs002c
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"key")
         getlocal_1
         getlocal_3
         callpropvoid Qname(Namespace("com.hurlant.crypto.symmetric:ISymmetricKey"),"encrypt") 2
         getlocal_2
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         getlocal_1
         getlocal_3
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 3
         getlocal_3
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         add
         convert_u
         setlocal_3
         ofs0077:getlocal_3
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0022
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function decrypt(param1:ByteArray) : void
      {
         trait method Qname(PackageNamespace(""),"decrypt")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 5
         findpropstrict Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4d")
         callproperty Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"getIV4d") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_3
         pushbyte 0
         convert_u
         setlocal 4
         jump ofs0093
         ofs0026:label
         getlocal_3
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_3
         getlocal_1
         getlocal 4
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 3
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"key")
         getlocal_1
         getlocal 4
         callpropvoid Qname(Namespace("com.hurlant.crypto.symmetric:ISymmetricKey"),"decrypt") 2
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs006f
         ofs004c:label
         getlocal_1
         getlocal 4
         getlocal 5
         add
         getlocal_1
         getlocal 4
         getlocal 5
         add
         getproperty MultinameL([PrivateNamespace(null,"2067"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2068"),PackageNamespace(""),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         getlocal_2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"2067"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2068"),PackageNamespace(""),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         bitxor
         setproperty MultinameL([PrivateNamespace(null,"2067"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2068"),PackageNamespace(""),PackageInternalNs("com.hurlant.crypto.symmetric"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:CBCMode"),StaticProtectedNs("com.hurlant.crypto.symmetric:IVMode")])
         getlocal 5
         increment
         convert_u
         setlocal 5
         ofs006f:getlocal 5
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         iflt ofs004c
         getlocal_2
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         getlocal_3
         pushbyte 0
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 3
         getlocal 4
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"blockSize")
         add
         convert_u
         setlocal 4
         ofs0093:getlocal 4
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0026
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"padding")
         getlocal_1
         callpropvoid Qname(Namespace("com.hurlant.crypto.symmetric:IPad"),"unpad") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlex Qname(ProtectedNamespace("com.hurlant.crypto.symmetric:IVMode"),"key")
         callproperty Qname(Namespace("com.hurlant.crypto.symmetric:ISymmetricKey"),"toString") 0
         pushstring "-cbc"
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

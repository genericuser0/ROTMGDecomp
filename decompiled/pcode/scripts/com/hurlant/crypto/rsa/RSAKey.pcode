package com.hurlant.crypto.rsa
{
   import com.hurlant.crypto.prng.Random;
   import com.hurlant.crypto.tls.TLSError;
   import com.hurlant.math.BigInteger;
   import com.hurlant.util.Memory;
   import flash.utils.ByteArray;
   
   public class RSAKey
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var e:int;
      
      public var n:BigInteger;
      
      public var d:BigInteger;
      
      public var p:BigInteger;
      
      public var q:BigInteger;
      
      public var dmp1:BigInteger;
      
      public var dmq1:BigInteger;
      
      public var coeff:BigInteger;
      
      protected var canDecrypt:Boolean;
      
      protected var canEncrypt:Boolean;
      
      public function RSAKey(param1:BigInteger, param2:int, param3:BigInteger = null, param4:BigInteger = null, param5:BigInteger = null, param6:BigInteger = null, param7:BigInteger = null, param8:BigInteger = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         optional null
         optional null
         optional null
         optional null
         optional null
         optional null
         returns null
         
         body
         maxstack 3
         localcount 9
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"n")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"e")
         getlocal_0
         getlocal_3
         initproperty Qname(PackageNamespace(""),"d")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"p")
         getlocal_0
         getlocal 5
         initproperty Qname(PackageNamespace(""),"q")
         getlocal_0
         getlocal 6
         initproperty Qname(PackageNamespace(""),"dmp1")
         getlocal_0
         getlocal 7
         initproperty Qname(PackageNamespace(""),"dmq1")
         getlocal_0
         getlocal 8
         initproperty Qname(PackageNamespace(""),"coeff")
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"n")
         pushnull
         equals
         not
         dup
         iffalse ofs0048
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"e")
         pushbyte 0
         equals
         not
         ofs0048:initproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"canEncrypt")
         getlocal_0
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"canEncrypt")
         convert_b
         dup
         iffalse ofs005e
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d")
         pushnull
         equals
         not
         ofs005e:initproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"canDecrypt")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function parsePublicKey(param1:String, param2:String) : RSAKey
      {
         trait method Qname(PackageNamespace(""),"parsePublicKey")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("com.hurlant.crypto.rsa"),"RSAKey")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_1
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         construct 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function parsePrivateKey(param1:String, param2:String, param3:String, param4:String = null, param5:String = null, param6:String = null, param7:String = null, param8:String = null) : RSAKey
      {
         trait method Qname(PackageNamespace(""),"parsePrivateKey")
         flag FINAL
         dispid 4
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         optional null
         optional null
         optional null
         optional null
         optional null
         returns Qname(PackageNamespace("com.hurlant.crypto.rsa"),"RSAKey")
         
         body
         maxstack 12
         localcount 9
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal 4
         pushnull
         ifne ofs002f
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_1
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_3
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         construct 3
         returnvalue
         ofs002f:getlocal_0
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_1
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_3
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal 4
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal 5
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal 6
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal 7
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal 8
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         construct 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function generate(param1:uint, param2:String) : RSAKey
      {
         trait method Qname(PackageNamespace(""),"generate")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("com.hurlant.crypto.rsa"),"RSAKey")
         
         body
         maxstack 4
         localcount 11
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 7
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 8
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 9
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 10
         findpropstrict Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         constructprop Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random") 0
         coerce Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         setlocal_3
         getlocal_1
         pushbyte 1
         rshift
         convert_u
         setlocal 4
         getlocal_0
         pushnull
         pushbyte 0
         pushnull
         construct 3
         coerce Qname(PackageNamespace("com.hurlant.crypto.rsa"),"RSAKey")
         dup
         setlocal 5
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         setproperty Qname(PackageNamespace(""),"e")
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_2
         pushbyte 16
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 6
         jump ofs01e4
         ofs005c:label
         jump ofs00b3
         ofs0061:label
         getlocal 5
         findpropstrict Qname(StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),"bigRandom")
         getlocal_1
         getlocal 4
         subtract
         getlocal_3
         callproperty Qname(StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),"bigRandom") 2
         setproperty Qname(PackageNamespace(""),"p")
         getlocal 5
         getproperty Qname(PackageNamespace(""),"p")
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getproperty Qname(PackageNamespace(""),"ONE")
         callproperty Qname(PackageNamespace(""),"subtract") 1
         getlocal 6
         callproperty Qname(PackageNamespace(""),"gcd") 1
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getproperty Qname(PackageNamespace(""),"ONE")
         callproperty Qname(PackageNamespace(""),"compareTo") 1
         pushbyte 0
         equals
         dup
         iffalse ofs00ab
         pop
         getlocal 5
         getproperty Qname(PackageNamespace(""),"p")
         pushbyte 10
         callproperty Qname(PackageNamespace(""),"isProbablePrime") 1
         convert_b
         ofs00ab:iffalse ofs00b3
         jump ofs00b7
         ofs00b3:jump ofs0061
         ofs00b7:jump ofs010b
         ofs00bb:label
         getlocal 5
         findpropstrict Qname(StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),"bigRandom")
         getlocal 4
         getlocal_3
         callproperty Qname(StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),"bigRandom") 2
         setproperty Qname(PackageNamespace(""),"q")
         getlocal 5
         getproperty Qname(PackageNamespace(""),"q")
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getproperty Qname(PackageNamespace(""),"ONE")
         callproperty Qname(PackageNamespace(""),"subtract") 1
         getlocal 6
         callproperty Qname(PackageNamespace(""),"gcd") 1
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getproperty Qname(PackageNamespace(""),"ONE")
         callproperty Qname(PackageNamespace(""),"compareTo") 1
         pushbyte 0
         equals
         dup
         iffalse ofs0103
         pop
         getlocal 5
         getproperty Qname(PackageNamespace(""),"q")
         pushbyte 10
         callproperty Qname(PackageNamespace(""),"isProbablePrime") 1
         convert_b
         ofs0103:iffalse ofs010b
         jump ofs010f
         ofs010b:jump ofs00bb
         ofs010f:getlocal 5
         getproperty Qname(PackageNamespace(""),"p")
         getlocal 5
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"compareTo") 1
         pushbyte 0
         ifnle ofs013e
         getlocal 5
         getproperty Qname(PackageNamespace(""),"p")
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 10
         getlocal 5
         getlocal 5
         getproperty Qname(PackageNamespace(""),"q")
         setproperty Qname(PackageNamespace(""),"p")
         getlocal 5
         getlocal 10
         setproperty Qname(PackageNamespace(""),"q")
         ofs013e:getlocal 5
         getproperty Qname(PackageNamespace(""),"p")
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getproperty Qname(PackageNamespace(""),"ONE")
         callproperty Qname(PackageNamespace(""),"subtract") 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 7
         getlocal 5
         getproperty Qname(PackageNamespace(""),"q")
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getproperty Qname(PackageNamespace(""),"ONE")
         callproperty Qname(PackageNamespace(""),"subtract") 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 8
         getlocal 7
         getlocal 8
         callproperty Qname(PackageNamespace(""),"multiply") 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         dup
         setlocal 9
         getlocal 6
         callproperty Qname(PackageNamespace(""),"gcd") 1
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getproperty Qname(PackageNamespace(""),"ONE")
         callproperty Qname(PackageNamespace(""),"compareTo") 1
         pushbyte 0
         ifne ofs01e4
         getlocal 5
         getlocal 5
         getproperty Qname(PackageNamespace(""),"p")
         getlocal 5
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"multiply") 1
         setproperty Qname(PackageNamespace(""),"n")
         getlocal 5
         getlocal 6
         getlocal 9
         callproperty Qname(PackageNamespace(""),"modInverse") 1
         setproperty Qname(PackageNamespace(""),"d")
         getlocal 5
         getlocal 5
         getproperty Qname(PackageNamespace(""),"d")
         getlocal 7
         callproperty Qname(PackageNamespace(""),"mod") 1
         setproperty Qname(PackageNamespace(""),"dmp1")
         getlocal 5
         getlocal 5
         getproperty Qname(PackageNamespace(""),"d")
         getlocal 8
         callproperty Qname(PackageNamespace(""),"mod") 1
         setproperty Qname(PackageNamespace(""),"dmq1")
         getlocal 5
         getlocal 5
         getproperty Qname(PackageNamespace(""),"q")
         getlocal 5
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"modInverse") 1
         setproperty Qname(PackageNamespace(""),"coeff")
         jump ofs01e8
         ofs01e4:jump ofs005c
         ofs01e8:getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected static function bigRandom(param1:int, param2:Random) : BigInteger
      {
         trait method Qname(StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),"bigRandom")
         flag FINAL
         dispid 6
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         returns Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushbyte 2
         ifnlt ofs0014
         getlex Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         pushbyte 1
         callproperty Qname(PackageNamespace(""),"nbv") 1
         returnvalue
         ofs0014:findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_3
         getlocal_2
         getlocal_3
         getlocal_1
         pushbyte 3
         rshift
         callpropvoid Qname(PackageNamespace(""),"nextBytes") 2
         getlocal_3
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_3
         pushbyte 0
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         dup
         setlocal 4
         getlocal_1
         pushbyte 1
         callpropvoid Qname(PackageNamespace(""),"primify") 2
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getBlockSize() : uint
      {
         trait method Qname(PackageNamespace(""),"getBlockSize")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"n")
         callproperty Qname(PackageNamespace(""),"bitLength") 0
         pushbyte 7
         add
         pushbyte 8
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function dispose() : void
      {
         trait method Qname(PackageNamespace(""),"dispose")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"e")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"n")
         callpropvoid Qname(PackageNamespace(""),"dispose") 0
         getlocal_0
         pushnull
         initproperty Qname(PackageNamespace(""),"n")
         getlex Qname(PackageNamespace("com.hurlant.util"),"Memory")
         callpropvoid Qname(PackageNamespace(""),"gc") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function encrypt(param1:ByteArray, param2:ByteArray, param3:uint, param4:Function = null) : void
      {
         trait method Qname(PackageNamespace(""),"encrypt")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Function")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"doPublic")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         pushbyte 2
         callpropvoid Qname(PrivateNamespace(null,"1042"),"_encrypt") 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function decrypt(param1:ByteArray, param2:ByteArray, param3:uint, param4:Function = null) : void
      {
         trait method Qname(PackageNamespace(""),"decrypt")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Function")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"doPrivate2")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         pushbyte 2
         callpropvoid Qname(PrivateNamespace(null,"1042"),"_decrypt") 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sign(param1:ByteArray, param2:ByteArray, param3:uint, param4:Function = null) : void
      {
         trait method Qname(PackageNamespace(""),"sign")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Function")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"doPrivate2")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         pushbyte 1
         callpropvoid Qname(PrivateNamespace(null,"1042"),"_encrypt") 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function verify(param1:ByteArray, param2:ByteArray, param3:uint, param4:Function = null) : void
      {
         trait method Qname(PackageNamespace(""),"verify")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Function")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"doPublic")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         pushbyte 1
         callpropvoid Qname(PrivateNamespace(null,"1042"),"_decrypt") 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function _encrypt(param1:Function, param2:ByteArray, param3:ByteArray, param4:uint, param5:Function, param6:int) : void
      {
         trait method Qname(PrivateNamespace(null,"1042"),"_encrypt")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 11
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 9
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 10
         getlocal 5
         pushnull
         ifne ofs001d
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1042"),"pkcs1pad")
         coerce Qname(PackageNamespace(""),"Function")
         setlocal 5
         ofs001d:getlocal_2
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         ifnge ofs002f
         getlocal_2
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         ofs002f:getlocal_0
         callproperty Qname(PackageNamespace(""),"getBlockSize") 0
         convert_u
         setlocal 7
         getlocal_2
         getproperty Qname(PackageNamespace(""),"position")
         getlocal 4
         add
         convert_i
         setlocal 8
         jump ofs0072
         ofs0045:label
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal 5
         getglobalscope
         getlocal_2
         getlocal 8
         getlocal 7
         getlocal 6
         call 4
         getlocal 7
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 9
         getlocal_1
         getglobalscope
         getlocal 9
         call 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         dup
         setlocal 10
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"toArray") 1
         ofs0072:getlocal_2
         getproperty Qname(PackageNamespace(""),"position")
         getlocal 8
         iflt ofs0045
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function _decrypt(param1:Function, param2:ByteArray, param3:ByteArray, param4:uint, param5:Function, param6:int) : void
      {
         trait method Qname(PrivateNamespace(null,"1042"),"_decrypt")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 12
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 9
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 10
         pushnull
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal 11
         getlocal 5
         pushnull
         ifne ofs0023
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1042"),"pkcs1unpad")
         coerce Qname(PackageNamespace(""),"Function")
         setlocal 5
         ofs0023:getlocal_2
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         ifnge ofs0035
         getlocal_2
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         ofs0035:getlocal_0
         callproperty Qname(PackageNamespace(""),"getBlockSize") 0
         convert_u
         setlocal 7
         getlocal_2
         getproperty Qname(PackageNamespace(""),"position")
         getlocal 4
         add
         convert_i
         setlocal 8
         jump ofs0098
         ofs004b:label
         findpropstrict Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         getlocal_2
         getlocal 7
         pushtrue
         constructprop Qname(PackageNamespace("com.hurlant.math"),"BigInteger") 3
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 9
         getlocal_1
         getglobalscope
         getlocal 9
         call 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal 10
         getlocal 5
         getglobalscope
         getlocal 10
         getlocal 7
         getlocal 6
         call 3
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         dup
         setlocal 11
         pushnull
         ifne ofs0090
         findpropstrict Qname(PackageNamespace("com.hurlant.crypto.tls"),"TLSError")
         pushstring "Decrypt error - padding function returned null!"
         getlex Qname(PackageNamespace("com.hurlant.crypto.tls"),"TLSError")
         getproperty Qname(PackageNamespace(""),"decode_error")
         constructprop Qname(PackageNamespace("com.hurlant.crypto.tls"),"TLSError") 2
         throw
         ofs0090:getlocal_3
         getlocal 11
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 1
         ofs0098:getlocal_2
         getproperty Qname(PackageNamespace(""),"position")
         getlocal 8
         iflt ofs004b
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function pkcs1pad(param1:ByteArray, param2:int, param3:uint, param4:uint = 2) : ByteArray
      {
         trait method Qname(PrivateNamespace(null,"1042"),"pkcs1pad")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         optional 2
         returns Qname(PackageNamespace("flash.utils"),"ByteArray")
         
         body
         maxstack 5
         localcount 13
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         setlocal 8
         pushbyte 0
         setlocal 9
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal 5
         getlocal_1
         getproperty Qname(PackageNamespace(""),"position")
         convert_u
         setlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_2
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         getlocal 6
         getlocal_3
         add
         pushbyte 11
         subtract
         callproperty Qname(PackageNamespace(""),"min") 3
         convert_i
         setlocal_2
         getlocal_1
         getlocal_2
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         decrement
         convert_i
         setlocal 7
         jump ofs005f
         ofs0043:label
         getlocal 5
         getlocal_3
         decrement
         dup
         convert_u
         setlocal_3
         dup
         setlocal 10
         getlocal_1
         getlocal 7
         dup
         decrement_i
         setlocal 7
         getproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         setproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         kill 10
         ofs005f:getlocal 7
         getlocal 6
         greaterequals
         dup
         iffalse ofs006e
         pop
         getlocal_3
         pushbyte 11
         greaterthan
         ofs006e:iftrue ofs0043
         getlocal 5
         getlocal_3
         decrement
         dup
         convert_u
         setlocal_3
         dup
         setlocal 10
         pushbyte 0
         setproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         getlocal 4
         pushbyte 2
         ifne ofs00d1
         findpropstrict Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         constructprop Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random") 0
         coerce Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         setlocal 8
         pushbyte 0
         setlocal 9
         jump ofs00c6
         ofs009e:label
         jump ofs00a4
         ofs00a3:label
         ofs00a4:getlocal 8
         callproperty Qname(PackageNamespace(""),"nextByte") 0
         convert_i
         dup
         setlocal 9
         pushbyte 0
         ifeq ofs00a3
         getlocal 5
         getlocal_3
         decrement
         dup
         convert_u
         setlocal_3
         dup
         setlocal 11
         getlocal 9
         setproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         kill 11
         ofs00c6:getlocal_3
         pushbyte 2
         ifgt ofs009e
         jump ofs00f0
         ofs00d1:jump ofs00e9
         ofs00d5:label
         getlocal 5
         getlocal_3
         decrement
         dup
         convert_u
         setlocal_3
         dup
         setlocal 11
         pushshort 255
         setproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         kill 11
         ofs00e9:getlocal_3
         pushbyte 2
         ifgt ofs00d5
         ofs00f0:getlocal 5
         getlocal_3
         decrement
         dup
         convert_u
         setlocal_3
         dup
         setlocal 11
         getlocal 4
         setproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         getlocal 5
         getlocal_3
         decrement
         dup
         convert_u
         setlocal_3
         dup
         setlocal 12
         pushbyte 0
         setproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function pkcs1unpad(param1:BigInteger, param2:uint, param3:uint = 2) : ByteArray
      {
         trait method Qname(PrivateNamespace(null,"1042"),"pkcs1unpad")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         optional 2
         returns Qname(PackageNamespace("flash.utils"),"ByteArray")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         callproperty Qname(PackageNamespace(""),"toByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal 4
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal 5
         getlocal 4
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         pushbyte 0
         setlocal 6
         jump ofs002a
         ofs0027:label
         inclocal_i 6
         ofs002a:getlocal 6
         getlocal 4
         getproperty Qname(PackageNamespace(""),"length")
         lessthan
         dup
         iffalse ofs0043
         pop
         getlocal 4
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         pushbyte 0
         equals
         ofs0043:iftrue ofs0027
         getlocal 4
         getproperty Qname(PackageNamespace(""),"length")
         getlocal 6
         subtract
         getlocal_2
         decrement
         equals
         not
         dup
         iftrue ofs0064
         pop
         getlocal 4
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         getlocal_3
         equals
         not
         ofs0064:iffalse ofs0096
         findpropstrict Qname(PackageNamespace(""),"trace")
         pushstring "PKCS#1 unpad: i="
         getlocal 6
         add
         pushstring ", expected b[i]=="
         add
         getlocal_3
         add
         pushstring ", got b[i]="
         add
         getlocal 4
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         pushbyte 16
         callproperty Multiname("toString",[PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")]) 1
         add
         callpropvoid Qname(PackageNamespace(""),"trace") 1
         pushnull
         returnvalue
         ofs0096:inclocal_i 6
         jump ofs00da
         ofs009c:label
         getlocal 6
         increment_i
         dup
         convert_i
         setlocal 6
         getlocal 4
         getproperty Qname(PackageNamespace(""),"length")
         ifnge ofs00da
         findpropstrict Qname(PackageNamespace(""),"trace")
         pushstring "PKCS#1 unpad: i="
         getlocal 6
         add
         pushstring ", b[i-1]!=0 (="
         add
         getlocal 4
         getlocal 6
         decrement
         getproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         pushbyte 16
         callproperty Multiname("toString",[PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")]) 1
         add
         pushstring ")"
         add
         callpropvoid Qname(PackageNamespace(""),"trace") 1
         pushnull
         returnvalue
         ofs00da:getlocal 4
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         pushbyte 0
         ifne ofs009c
         jump ofs00fc
         ofs00ec:label
         getlocal 5
         getlocal 4
         getlocal 6
         getproperty MultinameL([PrivateNamespace(null,"1042"),PackageNamespace(""),PackageNamespace("com.hurlant.crypto.rsa"),StaticProtectedNs("com.hurlant.crypto.rsa:RSAKey"),ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),PrivateNamespace(null,"1983"),PackageInternalNs("com.hurlant.crypto.rsa"),Namespace("http://adobe.com/AS3/2006/builtin")])
         callpropvoid Qname(PackageNamespace(""),"writeByte") 1
         ofs00fc:getlocal 6
         increment_i
         dup
         convert_i
         setlocal 6
         getlocal 4
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs00ec
         getlocal 5
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function rawpad(param1:ByteArray, param2:int, param3:uint, param4:uint = 0) : ByteArray
      {
         trait method Qname(PackageNamespace(""),"rawpad")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace("flash.utils"),"ByteArray")
         
         body
         maxstack 1
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function rawunpad(param1:BigInteger, param2:uint, param3:uint = 0) : ByteArray
      {
         trait method Qname(PackageNamespace(""),"rawunpad")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace("flash.utils"),"ByteArray")
         
         body
         maxstack 1
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         callproperty Qname(PackageNamespace(""),"toByteArray") 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushstring "rsa"
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function dump() : String
      {
         trait method Qname(PackageNamespace(""),"dump")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushstring "N="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"n")
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"toString") 1
         add
         pushstring "\n"
         add
         pushstring "E="
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"e")
         pushbyte 16
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"toString") 1
         add
         pushstring "\n"
         add
         setlocal_1
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"canDecrypt")
         iffalse ofs00d5
         getlocal_1
         pushstring "D="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d")
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"toString") 1
         add
         pushstring "\n"
         add
         add
         coerce_s
         setlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         pushnull
         equals
         not
         dup
         iffalse ofs005e
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         pushnull
         equals
         not
         ofs005e:iffalse ofs00d5
         getlocal_1
         pushstring "P="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"toString") 1
         add
         pushstring "\n"
         add
         add
         coerce_s
         setlocal_1
         getlocal_1
         pushstring "Q="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"toString") 1
         add
         pushstring "\n"
         add
         add
         coerce_s
         setlocal_1
         getlocal_1
         pushstring "DMP1="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dmp1")
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"toString") 1
         add
         pushstring "\n"
         add
         add
         coerce_s
         setlocal_1
         getlocal_1
         pushstring "DMQ1="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dmq1")
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"toString") 1
         add
         pushstring "\n"
         add
         add
         coerce_s
         setlocal_1
         getlocal_1
         pushstring "IQMP="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"coeff")
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"toString") 1
         add
         pushstring "\n"
         add
         add
         coerce_s
         setlocal_1
         ofs00d5:getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function doPublic(param1:BigInteger) : BigInteger
      {
         trait method Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"doPublic")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         returns Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"e")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"n")
         callproperty Qname(PackageNamespace(""),"modPowInt") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function doPrivate2(param1:BigInteger) : BigInteger
      {
         trait method Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"doPrivate2")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         returns Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         pushnull
         equals
         dup
         iffalse ofs0014
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         pushnull
         equals
         ofs0014:iffalse ofs0026
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"n")
         callproperty Qname(PackageNamespace(""),"modPow") 2
         returnvalue
         ofs0026:getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"mod") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dmp1")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"modPow") 2
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal_2
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"mod") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dmq1")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"modPow") 2
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal_3
         jump ofs006a
         ofs005c:label
         getlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"add") 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal_2
         ofs006a:getlocal_2
         getlocal_3
         callproperty Qname(PackageNamespace(""),"compareTo") 1
         pushbyte 0
         iflt ofs005c
         getlocal_2
         getlocal_3
         callproperty Qname(PackageNamespace(""),"subtract") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"coeff")
         callproperty Qname(PackageNamespace(""),"multiply") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"mod") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"multiply") 1
         getlocal_3
         callproperty Qname(PackageNamespace(""),"add") 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         dup
         setlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function doPrivate(param1:BigInteger) : BigInteger
      {
         trait method Qname(ProtectedNamespace("com.hurlant.crypto.rsa:RSAKey"),"doPrivate")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         returns Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         pushnull
         equals
         dup
         iftrue ofs0014
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         pushnull
         equals
         ofs0014:iffalse ofs0026
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"d")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"n")
         callproperty Qname(PackageNamespace(""),"modPow") 2
         returnvalue
         ofs0026:getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"mod") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dmp1")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"modPow") 2
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal_2
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"mod") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dmq1")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"modPow") 2
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal_3
         jump ofs006a
         ofs005c:label
         getlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"add") 1
         coerce Qname(PackageNamespace("com.hurlant.math"),"BigInteger")
         setlocal_2
         ofs006a:getlocal_2
         getlocal_3
         callproperty Qname(PackageNamespace(""),"compareTo") 1
         pushbyte 0
         iflt ofs005c
         getlocal_2
         getlocal_3
         callproperty Qname(PackageNamespace(""),"subtract") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"coeff")
         callproperty Qname(PackageNamespace(""),"multiply") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"p")
         callproperty Qname(PackageNamespace(""),"mod") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"q")
         callproperty Qname(PackageNamespace(""),"multiply") 1
         getlocal_3
         callproperty Qname(PackageNamespace(""),"add") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package ion.utils.png
{
   import flash.display.BitmapData;
   import flash.utils.ByteArray;
   
   public class PNGDecoder
   {
      
      private static const IHDR:int = 1229472850;
      
      private static const IDAT:int = 1229209940;
      
      private static const tEXt:int = 1950701684;
      
      private static const iTXt:int = 1767135348;
      
      private static const zTXt:int = 2052348020;
      
      private static const IEND:int = 1229278788;
      
      private static var infoWidth:uint;
      
      private static var infoHeight:uint;
      
      private static var infoBitDepth:int;
      
      private static var infoColourType:int;
      
      private static var infoCompressionMethod:int;
      
      private static var infoFilterMethod:int;
      
      private static var infoInterlaceMethod:int;
      
      private static var fileIn:ByteArray;
      
      private static var buffer:ByteArray;
      
      private static var scanline:int;
      
      private static var samples:int;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"1290"),"IHDR")
         pushint 1229472850
         initproperty Qname(PrivateNamespace(null,"1290"),"IHDR")
         findproperty Qname(PrivateNamespace(null,"1290"),"IDAT")
         pushint 1229209940
         initproperty Qname(PrivateNamespace(null,"1290"),"IDAT")
         findproperty Qname(PrivateNamespace(null,"1290"),"tEXt")
         pushint 1950701684
         initproperty Qname(PrivateNamespace(null,"1290"),"tEXt")
         findproperty Qname(PrivateNamespace(null,"1290"),"iTXt")
         pushint 1767135348
         initproperty Qname(PrivateNamespace(null,"1290"),"iTXt")
         findproperty Qname(PrivateNamespace(null,"1290"),"zTXt")
         pushint 2052348020
         initproperty Qname(PrivateNamespace(null,"1290"),"zTXt")
         findproperty Qname(PrivateNamespace(null,"1290"),"IEND")
         pushint 1229278788
         initproperty Qname(PrivateNamespace(null,"1290"),"IEND")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function PNGDecoder()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function decodeImage(param1:ByteArray) : BitmapData
      {
         trait method Qname(PackageNamespace(""),"decodeImage")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace("flash.display"),"BitmapData")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushfalse
         setlocal 4
         pushbyte 0
         setlocal 5
         getlocal_1
         pushnull
         ifne ofs0011
         pushnull
         returnvalue
         ofs0011:findproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         findproperty Qname(PrivateNamespace(null,"1290"),"buffer")
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"buffer")
         findproperty Qname(PrivateNamespace(null,"1290"),"samples")
         pushbyte 4
         setproperty Qname(PrivateNamespace(null,"1290"),"samples")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         pushdouble 2.303741511E9
         ifeq ofs0056
         findpropstrict Qname(PrivateNamespace(null,"1290"),"invalidPNG")
         callproperty Qname(PrivateNamespace(null,"1290"),"invalidPNG") 0
         returnvalue
         ofs0056:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         pushint 218765834
         ifeq ofs0070
         findpropstrict Qname(PrivateNamespace(null,"1290"),"invalidPNG")
         callproperty Qname(PrivateNamespace(null,"1290"),"invalidPNG") 0
         returnvalue
         ofs0070:findpropstrict Qname(PrivateNamespace(null,"1290"),"getChunks")
         callproperty Qname(PrivateNamespace(null,"1290"),"getChunks") 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_2
         pushbyte 0
         setlocal_3
         pushbyte 0
         setlocal 5
         jump ofs0127
         ofs0087:label
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("position",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         setproperty Qname(PackageNamespace(""),"position")
         pushtrue
         setlocal 4
         getlocal_2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("type",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlex Qname(PrivateNamespace(null,"1290"),"IHDR")
         ifne ofs00d8
         inclocal_i 3
         getlocal 5
         pushbyte 0
         ifne ofs00d5
         findpropstrict Qname(PrivateNamespace(null,"1290"),"processIHDR")
         getlocal_2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("length",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         callproperty Qname(PrivateNamespace(null,"1290"),"processIHDR") 1
         convert_b
         setlocal 4
         jump ofs00d8
         ofs00d5:pushfalse
         setlocal 4
         ofs00d8:getlocal_2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("type",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlex Qname(PrivateNamespace(null,"1290"),"IDAT")
         ifne ofs010a
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("length",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 3
         ofs010a:getlocal 4
         not
         dup
         iftrue ofs0117
         pop
         getlocal_3
         pushbyte 1
         greaterthan
         ofs0117:iffalse ofs0125
         findpropstrict Qname(PrivateNamespace(null,"1290"),"invalidPNG")
         callproperty Qname(PrivateNamespace(null,"1290"),"invalidPNG") 0
         returnvalue
         ofs0125:inclocal_i 5
         ofs0127:getlocal 5
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0087
         findpropstrict Qname(PrivateNamespace(null,"1290"),"processIDAT")
         callproperty Qname(PrivateNamespace(null,"1290"),"processIDAT") 0
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal 6
         findproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         findproperty Qname(PrivateNamespace(null,"1290"),"buffer")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1290"),"buffer")
         getlocal 6
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function decodeInfo(param1:ByteArray) : XML
      {
         trait method Qname(PackageNamespace(""),"decodeInfo")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"XML")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         setlocal 4
         getlocal_1
         pushnull
         ifne ofs000e
         pushnull
         returnvalue
         ofs000e:findproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         pushdouble 2.303741511E9
         ifeq ofs003b
         findproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushnull
         returnvalue
         ofs003b:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         pushint 218765834
         ifeq ofs0056
         findproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushnull
         returnvalue
         ofs0056:findpropstrict Qname(PrivateNamespace(null,"1290"),"getChunks")
         callproperty Qname(PrivateNamespace(null,"1290"),"getChunks") 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_2
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<information/>"
         construct 1
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs0120
         ofs0075:label
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("type",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlex Qname(PrivateNamespace(null,"1290"),"tEXt")
         ifne ofs00ae
         getlocal_3
         findpropstrict Qname(PrivateNamespace(null,"1290"),"gettEXt")
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("position",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("length",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         callproperty Qname(PrivateNamespace(null,"1290"),"gettEXt") 2
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         ofs00ae:getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("type",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlex Qname(PrivateNamespace(null,"1290"),"iTXt")
         ifne ofs00e6
         getlocal_3
         findpropstrict Qname(PrivateNamespace(null,"1290"),"getiTXt")
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("position",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("length",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         callproperty Qname(PrivateNamespace(null,"1290"),"getiTXt") 2
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         ofs00e6:getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("type",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlex Qname(PrivateNamespace(null,"1290"),"zTXt")
         ifne ofs011e
         getlocal_3
         findpropstrict Qname(PrivateNamespace(null,"1290"),"getzTXt")
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("position",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlocal_2
         getlocal 4
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getproperty Multiname("length",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         callproperty Qname(PrivateNamespace(null,"1290"),"getzTXt") 2
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         ofs011e:inclocal_i 4
         ofs0120:getlocal 4
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0075
         findproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function gettEXt(param1:int, param2:int) : XML
      {
         trait method Qname(PrivateNamespace(null,"1290"),"gettEXt")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"XML")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<tEXt/>"
         construct 1
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_3
         pushstring ""
         setlocal 4
         pushstring ""
         setlocal 5
         pushbyte -1
         setlocal 6
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"position")
         jump ofs0050
         ofs0025:label
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         dup
         setlocal 6
         pushbyte 0
         ifngt ofs004c
         getlocal 4
         getlex Qname(PackageNamespace(""),"String")
         getlocal 6
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode") 1
         add
         coerce_s
         setlocal 4
         jump ofs0050
         ofs004c:jump ofs005e
         ofs0050:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_2
         add
         iflt ofs0025
         ofs005e:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_1
         getlocal_2
         add
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         subtract
         callproperty Qname(PackageNamespace(""),"readUTFBytes") 1
         coerce_s
         setlocal 5
         getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<keyword>"
         getlocal 4
         esc_xelem
         add
         pushstring "</keyword>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<text>"
         getlocal 5
         esc_xelem
         add
         pushstring "</text>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function getzTXt(param1:int, param2:int) : XML
      {
         trait method Qname(PrivateNamespace(null,"1290"),"getzTXt")
         flag FINAL
         dispid 6
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"XML")
         
         body
         maxstack 5
         localcount 9
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal 8
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<zTXt/>"
         construct 1
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_3
         pushstring ""
         setlocal 4
         pushstring ""
         setlocal 5
         pushbyte -1
         setlocal 6
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"position")
         jump ofs0056
         ofs002b:label
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         dup
         setlocal 6
         pushbyte 0
         ifngt ofs0052
         getlocal 4
         getlex Qname(PackageNamespace(""),"String")
         getlocal 6
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode") 1
         add
         coerce_s
         setlocal 4
         jump ofs0056
         ofs0052:jump ofs0064
         ofs0056:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_2
         add
         iflt ofs002b
         ofs0064:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         dup
         setlocal 7
         pushbyte 0
         ifne ofs00b5
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         dup
         setlocal 8
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_2
         add
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         subtract
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 3
         getlocal 8
         callpropvoid Qname(PackageNamespace(""),"uncompress") 0
         getlocal 8
         getlocal 8
         getproperty Qname(PackageNamespace(""),"length")
         callproperty Qname(PackageNamespace(""),"readUTFBytes") 1
         coerce_s
         setlocal 5
         ofs00b5:getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<keyword>"
         getlocal 4
         esc_xelem
         add
         pushstring "</keyword>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<text>"
         getlocal 5
         esc_xelem
         add
         pushstring "</text>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function getiTXt(param1:int, param2:int) : XML
      {
         trait method Qname(PrivateNamespace(null,"1290"),"getiTXt")
         flag FINAL
         dispid 7
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"XML")
         
         body
         maxstack 5
         localcount 12
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal 11
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<iTXt/>"
         construct 1
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_3
         pushstring ""
         setlocal 4
         pushstring ""
         setlocal 5
         pushstring ""
         setlocal 6
         pushstring ""
         setlocal 7
         pushbyte -1
         setlocal 8
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"position")
         jump ofs005e
         ofs0033:label
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         dup
         setlocal 8
         pushbyte 0
         ifngt ofs005a
         getlocal 4
         getlex Qname(PackageNamespace(""),"String")
         getlocal 8
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode") 1
         add
         coerce_s
         setlocal 4
         jump ofs005e
         ofs005a:jump ofs006c
         ofs005e:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_2
         add
         iflt ofs0033
         ofs006c:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         pushbyte 1
         equals
         setlocal 9
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         setlocal 10
         jump ofs00b5
         ofs008a:label
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         dup
         setlocal 8
         pushbyte 0
         ifngt ofs00b1
         getlocal 5
         getlex Qname(PackageNamespace(""),"String")
         getlocal 8
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode") 1
         add
         coerce_s
         setlocal 5
         jump ofs00b5
         ofs00b1:jump ofs00c3
         ofs00b5:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_2
         add
         iflt ofs008a
         ofs00c3:jump ofs00f2
         ofs00c7:label
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         dup
         setlocal 8
         pushbyte 0
         ifngt ofs00ee
         getlocal 6
         getlex Qname(PackageNamespace(""),"String")
         getlocal 8
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode") 1
         add
         coerce_s
         setlocal 6
         jump ofs00f2
         ofs00ee:jump ofs0100
         ofs00f2:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_2
         add
         iflt ofs00c7
         ofs0100:getlocal 9
         iffalse ofs0150
         getlocal 10
         pushbyte 0
         ifne ofs014c
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         dup
         setlocal 11
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_2
         add
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         subtract
         callpropvoid Qname(PackageNamespace(""),"writeBytes") 3
         getlocal 11
         callpropvoid Qname(PackageNamespace(""),"uncompress") 0
         getlocal 11
         getlocal 11
         getproperty Qname(PackageNamespace(""),"length")
         callproperty Qname(PackageNamespace(""),"readUTFBytes") 1
         coerce_s
         setlocal 7
         ofs014c:jump ofs0167
         ofs0150:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlocal_1
         getlocal_2
         add
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         subtract
         callproperty Qname(PackageNamespace(""),"readUTFBytes") 1
         coerce_s
         setlocal 7
         ofs0167:getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<keyword>"
         getlocal 4
         esc_xelem
         add
         pushstring "</keyword>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<text>"
         getlocal 7
         esc_xelem
         add
         pushstring "</text>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<languageTag>"
         getlocal 5
         esc_xelem
         add
         pushstring "</languageTag>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         getlex Qname(PackageNamespace(""),"XML")
         pushstring "<translatedKeyword>"
         getlocal 6
         esc_xelem
         add
         pushstring "</translatedKeyword>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")]) 1
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function invalidPNG() : BitmapData
      {
         trait method Qname(PrivateNamespace(null,"1290"),"invalidPNG")
         flag FINAL
         dispid 8
         method
         name null
         returns Qname(PackageNamespace("flash.display"),"BitmapData")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1290"),"fileIn")
         findproperty Qname(PrivateNamespace(null,"1290"),"buffer")
         pushnull
         setproperty Qname(PrivateNamespace(null,"1290"),"buffer")
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function getChunks() : Array
      {
         trait method Qname(PrivateNamespace(null,"1290"),"getChunks")
         flag FINAL
         dispid 9
         method
         name null
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 7
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal_2
         pushbyte 0
         setlocal_3
         newarray 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_1
         jump ofs0013
         ofs0012:label
         ofs0013:getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         convert_u
         setlocal_2
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readInt") 0
         convert_i
         setlocal_3
         getlocal_1
         pushstring "type"
         getlocal_3
         pushstring "position"
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         pushstring "length"
         getlocal_2
         newobject 3
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"position")
         getlocal_2
         pushbyte 4
         add
         add
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_3
         getlex Qname(PrivateNamespace(null,"1290"),"IEND")
         equals
         not
         dup
         iffalse ofs006e
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         getproperty Qname(PackageNamespace(""),"bytesAvailable")
         pushbyte 0
         greaterthan
         ofs006e:iftrue ofs0012
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function processIHDR(param1:int) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"1290"),"processIHDR")
         flag FINAL
         dispid 10
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushbyte 13
         ifeq ofs000b
         pushfalse
         returnvalue
         ofs000b:findproperty Qname(PrivateNamespace(null,"1290"),"infoWidth")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"infoWidth")
         findproperty Qname(PrivateNamespace(null,"1290"),"infoHeight")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"infoHeight")
         findproperty Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         findproperty Qname(PrivateNamespace(null,"1290"),"infoColourType")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"infoColourType")
         findproperty Qname(PrivateNamespace(null,"1290"),"infoCompressionMethod")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"infoCompressionMethod")
         findproperty Qname(PrivateNamespace(null,"1290"),"infoFilterMethod")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"infoFilterMethod")
         findproperty Qname(PrivateNamespace(null,"1290"),"infoInterlaceMethod")
         getlex Qname(PrivateNamespace(null,"1290"),"fileIn")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         setproperty Qname(PrivateNamespace(null,"1290"),"infoInterlaceMethod")
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         pushbyte 0
         lessequals
         dup
         iftrue ofs0096
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoHeight")
         pushbyte 0
         lessequals
         ofs0096:iffalse ofs009c
         pushfalse
         returnvalue
         ofs009c:jump ofs00ac
         ofs00a0:label
         jump ofs0117
         ofs00a5:label
         pushfalse
         returnvalue
         jump ofs00ac
         ofs00ac:getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         setlocal_2
         pushbyte 1
         getlocal_2
         ifstrictne ofs00be
         pushbyte 0
         jump ofs00fe
         ofs00be:pushbyte 2
         getlocal_2
         ifstrictne ofs00cb
         pushbyte 1
         jump ofs00fe
         ofs00cb:pushbyte 4
         getlocal_2
         ifstrictne ofs00d8
         pushbyte 2
         jump ofs00fe
         ofs00d8:pushbyte 8
         getlocal_2
         ifstrictne ofs00e5
         pushbyte 3
         jump ofs00fe
         ofs00e5:pushbyte 16
         getlocal_2
         ifstrictne ofs00f2
         pushbyte 4
         jump ofs00fe
         ofs00f2:jump ofs00fc
         pushbyte 5
         jump ofs00fc
         ofs00fc:pushbyte 5
         ofs00fe:kill 2
         lookupswitch ofs00a5 5 ofs00a0 ofs00a0 ofs00a0 ofs00a0 ofs00a0 ofs00a5
         ofs0117:jump ofs01cb
         ofs011b:label
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 1
         equals
         not
         dup
         iffalse ofs0132
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 2
         equals
         not
         ofs0132:dup
         iffalse ofs0140
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 4
         equals
         not
         ofs0140:dup
         iffalse ofs014e
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 8
         equals
         not
         ofs014e:dup
         iffalse ofs015c
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 16
         equals
         not
         ofs015c:iffalse ofs0162
         pushfalse
         returnvalue
         ofs0162:jump ofs0236
         ofs0166:label
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 8
         equals
         not
         dup
         iffalse ofs017d
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 16
         equals
         not
         ofs017d:iffalse ofs0183
         pushfalse
         returnvalue
         ofs0183:jump ofs0236
         ofs0187:label
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 1
         equals
         not
         dup
         iffalse ofs019e
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 2
         equals
         not
         ofs019e:dup
         iffalse ofs01ac
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 4
         equals
         not
         ofs01ac:dup
         iffalse ofs01ba
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoBitDepth")
         pushbyte 8
         equals
         not
         ofs01ba:iffalse ofs01c0
         pushfalse
         returnvalue
         ofs01c0:jump ofs0236
         ofs01c4:label
         pushfalse
         returnvalue
         jump ofs01cb
         ofs01cb:getlex Qname(PrivateNamespace(null,"1290"),"infoColourType")
         setlocal_2
         pushbyte 0
         getlocal_2
         ifstrictne ofs01dd
         pushbyte 0
         jump ofs021d
         ofs01dd:pushbyte 2
         getlocal_2
         ifstrictne ofs01ea
         pushbyte 1
         jump ofs021d
         ofs01ea:pushbyte 4
         getlocal_2
         ifstrictne ofs01f7
         pushbyte 2
         jump ofs021d
         ofs01f7:pushbyte 6
         getlocal_2
         ifstrictne ofs0204
         pushbyte 3
         jump ofs021d
         ofs0204:pushbyte 3
         getlocal_2
         ifstrictne ofs0211
         pushbyte 4
         jump ofs021d
         ofs0211:jump ofs021b
         pushbyte 5
         jump ofs021b
         ofs021b:pushbyte 5
         ofs021d:kill 2
         lookupswitch ofs01c4 5 ofs011b ofs0166 ofs0166 ofs0166 ofs0187 ofs01c4
         ofs0236:getlex Qname(PrivateNamespace(null,"1290"),"infoCompressionMethod")
         pushbyte 0
         equals
         not
         dup
         iftrue ofs024c
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoFilterMethod")
         pushbyte 0
         equals
         not
         ofs024c:iffalse ofs0252
         pushfalse
         returnvalue
         ofs0252:getlex Qname(PrivateNamespace(null,"1290"),"infoInterlaceMethod")
         pushbyte 0
         equals
         not
         dup
         iffalse ofs0268
         pop
         getlex Qname(PrivateNamespace(null,"1290"),"infoInterlaceMethod")
         pushbyte 1
         equals
         not
         ofs0268:iffalse ofs026e
         pushfalse
         returnvalue
         ofs026e:pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function processIDAT() : BitmapData
      {
         trait method Qname(PrivateNamespace(null,"1290"),"processIDAT")
         flag FINAL
         dispid 11
         method
         name null
         flag NEED_ACTIVATION
         returns Qname(PackageNamespace("flash.display"),"BitmapData")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 4
         maxscopedepth 9
         try from ofs0048 to ofs0051 target ofs0055 type null name Qname(PackageNamespace(""),"err")
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_1
         pushscope
         getscopeobject 1
         pushbyte 0
         convert_u
         setslot 2
         getscopeobject 1
         pushbyte 0
         setslot 3
         getscopeobject 1
         pushbyte 0
         setslot 4
         getscopeobject 1
         pushbyte 0
         convert_u
         setslot 5
         getscopeobject 1
         pushbyte 0
         convert_u
         setslot 6
         getscopeobject 1
         pushbyte 0
         convert_u
         setslot 7
         getscopeobject 1
         pushbyte 0
         convert_u
         setslot 8
         getscopeobject 1
         findpropstrict Qname(PackageNamespace("flash.display"),"BitmapData")
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         getlex Qname(PrivateNamespace(null,"1290"),"infoHeight")
         constructprop Qname(PackageNamespace("flash.display"),"BitmapData") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setslot 1
         ofs0048:getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         callpropvoid Qname(PackageNamespace(""),"uncompress") 0
         ofs0051:jump ofs0067
         ofs0055:getlocal_0
         pushscope
         getlocal_1
         pushscope
         newcatch 0
         dup
         setlocal_2
         dup
         pushscope
         swap
         setslot 1
         pushnull
         returnvalue
         popscope
         kill 2
         ofs0067:findproperty Qname(PrivateNamespace(null,"1290"),"scanline")
         pushbyte 0
         setproperty Qname(PrivateNamespace(null,"1290"),"scanline")
         getscopeobject 1
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setslot 2
         jump ofs03a2
         ofs0081:label
         getscopeobject 1
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_i
         setslot 3
         getscopeobject 1
         getslot 3
         pushbyte 0
         ifne ofs0124
         getscopeobject 1
         pushbyte 0
         setslot 4
         jump ofs0114
         ofs00a4:label
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"noSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"noSample") 0
         pushbyte 16
         lshift
         convert_u
         setslot 5
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"noSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"noSample") 0
         pushbyte 8
         lshift
         convert_u
         setslot 6
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"noSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"noSample") 0
         convert_u
         setslot 7
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"noSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"noSample") 0
         pushbyte 24
         lshift
         convert_u
         setslot 8
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"scanline")
         getscopeobject 1
         getslot 8
         getscopeobject 1
         getslot 5
         add
         getscopeobject 1
         getslot 6
         add
         getscopeobject 1
         getslot 7
         add
         callpropvoid Qname(PackageNamespace(""),"setPixel32") 3
         getscopeobject 1
         getslot 4
         increment_i
         getscopeobject 1
         swap
         setslot 4
         ofs0114:getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         iflt ofs00a4
         jump ofs038c
         ofs0124:getscopeobject 1
         getslot 3
         pushbyte 1
         ifne ofs01b8
         getscopeobject 1
         pushbyte 0
         setslot 4
         jump ofs01a8
         ofs0138:label
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"subSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"subSample") 0
         pushbyte 16
         lshift
         convert_u
         setslot 5
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"subSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"subSample") 0
         pushbyte 8
         lshift
         convert_u
         setslot 6
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"subSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"subSample") 0
         convert_u
         setslot 7
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"subSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"subSample") 0
         pushbyte 24
         lshift
         convert_u
         setslot 8
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"scanline")
         getscopeobject 1
         getslot 8
         getscopeobject 1
         getslot 5
         add
         getscopeobject 1
         getslot 6
         add
         getscopeobject 1
         getslot 7
         add
         callpropvoid Qname(PackageNamespace(""),"setPixel32") 3
         getscopeobject 1
         getslot 4
         increment_i
         getscopeobject 1
         swap
         setslot 4
         ofs01a8:getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         iflt ofs0138
         jump ofs038c
         ofs01b8:getscopeobject 1
         getslot 3
         pushbyte 2
         ifne ofs024c
         getscopeobject 1
         pushbyte 0
         setslot 4
         jump ofs023c
         ofs01cc:label
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"upSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"upSample") 0
         pushbyte 16
         lshift
         convert_u
         setslot 5
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"upSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"upSample") 0
         pushbyte 8
         lshift
         convert_u
         setslot 6
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"upSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"upSample") 0
         convert_u
         setslot 7
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"upSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"upSample") 0
         pushbyte 24
         lshift
         convert_u
         setslot 8
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"scanline")
         getscopeobject 1
         getslot 8
         getscopeobject 1
         getslot 5
         add
         getscopeobject 1
         getslot 6
         add
         getscopeobject 1
         getslot 7
         add
         callpropvoid Qname(PackageNamespace(""),"setPixel32") 3
         getscopeobject 1
         getslot 4
         increment_i
         getscopeobject 1
         swap
         setslot 4
         ofs023c:getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         iflt ofs01cc
         jump ofs038c
         ofs024c:getscopeobject 1
         getslot 3
         pushbyte 3
         ifne ofs02e0
         getscopeobject 1
         pushbyte 0
         setslot 4
         jump ofs02d0
         ofs0260:label
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"averageSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"averageSample") 0
         pushbyte 16
         lshift
         convert_u
         setslot 5
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"averageSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"averageSample") 0
         pushbyte 8
         lshift
         convert_u
         setslot 6
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"averageSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"averageSample") 0
         convert_u
         setslot 7
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"averageSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"averageSample") 0
         pushbyte 24
         lshift
         convert_u
         setslot 8
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"scanline")
         getscopeobject 1
         getslot 8
         getscopeobject 1
         getslot 5
         add
         getscopeobject 1
         getslot 6
         add
         getscopeobject 1
         getslot 7
         add
         callpropvoid Qname(PackageNamespace(""),"setPixel32") 3
         getscopeobject 1
         getslot 4
         increment_i
         getscopeobject 1
         swap
         setslot 4
         ofs02d0:getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         iflt ofs0260
         jump ofs038c
         ofs02e0:getscopeobject 1
         getslot 3
         pushbyte 4
         ifne ofs0374
         getscopeobject 1
         pushbyte 0
         setslot 4
         jump ofs0364
         ofs02f4:label
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"paethSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"paethSample") 0
         pushbyte 16
         lshift
         convert_u
         setslot 5
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"paethSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"paethSample") 0
         pushbyte 8
         lshift
         convert_u
         setslot 6
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"paethSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"paethSample") 0
         convert_u
         setslot 7
         getscopeobject 1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"paethSample")
         callproperty Qname(PrivateNamespace(null,"1290"),"paethSample") 0
         pushbyte 24
         lshift
         convert_u
         setslot 8
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"scanline")
         getscopeobject 1
         getslot 8
         getscopeobject 1
         getslot 5
         add
         getscopeobject 1
         getslot 6
         add
         getscopeobject 1
         getslot 7
         add
         callpropvoid Qname(PackageNamespace(""),"setPixel32") 3
         getscopeobject 1
         getslot 4
         increment_i
         getscopeobject 1
         swap
         setslot 4
         ofs0364:getscopeobject 1
         getslot 4
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         iflt ofs02f4
         jump ofs038c
         ofs0374:getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getlex Qname(PrivateNamespace(null,"1290"),"samples")
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         multiply
         add
         setproperty Qname(PackageNamespace(""),"position")
         ofs038c:findpropstrict Qname(PrivateNamespace(null,"1290"),"scanline")
         dup
         setlocal_2
         getproperty Qname(PrivateNamespace(null,"1290"),"scanline")
         increment_i
         setlocal_3
         getlocal_2
         getlocal_3
         setproperty Qname(PrivateNamespace(null,"1290"),"scanline")
         kill 3
         kill 2
         ofs03a2:getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getscopeobject 1
         getslot 2
         iflt ofs0081
         getscopeobject 1
         getslot 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function noSample() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"noSample")
         flag FINAL
         dispid 12
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         dup
         setlocal_1
         getproperty Qname(PackageNamespace(""),"position")
         convert_d
         dup
         increment
         setlocal_2
         getlocal_1
         getlocal_2
         setproperty Qname(PackageNamespace(""),"position")
         kill 2
         kill 1
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function subSample() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"subSample")
         flag FINAL
         dispid 13
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         findpropstrict Qname(PrivateNamespace(null,"1290"),"byteA")
         callproperty Qname(PrivateNamespace(null,"1290"),"byteA") 0
         add
         convert_u
         setlocal_1
         getlocal_1
         pushshort 255
         bitand
         convert_u
         setlocal_1
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         dup
         setlocal_3
         getproperty Qname(PackageNamespace(""),"position")
         convert_d
         dup
         increment
         setlocal 4
         getlocal_3
         getlocal 4
         setproperty Qname(PackageNamespace(""),"position")
         kill 4
         kill 3
         setlocal_2
         getlocal_2
         getlocal_1
         setproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function upSample() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"upSample")
         flag FINAL
         dispid 14
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         findpropstrict Qname(PrivateNamespace(null,"1290"),"byteB")
         callproperty Qname(PrivateNamespace(null,"1290"),"byteB") 0
         add
         convert_u
         setlocal_1
         getlocal_1
         pushshort 255
         bitand
         convert_u
         setlocal_1
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         dup
         setlocal_3
         getproperty Qname(PackageNamespace(""),"position")
         convert_d
         dup
         increment
         setlocal 4
         getlocal_3
         getlocal 4
         setproperty Qname(PackageNamespace(""),"position")
         kill 4
         kill 3
         setlocal_2
         getlocal_2
         getlocal_1
         setproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function averageSample() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"averageSample")
         flag FINAL
         dispid 15
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlex Qname(PackageNamespace(""),"Math")
         findpropstrict Qname(PrivateNamespace(null,"1290"),"byteA")
         callproperty Qname(PrivateNamespace(null,"1290"),"byteA") 0
         findpropstrict Qname(PrivateNamespace(null,"1290"),"byteB")
         callproperty Qname(PrivateNamespace(null,"1290"),"byteB") 0
         add
         pushbyte 2
         divide
         callproperty Qname(PackageNamespace(""),"floor") 1
         add
         convert_u
         setlocal_1
         getlocal_1
         pushshort 255
         bitand
         convert_u
         setlocal_1
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         dup
         setlocal_3
         getproperty Qname(PackageNamespace(""),"position")
         convert_d
         dup
         increment
         setlocal 4
         getlocal_3
         getlocal 4
         setproperty Qname(PackageNamespace(""),"position")
         kill 4
         kill 3
         setlocal_2
         getlocal_2
         getlocal_1
         setproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function paethSample() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"paethSample")
         flag FINAL
         dispid 16
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         findpropstrict Qname(PrivateNamespace(null,"1290"),"paethPredictor")
         callproperty Qname(PrivateNamespace(null,"1290"),"paethPredictor") 0
         add
         convert_u
         setlocal_1
         getlocal_1
         pushshort 255
         bitand
         convert_u
         setlocal_1
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         dup
         setlocal_3
         getproperty Qname(PackageNamespace(""),"position")
         convert_d
         dup
         increment
         setlocal 4
         getlocal_3
         getlocal 4
         setproperty Qname(PackageNamespace(""),"position")
         kill 4
         kill 3
         setlocal_2
         getlocal_2
         getlocal_1
         setproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function paethPredictor() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"paethPredictor")
         flag FINAL
         dispid 17
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 9
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PrivateNamespace(null,"1290"),"byteA")
         callproperty Qname(PrivateNamespace(null,"1290"),"byteA") 0
         convert_u
         setlocal_1
         findpropstrict Qname(PrivateNamespace(null,"1290"),"byteB")
         callproperty Qname(PrivateNamespace(null,"1290"),"byteB") 0
         convert_u
         setlocal_2
         findpropstrict Qname(PrivateNamespace(null,"1290"),"byteC")
         callproperty Qname(PrivateNamespace(null,"1290"),"byteC") 0
         convert_u
         setlocal_3
         pushbyte 0
         setlocal 4
         pushbyte 0
         setlocal 5
         pushbyte 0
         setlocal 6
         pushbyte 0
         setlocal 7
         pushbyte 0
         setlocal 8
         getlocal_1
         getlocal_2
         add
         getlocal_3
         subtract
         convert_i
         setlocal 4
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 4
         getlocal_1
         subtract
         callproperty Qname(PackageNamespace(""),"abs") 1
         convert_i
         setlocal 5
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 4
         getlocal_2
         subtract
         callproperty Qname(PackageNamespace(""),"abs") 1
         convert_i
         setlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 4
         getlocal_3
         subtract
         callproperty Qname(PackageNamespace(""),"abs") 1
         convert_i
         setlocal 7
         getlocal 5
         getlocal 6
         lessequals
         dup
         iffalse ofs007c
         pop
         getlocal 5
         getlocal 7
         lessequals
         ofs007c:iffalse ofs0088
         getlocal_1
         convert_i
         setlocal 8
         jump ofs009c
         ofs0088:getlocal 6
         getlocal 7
         ifnle ofs0098
         getlocal_2
         convert_i
         setlocal 8
         jump ofs009c
         ofs0098:getlocal_3
         convert_i
         setlocal 8
         ofs009c:getlocal 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function byteA() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"byteA")
         flag FINAL
         dispid 18
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"scanline")
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         getlex Qname(PrivateNamespace(null,"1290"),"samples")
         multiply
         pushbyte 1
         add
         multiply
         convert_i
         setlocal_1
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getlex Qname(PrivateNamespace(null,"1290"),"samples")
         subtract
         convert_i
         setlocal_2
         getlocal_2
         getlocal_1
         ifnle ofs002c
         pushbyte 0
         returnvalue
         ofs002c:getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function byteB() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"byteB")
         flag FINAL
         dispid 19
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         getlex Qname(PrivateNamespace(null,"1290"),"samples")
         multiply
         pushbyte 1
         add
         subtract
         convert_i
         setlocal_1
         getlocal_1
         pushbyte 0
         ifnlt ofs0022
         pushbyte 0
         returnvalue
         ofs0022:getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function byteC() : uint
      {
         trait method Qname(PrivateNamespace(null,"1290"),"byteC")
         flag FINAL
         dispid 20
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getproperty Qname(PackageNamespace(""),"position")
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         getlex Qname(PrivateNamespace(null,"1290"),"samples")
         multiply
         pushbyte 1
         add
         subtract
         convert_i
         setlocal_1
         getlocal_1
         pushbyte 0
         ifnlt ofs0022
         pushbyte 0
         returnvalue
         ofs0022:getlex Qname(PrivateNamespace(null,"1290"),"scanline")
         decrement
         getlex Qname(PrivateNamespace(null,"1290"),"infoWidth")
         getlex Qname(PrivateNamespace(null,"1290"),"samples")
         multiply
         pushbyte 1
         add
         multiply
         convert_i
         setlocal_2
         getlocal_1
         getlex Qname(PrivateNamespace(null,"1290"),"samples")
         subtract
         convert_i
         setlocal_1
         getlocal_1
         getlocal_2
         ifnle ofs0047
         pushbyte 0
         returnvalue
         ofs0047:getlex Qname(PrivateNamespace(null,"1290"),"buffer")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1290"),PackageNamespace(""),PrivateNamespace(null,"2090"),PackageNamespace("ion.utils.png"),PackageInternalNs("ion.utils.png"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("ion.utils.png:PNGDecoder"),StaticProtectedNs("ion.utils.png:PNGDecoder")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

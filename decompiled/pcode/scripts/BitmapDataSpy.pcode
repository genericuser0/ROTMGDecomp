package
{
   import flash.display.BitmapData;
   
   public class BitmapDataSpy extends BitmapData
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function BitmapDataSpy(param1:int, param2:int, param3:Boolean = true, param4:uint = 0)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"uint")
         optional true
         optional 0
         returns null
         
         body
         maxstack 5
         localcount 5
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         constructsuper 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function clone() : BitmapData
      {
         trait method Qname(PackageNamespace(""),"clone")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("flash.display"),"BitmapData")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callsuper Qname(PackageNamespace(""),"clone") 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

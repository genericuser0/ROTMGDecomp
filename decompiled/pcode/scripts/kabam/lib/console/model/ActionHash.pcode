package kabam.lib.console.model
{
   import org.osflash.signals.Signal;
   
   final class ActionHash
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var signalMap:Object;
      
      private var descriptionMap:Object;
      
      function ActionHash()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         newobject 0
         initproperty Qname(PrivateNamespace(null,"1095"),"signalMap")
         getlocal_0
         newobject 0
         initproperty Qname(PrivateNamespace(null,"1095"),"descriptionMap")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function register(param1:String, param2:String, param3:Signal) : void
      {
         trait method Qname(PackageNamespace(""),"register")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace("org.osflash.signals"),"Signal")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1095"),"signalMap")
         getlocal_1
         getlocal_3
         setproperty MultinameL([PrivateNamespace(null,"1095"),PrivateNamespace(null,"2029"),PackageNamespace(""),PackageNamespace("kabam.lib.console.model"),PackageInternalNs("kabam.lib.console.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.console.model:ActionHash"),StaticProtectedNs("kabam.lib.console.model:ActionHash")])
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1095"),"descriptionMap")
         getlocal_1
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"1095"),PrivateNamespace(null,"2029"),PackageNamespace(""),PackageNamespace("kabam.lib.console.model"),PackageInternalNs("kabam.lib.console.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.console.model:ActionHash"),StaticProtectedNs("kabam.lib.console.model:ActionHash")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getNames() : Vector.<String>
      {
         trait method Qname(PackageNamespace(""),"getNames")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         
         body
         maxstack 4
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_2
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"1095"),PrivateNamespace(null,"2029"),PackageNamespace(""),PackageNamespace("kabam.lib.console.model"),PackageInternalNs("kabam.lib.console.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.console.model:ActionHash"),StaticProtectedNs("kabam.lib.console.model:ActionHash"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"String")
         applytype 1
         pushbyte 0
         construct 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         setlocal_1
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1095"),"signalMap")
         coerce_a
         setlocal 4
         jump ofs0044
         ofs0027:label
         getlocal 4
         getlocal_3
         nextname
         coerce_s
         setlocal_2
         getlocal_1
         getlocal_2
         pushstring " - "
         add
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1095"),"descriptionMap")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"1095"),PrivateNamespace(null,"2029"),PackageNamespace(""),PackageNamespace("kabam.lib.console.model"),PackageInternalNs("kabam.lib.console.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.console.model:ActionHash"),StaticProtectedNs("kabam.lib.console.model:ActionHash")])
         add
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0044:hasnext2 4 3
         iftrue ofs0027
         kill 4
         kill 3
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function execute(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"execute")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushstring " "
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs001a
         returnvoid
         ofs001a:getlocal_2
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"shift") 0
         coerce_s
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1095"),"signalMap")
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"1095"),PrivateNamespace(null,"2029"),PackageNamespace(""),PackageNamespace("kabam.lib.console.model"),PackageInternalNs("kabam.lib.console.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.console.model:ActionHash"),StaticProtectedNs("kabam.lib.console.model:ActionHash")])
         coerce Qname(PackageNamespace("org.osflash.signals"),"Signal")
         dup
         setlocal 4
         iftrue ofs0035
         returnvoid
         ofs0035:getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         ifngt ofs0060
         getlocal 4
         getproperty Qname(PackageNamespace(""),"dispatch")
         getlocal_0
         getlocal_2
         pushstring " "
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         pushstring ","
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         jump ofs006b
         ofs0060:getlocal 4
         getproperty Qname(PackageNamespace(""),"dispatch")
         getlocal_0
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 1
         ofs006b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function has(param1:String) : Boolean
      {
         trait method Qname(PackageNamespace(""),"has")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushstring " "
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         dup
         iffalse ofs002e
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1095"),"signalMap")
         getlocal_2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1095"),PrivateNamespace(null,"2029"),PackageNamespace(""),PackageNamespace("kabam.lib.console.model"),PackageInternalNs("kabam.lib.console.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.console.model:ActionHash"),StaticProtectedNs("kabam.lib.console.model:ActionHash")])
         getproperty MultinameL([PrivateNamespace(null,"1095"),PrivateNamespace(null,"2029"),PackageNamespace(""),PackageNamespace("kabam.lib.console.model"),PackageInternalNs("kabam.lib.console.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.console.model:ActionHash"),StaticProtectedNs("kabam.lib.console.model:ActionHash")])
         pushnull
         equals
         not
         ofs002e:returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

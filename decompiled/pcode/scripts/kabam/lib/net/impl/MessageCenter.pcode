package kabam.lib.net.impl
{
   import kabam.lib.net.api.MessageMap;
   import kabam.lib.net.api.MessageMapping;
   import kabam.lib.net.api.MessageProvider;
   import org.swiftsuspenders.Injector;
   
   public class MessageCenter implements MessageMap, MessageProvider
   {
      
      private static const MAX_ID:int = 256;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"502"),"MAX_ID")
         pushshort 256
         initproperty Qname(PrivateNamespace(null,"502"),"MAX_ID")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const maps:Vector.<MessageCenterMapping>;
      
      private const pools:Vector.<MessagePool>;
      
      private var injector:Injector;
      
      public function MessageCenter()
      {
         method
         name null
         returns null
         
         body
         maxstack 4
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlex Multiname("Vector",[PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         applytype 1
         getlex Qname(PrivateNamespace(null,"502"),"MAX_ID")
         pushtrue
         construct 2
         initproperty Qname(PrivateNamespace(null,"502"),"maps")
         getlocal_0
         getlex Multiname("Vector",[PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         applytype 1
         getlex Qname(PrivateNamespace(null,"502"),"MAX_ID")
         pushtrue
         construct 2
         initproperty Qname(PrivateNamespace(null,"502"),"pools")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setInjector(param1:Injector) : MessageCenter
      {
         trait method Qname(PackageNamespace(""),"setInjector")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("org.swiftsuspenders"),"Injector")
         returns Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenter")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"502"),"injector")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function map(param1:int) : MessageMapping
      {
         trait method Qname(PackageNamespace(""),"map")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.lib.net.api"),"MessageMapping")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"maps")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"maps")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         dup
         iftrue ofs0022
         pop
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"502"),"makeMapping") 1
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         ofs0022:dup
         setlocal_2
         setproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         getlocal_2
         kill 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function unmap(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"unmap")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"pools")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         coerce_a
         dup
         iffalse ofs0020
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"pools")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         callproperty Qname(PackageNamespace(""),"dispose") 0
         coerce_a
         ofs0020:pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"pools")
         getlocal_1
         pushnull
         setproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"maps")
         getlocal_1
         pushnull
         setproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function makeMapping(param1:int) : MessageCenterMapping
      {
         trait method Qname(PrivateNamespace(null,"502"),"makeMapping")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         constructprop Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping") 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"injector")
         callproperty Qname(PackageNamespace(""),"setInjector") 1
         getlocal_1
         callproperty Qname(PackageNamespace(""),"setID") 1
         getlex Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         astypelate
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function require(param1:int) : Message
      {
         trait method Qname(PackageNamespace(""),"require")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.lib.net.impl"),"Message")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"pools")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"pools")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         dup
         iftrue ofs0022
         pop
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"502"),"makePool") 1
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         ofs0022:dup
         setlocal_3
         setproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         getlocal_3
         kill 3
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         setlocal_2
         getlocal_2
         callproperty Qname(PackageNamespace(""),"require") 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function makePool(param1:uint) : MessagePool
      {
         trait method Qname(PrivateNamespace(null,"502"),"makePool")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"502"),"maps")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"502"),PackageNamespace("kabam.lib.net.impl"),PrivateNamespace(null,"1532"),PackageNamespace(""),PackageInternalNs("kabam.lib.net.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.net.impl:MessageCenter"),StaticProtectedNs("kabam.lib.net.impl:MessageCenter")])
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         setlocal_2
         getlocal_2
         iffalse ofs0020
         getlocal_2
         callproperty Qname(PackageNamespace(""),"makePool") 0
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         jump ofs0024
         ofs0020:pushnull
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         ofs0024:returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

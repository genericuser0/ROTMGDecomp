package kabam.rotmg.packages
{
   import kabam.lib.resizing.view.Resizable;
   import kabam.lib.resizing.view.ResizableMediator;
   import kabam.rotmg.packages.control.AlreadyBoughtPackageCommand;
   import kabam.rotmg.packages.control.AlreadyBoughtPackageSignal;
   import kabam.rotmg.packages.control.BuyPackageCommand;
   import kabam.rotmg.packages.control.BuyPackageSignal;
   import kabam.rotmg.packages.control.BuyPackageSuccessfulCommand;
   import kabam.rotmg.packages.control.BuyPackageSuccessfulSignal;
   import kabam.rotmg.packages.control.InitPackagesCommand;
   import kabam.rotmg.packages.control.InitPackagesSignal;
   import kabam.rotmg.packages.control.IsPackageAffordableGuard;
   import kabam.rotmg.packages.control.OpenPackageCommand;
   import kabam.rotmg.packages.control.OpenPackageSignal;
   import kabam.rotmg.packages.control.PackageAvailableSignal;
   import kabam.rotmg.packages.services.GetPackagesTask;
   import kabam.rotmg.packages.services.PackageModel;
   import kabam.rotmg.packages.view.PackageInfoDialog;
   import kabam.rotmg.packages.view.PackageInfoMediator;
   import kabam.rotmg.packages.view.PackageOfferDialog;
   import kabam.rotmg.packages.view.PackageOfferDialogMediator;
   import kabam.rotmg.startup.control.StartupSequence;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;
   import robotlegs.bender.extensions.signalCommandMap.api.ISignalCommandMap;
   import robotlegs.bender.framework.api.IConfig;
   
   public class PackageConfig implements IConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var injector:Injector;
      
      [Inject]
      public var mediatorMap:IMediatorMap;
      
      [Inject]
      public var commandMap:ISignalCommandMap;
      
      [Inject]
      public var sequence:StartupSequence;
      
      public function PackageConfig()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function configure() : void
      {
         trait method Qname(PackageNamespace(""),"configure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.services"),"PackageModel")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"PackageAvailableSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.services"),"GetPackagesTask")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.view"),"PackageOfferDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages.view"),"PackageOfferDialogMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.view"),"PackageInfoDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages.view"),"PackageInfoMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.lib.resizing.view"),"Resizable")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.lib.resizing.view"),"ResizableMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"BuyPackageSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"BuyPackageCommand")
         callproperty Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages"),"IsAccountRegisteredToBuyPackageGuard")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"IsPackageAffordableGuard")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMappingConfig"),"withGuards") 2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"AlreadyBoughtPackageSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"AlreadyBoughtPackageCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"BuyPackageSuccessfulSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"BuyPackageSuccessfulCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"InitPackagesSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"InitPackagesCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"OpenPackageSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.packages.control"),"OpenPackageCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"sequence")
         getlex Qname(PackageNamespace("kabam.rotmg.packages.services"),"GetPackagesTask")
         pushbyte 5
         callpropvoid Qname(PackageNamespace(""),"addTask") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.packages.services
{
   import kabam.rotmg.packages.model.PackageInfo;
   import org.osflash.signals.Signal;
   
   public class PackageModel
   {
      
      public static const TARGETING_BOX_SLOT:int = 100;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"TARGETING_BOX_SLOT")
         pushbyte 100
         initproperty Qname(PackageNamespace(""),"TARGETING_BOX_SLOT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var numSpammed:int = 0;
      
      private var models:Object;
      
      private var initialized:Boolean;
      
      private var maxSlots:int = 18;
      
      public const updateSignal:Signal;
      
      public function PackageModel()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         newobject 0
         initproperty Qname(PrivateNamespace(null,"81"),"models")
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 0
         initproperty Qname(PackageNamespace(""),"updateSignal")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getBoxesForGrid() : Vector.<PackageInfo>
      {
         trait method Qname(PackageNamespace(""),"getBoxesForGrid")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")>)
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlex Multiname("Vector",[PrivateNamespace(null,"81"),PackageNamespace(""),PackageNamespace("kabam.rotmg.packages.model"),PrivateNamespace(null,"1331"),PackageNamespace("kabam.rotmg.packages.services"),PackageInternalNs("kabam.rotmg.packages.services"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.packages.services:PackageModel"),StaticProtectedNs("kabam.rotmg.packages.services:PackageModel"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         applytype 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"maxSlots")
         construct 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")>)
         setlocal_1
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         coerce_a
         setlocal 4
         jump ofs0061
         ofs0025:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"slot")
         pushbyte 0
         equals
         not
         dup
         iffalse ofs0045
         pop
         getlocal_2
         getproperty Qname(PackageNamespace(""),"slot")
         getlex Qname(PackageNamespace(""),"TARGETING_BOX_SLOT")
         equals
         not
         ofs0045:dup
         iffalse ofs0052
         pop
         getlocal_0
         getlocal_2
         callproperty Qname(PrivateNamespace(null,"81"),"isPackageValid") 1
         convert_b
         ofs0052:iffalse ofs0061
         getlocal_1
         getlocal_2
         getproperty Qname(PackageNamespace(""),"slot")
         decrement
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"81"),PackageNamespace(""),PackageNamespace("kabam.rotmg.packages.model"),PrivateNamespace(null,"1331"),PackageNamespace("kabam.rotmg.packages.services"),PackageInternalNs("kabam.rotmg.packages.services"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.packages.services:PackageModel"),StaticProtectedNs("kabam.rotmg.packages.services:PackageModel")])
         ofs0061:hasnext2 4 3
         iftrue ofs0025
         kill 4
         kill 3
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTargetingBoxesForGrid() : Vector.<PackageInfo>
      {
         trait method Qname(PackageNamespace(""),"getTargetingBoxesForGrid")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")>)
         
         body
         maxstack 2
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlex Multiname("Vector",[PrivateNamespace(null,"81"),PackageNamespace(""),PackageNamespace("kabam.rotmg.packages.model"),PrivateNamespace(null,"1331"),PackageNamespace("kabam.rotmg.packages.services"),PackageInternalNs("kabam.rotmg.packages.services"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.packages.services:PackageModel"),StaticProtectedNs("kabam.rotmg.packages.services:PackageModel"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         applytype 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"maxSlots")
         construct 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")>)
         setlocal_1
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         coerce_a
         setlocal 4
         jump ofs004e
         ofs0025:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"slot")
         getlex Qname(PackageNamespace(""),"TARGETING_BOX_SLOT")
         equals
         dup
         iffalse ofs0043
         pop
         getlocal_0
         getlocal_2
         callproperty Qname(PrivateNamespace(null,"81"),"isPackageValid") 1
         convert_b
         ofs0043:iffalse ofs004e
         getlocal_1
         getlocal_2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs004e:hasnext2 4 3
         iftrue ofs0025
         kill 4
         kill 3
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isPackageValid(param1:PackageInfo) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"81"),"isPackageValid")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"unitsLeft")
         pushbyte -1
         equals
         dup
         iftrue ofs0016
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"unitsLeft")
         pushbyte 0
         greaterthan
         ofs0016:dup
         iffalse ofs0030
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"maxPurchase")
         pushbyte -1
         equals
         dup
         iftrue ofs0030
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"purchaseLeft")
         pushbyte 0
         greaterthan
         ofs0030:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function startupPackage() : PackageInfo
      {
         trait method Qname(PackageNamespace(""),"startupPackage")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_1
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         coerce_a
         setlocal 4
         jump ofs007e
         ofs0018:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"slot")
         getlex Qname(PackageNamespace(""),"TARGETING_BOX_SLOT")
         ifne ofs002e
         getlocal_2
         returnvalue
         ofs002e:getlocal_0
         getlocal_2
         callproperty Qname(PrivateNamespace(null,"81"),"isPackageValid") 1
         convert_b
         dup
         iffalse ofs0040
         pop
         getlocal_2
         getproperty Qname(PackageNamespace(""),"showOnLogin")
         convert_b
         ofs0040:dup
         iffalse ofs004e
         pop
         getlocal_2
         getproperty Qname(PackageNamespace(""),"popupImage")
         pushstring ""
         equals
         not
         ofs004e:iffalse ofs007e
         getlocal_1
         pushnull
         ifeq ofs007a
         getlocal_2
         getproperty Qname(PackageNamespace(""),"unitsLeft")
         pushbyte -1
         equals
         not
         dup
         iftrue ofs006e
         pop
         getlocal_2
         getproperty Qname(PackageNamespace(""),"maxPurchase")
         pushbyte -1
         equals
         not
         ofs006e:iffalse ofs0076
         getlocal_2
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_1
         ofs0076:jump ofs007e
         ofs007a:getlocal_2
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_1
         ofs007e:hasnext2 4 3
         iftrue ofs0018
         kill 4
         kill 3
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getInitialized() : Boolean
      {
         trait method Qname(PackageNamespace(""),"getInitialized")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"initialized")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getPackageById(param1:int) : PackageInfo
      {
         trait method Qname(PackageNamespace(""),"getPackageById")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"81"),PackageNamespace(""),PackageNamespace("kabam.rotmg.packages.model"),PrivateNamespace(null,"1331"),PackageNamespace("kabam.rotmg.packages.services"),PackageInternalNs("kabam.rotmg.packages.services"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.packages.services:PackageModel"),StaticProtectedNs("kabam.rotmg.packages.services:PackageModel")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasPackage(param1:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasPackage")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         in
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setPackages(param1:Array) : void
      {
         trait method Qname(PackageNamespace(""),"setPackages")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlocal_0
         newobject 0
         initproperty Qname(PrivateNamespace(null,"81"),"models")
         pushbyte 0
         setlocal_3
         getlocal_1
         coerce_a
         setlocal 4
         jump ofs002c
         ofs0017:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"id")
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"81"),PackageNamespace(""),PackageNamespace("kabam.rotmg.packages.model"),PrivateNamespace(null,"1331"),PackageNamespace("kabam.rotmg.packages.services"),PackageInternalNs("kabam.rotmg.packages.services"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.packages.services:PackageModel"),StaticProtectedNs("kabam.rotmg.packages.services:PackageModel")])
         ofs002c:hasnext2 4 3
         iftrue ofs0017
         kill 4
         kill 3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"updateSignal")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 0
         getlocal_0
         pushtrue
         initproperty Qname(PrivateNamespace(null,"81"),"initialized")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function canPurchasePackage(param1:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"canPurchasePackage")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"81"),PackageNamespace(""),PackageNamespace("kabam.rotmg.packages.model"),PrivateNamespace(null,"1331"),PackageNamespace("kabam.rotmg.packages.services"),PackageInternalNs("kabam.rotmg.packages.services"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.packages.services:PackageModel"),StaticProtectedNs("kabam.rotmg.packages.services:PackageModel")])
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_2
         getlocal_2
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getPriorityPackage() : PackageInfo
      {
         trait method Qname(PackageNamespace(""),"getPriorityPackage")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.packages.model"),"PackageInfo")
         setlocal_1
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setInitialized(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setInitialized")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"81"),"initialized")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasPackages() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasPackages")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace(""),"Object")
         setlocal_1
         pushbyte 0
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"81"),"models")
         coerce_a
         setlocal_3
         jump ofs001c
         ofs0013:label
         getlocal_3
         getlocal_2
         nextvalue
         coerce Qname(PackageNamespace(""),"Object")
         setlocal_1
         pushtrue
         returnvalue
         ofs001c:hasnext2 3 2
         iftrue ofs0013
         kill 3
         kill 2
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

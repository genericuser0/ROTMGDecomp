package kabam.rotmg.util.components
{
   import com.company.util.AssetLibrary;
   import flash.display.Bitmap;
   import flash.display.BitmapData;
   import flash.display.Sprite;
   
   public class UIAssetsHelper
   {
      
      public static const LEFT_NEVIGATOR:String = "left";
      
      public static const RIGHT_NEVIGATOR:String = "right";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"LEFT_NEVIGATOR")
         pushstring "left"
         initproperty Qname(PackageNamespace(""),"LEFT_NEVIGATOR")
         findproperty Qname(PackageNamespace(""),"RIGHT_NEVIGATOR")
         pushstring "right"
         initproperty Qname(PackageNamespace(""),"RIGHT_NEVIGATOR")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function UIAssetsHelper()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function createLeftNevigatorIcon(param1:String = "left", param2:int = 4, param3:Number = 0) : Sprite
      {
         trait method Qname(PackageNamespace(""),"createLeftNevigatorIcon")
         flag FINAL
         dispid 3
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Number")
         optional "left"
         optional 4
         optional 0
         returns Qname(PackageNamespace("flash.display"),"Sprite")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal 4
         getlocal_1
         getlex Qname(PackageNamespace(""),"LEFT_NEVIGATOR")
         ifne ofs0025
         getlex Qname(PackageNamespace("com.company.util"),"AssetLibrary")
         pushstring "lofiInterface"
         pushbyte 55
         callproperty Qname(PackageNamespace(""),"getImageFromSet") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal 4
         jump ofs0036
         ofs0025:getlex Qname(PackageNamespace("com.company.util"),"AssetLibrary")
         pushstring "lofiInterface"
         pushbyte 54
         callproperty Qname(PackageNamespace(""),"getImageFromSet") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal 4
         ofs0036:findpropstrict Qname(PackageNamespace("flash.display"),"Bitmap")
         getlocal 4
         constructprop Qname(PackageNamespace("flash.display"),"Bitmap") 1
         coerce Qname(PackageNamespace("flash.display"),"Bitmap")
         dup
         setlocal 5
         getlocal_2
         setproperty Qname(PackageNamespace(""),"scaleX")
         getlocal 5
         getlocal_2
         setproperty Qname(PackageNamespace(""),"scaleY")
         getlocal 5
         getlocal_3
         setproperty Qname(PackageNamespace(""),"rotation")
         findpropstrict Qname(PackageNamespace("flash.display"),"Sprite")
         constructprop Qname(PackageNamespace("flash.display"),"Sprite") 0
         coerce Qname(PackageNamespace("flash.display"),"Sprite")
         dup
         setlocal 6
         getlocal 5
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         getlocal 6
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

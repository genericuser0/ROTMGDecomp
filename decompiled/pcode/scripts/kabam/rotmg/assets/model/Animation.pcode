package kabam.rotmg.assets.model
{
   import flash.display.Bitmap;
   import flash.display.BitmapData;
   import flash.display.Sprite;
   import flash.events.TimerEvent;
   import flash.utils.Timer;
   
   public class Animation extends Sprite
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const DEFAULT_SPEED:int = 200;
      
      private const bitmap:Bitmap;
      
      private const frames:Vector.<BitmapData>;
      
      private const timer:Timer;
      
      private var started:Boolean;
      
      private var index:int;
      
      private var count:uint;
      
      private var disposed:Boolean;
      
      public function Animation()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"540"),"makeBitmap") 0
         initproperty Qname(PrivateNamespace(null,"540"),"bitmap")
         getlocal_0
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"540"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1550"),PackageNamespace("kabam.rotmg.assets.model"),PackageInternalNs("kabam.rotmg.assets.model"),ProtectedNamespace("kabam.rotmg.assets.model:Animation"),StaticProtectedNs("kabam.rotmg.assets.model:Animation"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("flash.display"),"BitmapData")
         applytype 1
         pushbyte 0
         construct 1
         initproperty Qname(PrivateNamespace(null,"540"),"frames")
         getlocal_0
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"540"),"makeTimer") 0
         initproperty Qname(PrivateNamespace(null,"540"),"timer")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function makeBitmap() : Bitmap
      {
         trait method Qname(PrivateNamespace(null,"540"),"makeBitmap")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("flash.display"),"Bitmap")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.display"),"Bitmap")
         constructprop Qname(PackageNamespace("flash.display"),"Bitmap") 0
         coerce Qname(PackageNamespace("flash.display"),"Bitmap")
         setlocal_1
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function makeTimer() : Timer
      {
         trait method Qname(PrivateNamespace(null,"540"),"makeTimer")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("flash.utils"),"Timer")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.utils"),"Timer")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"DEFAULT_SPEED")
         constructprop Qname(PackageNamespace("flash.utils"),"Timer") 1
         coerce Qname(PackageNamespace("flash.utils"),"Timer")
         setlocal_1
         getlocal_1
         getlex Qname(PackageNamespace("flash.events"),"TimerEvent")
         getproperty Qname(PackageNamespace(""),"TIMER")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"iterate")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getSpeed() : int
      {
         trait method Qname(PackageNamespace(""),"getSpeed")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"timer")
         getproperty Qname(PackageNamespace(""),"delay")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setSpeed(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setSpeed")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"timer")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"delay")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFrames(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"setFrames")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"frames")
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"length")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"540"),"index")
         pushbyte 0
         setlocal_3
         getlocal_1
         coerce_a
         setlocal 4
         jump ofs0036
         ofs0020:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_2
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"frames")
         getlocal_2
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         initproperty Qname(PrivateNamespace(null,"540"),"count")
         ofs0036:hasnext2 4 3
         iftrue ofs0020
         kill 4
         kill 3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"started")
         iffalse ofs0052
         getlocal_0
         callpropvoid Qname(PackageNamespace(""),"start") 0
         jump ofs0057
         ofs0052:getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"540"),"iterate") 0
         ofs0057:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addFrame(param1:BitmapData) : void
      {
         trait method Qname(PackageNamespace(""),"addFrame")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.display"),"BitmapData")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"frames")
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         initproperty Qname(PrivateNamespace(null,"540"),"count")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"started")
         coerce_a
         dup
         iffalse ofs0021
         pop
         getlocal_0
         callproperty Qname(PackageNamespace(""),"start") 0
         coerce_a
         ofs0021:pop
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function start() : void
      {
         trait method Qname(PackageNamespace(""),"start")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"started")
         not
         dup
         iffalse ofs0014
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"count")
         pushbyte 0
         greaterthan
         ofs0014:iffalse ofs0025
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"timer")
         callpropvoid Qname(PackageNamespace(""),"start") 0
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"540"),"iterate") 0
         ofs0025:getlocal_0
         pushtrue
         initproperty Qname(PrivateNamespace(null,"540"),"started")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function stop() : void
      {
         trait method Qname(PackageNamespace(""),"stop")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"started")
         coerce_a
         dup
         iffalse ofs0016
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"timer")
         callproperty Qname(PackageNamespace(""),"stop") 0
         coerce_a
         ofs0016:pop
         getlocal_0
         pushfalse
         initproperty Qname(PrivateNamespace(null,"540"),"started")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function iterate(param1:TimerEvent = null) : void
      {
         trait method Qname(PrivateNamespace(null,"540"),"iterate")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.events"),"TimerEvent")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         dup
         setlocal_2
         getproperty Qname(PrivateNamespace(null,"540"),"index")
         increment_i
         dup
         setlocal_3
         getlocal_2
         getlocal_3
         setproperty Qname(PrivateNamespace(null,"540"),"index")
         kill 3
         kill 2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"count")
         modulo
         initproperty Qname(PrivateNamespace(null,"540"),"index")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"bitmap")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"frames")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"index")
         getproperty MultinameL([PrivateNamespace(null,"540"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1550"),PackageNamespace("kabam.rotmg.assets.model"),PackageInternalNs("kabam.rotmg.assets.model"),ProtectedNamespace("kabam.rotmg.assets.model:Animation"),StaticProtectedNs("kabam.rotmg.assets.model:Animation"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         setproperty Qname(PackageNamespace(""),"bitmapData")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function dispose() : void
      {
         trait method Qname(PackageNamespace(""),"dispose")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_1
         getlocal_0
         pushtrue
         initproperty Qname(PrivateNamespace(null,"540"),"disposed")
         getlocal_0
         callpropvoid Qname(PackageNamespace(""),"stop") 0
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"540"),"index")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"540"),"count")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"frames")
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"frames")
         coerce_a
         setlocal_3
         jump ofs003e
         ofs0032:label
         getlocal_3
         getlocal_2
         nextvalue
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_1
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"dispose") 0
         ofs003e:hasnext2 3 2
         iftrue ofs0032
         kill 3
         kill 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isStarted() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isStarted")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"started")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isDisposed() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isDisposed")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"540"),"disposed")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.account
{
   import com.company.assembleegameclient.account.ui.MoneyFrameMediator;
   import flash.display.DisplayObjectContainer;
   import flash.display.LoaderInfo;
   import kabam.rotmg.account.core.BuyCharacterSlotCommand;
   import kabam.rotmg.account.core.commands.PurchaseGoldCommand;
   import kabam.rotmg.account.core.commands.VerifyAgeCommand;
   import kabam.rotmg.account.core.control.IsAccountRegisteredToBuyGoldGuard;
   import kabam.rotmg.account.core.model.OfferModel;
   import kabam.rotmg.account.core.services.GetCharListTask;
   import kabam.rotmg.account.core.services.VerifyAgeTask;
   import kabam.rotmg.account.core.signals.PurchaseGoldSignal;
   import kabam.rotmg.account.core.signals.UpdateAccountInfoSignal;
   import kabam.rotmg.account.core.signals.VerifyAgeSignal;
   import kabam.rotmg.account.core.view.MoneyFrame;
   import kabam.rotmg.account.core.view.PurchaseConfirmationDialog;
   import kabam.rotmg.account.core.view.PurchaseConfirmationMediator;
   import kabam.rotmg.account.kabam.KabamAccountConfig;
   import kabam.rotmg.account.kongregate.KongregateAccountConfig;
   import kabam.rotmg.account.securityQuestions.commands.SaveSecurityQuestionsCommand;
   import kabam.rotmg.account.securityQuestions.data.SecurityQuestionsModel;
   import kabam.rotmg.account.securityQuestions.mediators.SecurityQuestionsMediator;
   import kabam.rotmg.account.securityQuestions.signals.SaveSecurityQuestionsSignal;
   import kabam.rotmg.account.securityQuestions.tasks.SaveSecurityQuestionsTask;
   import kabam.rotmg.account.securityQuestions.view.SecurityQuestionsConfirmDialog;
   import kabam.rotmg.account.securityQuestions.view.SecurityQuestionsDialog;
   import kabam.rotmg.account.securityQuestions.view.SecurityQuestionsInfoDialog;
   import kabam.rotmg.account.steam.SteamAccountConfig;
   import kabam.rotmg.account.transfer.TransferAccountConfig;
   import kabam.rotmg.account.web.WebAccountConfig;
   import kabam.rotmg.core.signals.MoneyFrameEnableCancelSignal;
   import kabam.rotmg.core.signals.TaskErrorSignal;
   import kabam.rotmg.ui.signals.BuyCharacterSlotSignal;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;
   import robotlegs.bender.extensions.signalCommandMap.api.ISignalCommandMap;
   import robotlegs.bender.framework.api.IConfig;
   import robotlegs.bender.framework.api.IContext;
   import robotlegs.bender.framework.api.ILogger;
   
   public class AccountConfig implements IConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var root:DisplayObjectContainer;
      
      [Inject]
      public var injector:Injector;
      
      [Inject]
      public var commandMap:ISignalCommandMap;
      
      [Inject]
      public var mediatorMap:IMediatorMap;
      
      [Inject]
      public var context:IContext;
      
      [Inject]
      public var info:LoaderInfo;
      
      [Inject]
      public var logger:ILogger;
      
      public function AccountConfig()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function configure() : void
      {
         trait method Qname(PackageNamespace(""),"configure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"29"),"configureCommonFunctionality") 0
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"29"),"configureAccountSpecificFunctionality") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         getproperty Qname(Namespace("robotlegs.bender.framework.api:IContext"),"lifecycle")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"29"),"init")
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILifecycle"),"afterInitializing") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function configureCommonFunctionality() : void
      {
         trait method Qname(PrivateNamespace(null,"29"),"configureCommonFunctionality")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.core.signals"),"TaskErrorSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.signals"),"UpdateAccountInfoSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"VerifyAgeTask")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"GetCharListTask")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.core.signals"),"MoneyFrameEnableCancelSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.data"),"SecurityQuestionsModel")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.model"),"OfferModel")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.tasks"),"SaveSecurityQuestionsTask")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.view"),"MoneyFrame")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.account.ui"),"MoneyFrameMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.view"),"SecurityQuestionsDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.mediators"),"SecurityQuestionsMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.view"),"SecurityQuestionsInfoDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.mediators"),"SecurityQuestionsMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.view"),"SecurityQuestionsConfirmDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.mediators"),"SecurityQuestionsMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.view"),"PurchaseConfirmationDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.view"),"PurchaseConfirmationMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.ui.signals"),"BuyCharacterSlotSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.core"),"BuyCharacterSlotCommand")
         callproperty Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.control"),"IsAccountRegisteredToBuyGoldGuard")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMappingConfig"),"withGuards") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.signals"),"PurchaseGoldSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.commands"),"PurchaseGoldCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.signals"),"VerifyAgeSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.commands"),"VerifyAgeCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.signals"),"SaveSecurityQuestionsSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.commands"),"SaveSecurityQuestionsCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function configureAccountSpecificFunctionality() : void
      {
         trait method Qname(PrivateNamespace(null,"29"),"configureAccountSpecificFunctionality")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"29"),"isKongregate") 0
         iffalse ofs001a
         getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate"),"KongregateAccountConfig")
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:IContext"),"configure") 1
         jump ofs0055
         ofs001a:getlocal_0
         callproperty Qname(PrivateNamespace(null,"29"),"isSteam") 0
         iffalse ofs0032
         getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         getlex Qname(PackageNamespace("kabam.rotmg.account.steam"),"SteamAccountConfig")
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:IContext"),"configure") 1
         jump ofs0055
         ofs0032:getlocal_0
         callproperty Qname(PrivateNamespace(null,"29"),"isKabam") 0
         iffalse ofs004a
         getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kabam"),"KabamAccountConfig")
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:IContext"),"configure") 1
         jump ofs0055
         ofs004a:getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         getlex Qname(PackageNamespace("kabam.rotmg.account.web"),"WebAccountConfig")
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:IContext"),"configure") 1
         ofs0055:getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         getlex Qname(PackageNamespace("kabam.rotmg.account.transfer"),"TransferAccountConfig")
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:IContext"),"configure") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function isKongregate() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"29"),"isKongregate")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"info")
         getproperty Qname(PackageNamespace(""),"parameters")
         getproperty Multiname("kongregate_api_path",[PrivateNamespace(null,"29"),PackageNamespace(""),PrivateNamespace(null,"1303"),PackageNamespace("kabam.rotmg.account"),PackageInternalNs("kabam.rotmg.account"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.account:AccountConfig"),StaticProtectedNs("kabam.rotmg.account:AccountConfig")])
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isSteam() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"29"),"isSteam")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"info")
         getproperty Qname(PackageNamespace(""),"parameters")
         getproperty Multiname("steam_api_path",[PrivateNamespace(null,"29"),PackageNamespace(""),PrivateNamespace(null,"1303"),PackageNamespace("kabam.rotmg.account"),PackageInternalNs("kabam.rotmg.account"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.account:AccountConfig"),StaticProtectedNs("kabam.rotmg.account:AccountConfig")])
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isKabam() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"29"),"isKabam")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"info")
         getproperty Qname(PackageNamespace(""),"parameters")
         getproperty Multiname("kabam_signed_request",[PrivateNamespace(null,"29"),PackageNamespace(""),PrivateNamespace(null,"1303"),PackageNamespace("kabam.rotmg.account"),PackageInternalNs("kabam.rotmg.account"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.account:AccountConfig"),StaticProtectedNs("kabam.rotmg.account:AccountConfig")])
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function init() : void
      {
         trait method Qname(PrivateNamespace(null,"29"),"init")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"logger")
         pushstring "isKongregate {0}"
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"29"),"isKongregate") 0
         newarray 1
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILogger"),"info") 2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"logger")
         pushstring "isSteam {0}"
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"29"),"isSteam") 0
         newarray 1
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILogger"),"info") 2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"logger")
         pushstring "isKabam {0}"
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"29"),"isKabam") 0
         newarray 1
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILogger"),"info") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

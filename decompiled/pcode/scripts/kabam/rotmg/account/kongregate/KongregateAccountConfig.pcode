package kabam.rotmg.account.kongregate
{
   import kabam.rotmg.account.core.Account;
   import kabam.rotmg.account.core.model.MoneyConfig;
   import kabam.rotmg.account.core.services.LoadAccountTask;
   import kabam.rotmg.account.core.services.LoginTask;
   import kabam.rotmg.account.core.services.MakePaymentTask;
   import kabam.rotmg.account.core.services.PurchaseGoldTask;
   import kabam.rotmg.account.core.services.RegisterAccountTask;
   import kabam.rotmg.account.core.services.RelayLoginTask;
   import kabam.rotmg.account.core.signals.CharListDataSignal;
   import kabam.rotmg.account.core.signals.OpenAccountInfoSignal;
   import kabam.rotmg.account.core.signals.RegisterAccountSignal;
   import kabam.rotmg.account.core.view.RegisterWebAccountDialog;
   import kabam.rotmg.account.kongregate.commands.KongregateHandleAlreadyRegisteredCommand;
   import kabam.rotmg.account.kongregate.commands.KongregateOpenAccountInfoCommand;
   import kabam.rotmg.account.kongregate.commands.KongregateRegisterAccountCommand;
   import kabam.rotmg.account.kongregate.commands.KongregateRelayApiLoginCommand;
   import kabam.rotmg.account.kongregate.model.KongregateMoneyConfig;
   import kabam.rotmg.account.kongregate.services.KongregateLoadAccountTask;
   import kabam.rotmg.account.kongregate.services.KongregateLoadApiTask;
   import kabam.rotmg.account.kongregate.services.KongregateLoginTask;
   import kabam.rotmg.account.kongregate.services.KongregateMakePaymentTask;
   import kabam.rotmg.account.kongregate.services.KongregatePurchaseGoldTask;
   import kabam.rotmg.account.kongregate.services.KongregateRegisterAccountTask;
   import kabam.rotmg.account.kongregate.services.KongregateRelayAPILoginTask;
   import kabam.rotmg.account.kongregate.services.KongregateSharedObject;
   import kabam.rotmg.account.kongregate.signals.KongregateAlreadyRegisteredSignal;
   import kabam.rotmg.account.kongregate.signals.RelayApiLoginSignal;
   import kabam.rotmg.account.kongregate.view.KongregateAccountDetailDialog;
   import kabam.rotmg.account.kongregate.view.KongregateAccountDetailMediator;
   import kabam.rotmg.account.kongregate.view.KongregateAccountInfoMediator;
   import kabam.rotmg.account.kongregate.view.KongregateAccountInfoView;
   import kabam.rotmg.account.kongregate.view.KongregateApi;
   import kabam.rotmg.account.kongregate.view.KongregateRegisterWebAccountMediator;
   import kabam.rotmg.account.kongregate.view.LiveKongregateApi;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;
   import robotlegs.bender.extensions.signalCommandMap.api.ISignalCommandMap;
   import robotlegs.bender.framework.api.IConfig;
   
   public class KongregateAccountConfig implements IConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var injector:Injector;
      
      [Inject]
      public var mediatorMap:IMediatorMap;
      
      [Inject]
      public var commandMap:ISignalCommandMap;
      
      public function KongregateAccountConfig()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function configure() : void
      {
         trait method Qname(PackageNamespace(""),"configure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callpropvoid Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapModel") 0
         getlocal_0
         callpropvoid Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapCommands") 0
         getlocal_0
         callpropvoid Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapServices") 0
         getlocal_0
         callpropvoid Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapMediators") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function mapModel() : void
      {
         trait method Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapModel")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core"),"Account")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate"),"KongregateAccount")
         callpropvoid Qname(PackageNamespace(""),"toSingleton") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregateSharedObject")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.model"),"MoneyConfig")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.model"),"KongregateMoneyConfig")
         callpropvoid Qname(PackageNamespace(""),"toSingleton") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.signals"),"CharListDataSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function mapCommands() : void
      {
         trait method Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapCommands")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.signals"),"OpenAccountInfoSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.commands"),"KongregateOpenAccountInfoCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.signals"),"RegisterAccountSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.commands"),"KongregateRegisterAccountCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.signals"),"RelayApiLoginSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.commands"),"KongregateRelayApiLoginCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.signals"),"KongregateAlreadyRegisteredSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.commands"),"KongregateHandleAlreadyRegisteredCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function mapMediators() : void
      {
         trait method Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapMediators")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.view"),"KongregateAccountInfoView")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.view"),"KongregateAccountInfoMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.view"),"KongregateAccountDetailDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.view"),"KongregateAccountDetailMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.view"),"RegisterWebAccountDialog")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.view"),"KongregateRegisterWebAccountMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function mapServices() : void
      {
         trait method Qname(ProtectedNamespace("kabam.rotmg.account.kongregate:KongregateAccountConfig"),"mapServices")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.view"),"KongregateApi")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.view"),"LiveKongregateApi")
         callpropvoid Qname(PackageNamespace(""),"toSingleton") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"LoadAccountTask")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregateLoadAccountTask")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregateLoadApiTask")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"LoginTask")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregateLoginTask")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"RelayLoginTask")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregateRelayAPILoginTask")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"MakePaymentTask")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregateMakePaymentTask")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"PurchaseGoldTask")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregatePurchaseGoldTask")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.account.core.services"),"RegisterAccountTask")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate.services"),"KongregateRegisterAccountTask")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

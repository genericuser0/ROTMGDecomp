package kabam.rotmg.pets.view.components
{
   import flash.display.CapsStyle;
   import flash.display.JointStyle;
   import flash.display.LineScaleMode;
   import flash.display.Sprite;
   import kabam.rotmg.util.graphics.BevelRect;
   import kabam.rotmg.util.graphics.GraphicsHelper;
   
   public class PopupWindowBackground extends Sprite
   {
      
      public static const HORIZONTAL_DIVISION:String = "HORIZONTAL_DIVISION";
      
      public static const VERTICAL_DIVISION:String = "VERTICAL_DIVISION";
      
      private static const BEVEL:int = 4;
      
      public static const TYPE_DEFAULT_GREY:int = 0;
      
      public static const TYPE_TRANSPARENT_WITH_HEADER:int = 1;
      
      public static const TYPE_TRANSPARENT_WITHOUT_HEADER:int = 2;
      
      public static const TYPE_DEFAULT_BLACK:int = 3;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"HORIZONTAL_DIVISION")
         pushstring "HORIZONTAL_DIVISION"
         initproperty Qname(PackageNamespace(""),"HORIZONTAL_DIVISION")
         findproperty Qname(PackageNamespace(""),"VERTICAL_DIVISION")
         pushstring "VERTICAL_DIVISION"
         initproperty Qname(PackageNamespace(""),"VERTICAL_DIVISION")
         findproperty Qname(PrivateNamespace(null,"594"),"BEVEL")
         pushbyte 4
         initproperty Qname(PrivateNamespace(null,"594"),"BEVEL")
         findproperty Qname(PackageNamespace(""),"TYPE_DEFAULT_GREY")
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"TYPE_DEFAULT_GREY")
         findproperty Qname(PackageNamespace(""),"TYPE_TRANSPARENT_WITH_HEADER")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"TYPE_TRANSPARENT_WITH_HEADER")
         findproperty Qname(PackageNamespace(""),"TYPE_TRANSPARENT_WITHOUT_HEADER")
         pushbyte 2
         initproperty Qname(PackageNamespace(""),"TYPE_TRANSPARENT_WITHOUT_HEADER")
         findproperty Qname(PackageNamespace(""),"TYPE_DEFAULT_BLACK")
         pushbyte 3
         initproperty Qname(PackageNamespace(""),"TYPE_DEFAULT_BLACK")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function PopupWindowBackground()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function draw(param1:int, param2:int, param3:int = 0) : void
      {
         trait method Qname(PackageNamespace(""),"draw")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 9
         localcount 6
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("kabam.rotmg.util.graphics"),"BevelRect")
         getlocal_1
         getlocal_2
         getlex Qname(PrivateNamespace(null,"594"),"BEVEL")
         constructprop Qname(PackageNamespace("kabam.rotmg.util.graphics"),"BevelRect") 3
         coerce Qname(PackageNamespace("kabam.rotmg.util.graphics"),"BevelRect")
         setlocal 4
         findpropstrict Qname(PackageNamespace("kabam.rotmg.util.graphics"),"GraphicsHelper")
         constructprop Qname(PackageNamespace("kabam.rotmg.util.graphics"),"GraphicsHelper") 0
         coerce Qname(PackageNamespace("kabam.rotmg.util.graphics"),"GraphicsHelper")
         setlocal 5
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 1
         pushint 16777215
         pushbyte 1
         pushfalse
         getlex Qname(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty Qname(PackageNamespace(""),"NORMAL")
         getlex Qname(PackageNamespace("flash.display"),"CapsStyle")
         getproperty Qname(PackageNamespace(""),"NONE")
         getlex Qname(PackageNamespace("flash.display"),"JointStyle")
         getproperty Qname(PackageNamespace(""),"ROUND")
         pushbyte 3
         callpropvoid Qname(PackageNamespace(""),"lineStyle") 8
         getlocal_3
         getlex Qname(PackageNamespace(""),"TYPE_TRANSPARENT_WITH_HEADER")
         ifne ofs0131
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 1
         pushint 3552822
         pushbyte 1
         pushfalse
         getlex Qname(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty Qname(PackageNamespace(""),"NORMAL")
         getlex Qname(PackageNamespace("flash.display"),"CapsStyle")
         getproperty Qname(PackageNamespace(""),"NONE")
         getlex Qname(PackageNamespace("flash.display"),"JointStyle")
         getproperty Qname(PackageNamespace(""),"ROUND")
         pushbyte 3
         callpropvoid Qname(PackageNamespace(""),"lineStyle") 8
         getlex Qname(PackageNamespace(""),"graphics")
         pushint 3552822
         pushbyte 1
         callpropvoid Qname(PackageNamespace(""),"beginFill") 2
         getlocal 5
         pushbyte 1
         dup
         findpropstrict Qname(PackageNamespace("kabam.rotmg.util.graphics"),"BevelRect")
         getlocal_1
         pushbyte 2
         subtract
         pushbyte 29
         getlex Qname(PrivateNamespace(null,"594"),"BEVEL")
         constructprop Qname(PackageNamespace("kabam.rotmg.util.graphics"),"BevelRect") 3
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"drawBevelRect") 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         getlex Qname(PackageNamespace(""),"graphics")
         pushint 3552822
         pushbyte 1
         callpropvoid Qname(PackageNamespace(""),"beginFill") 2
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 1
         pushbyte 15
         getlocal_1
         pushbyte 2
         subtract
         pushbyte 15
         callpropvoid Qname(PackageNamespace(""),"drawRect") 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 2
         pushint 16777215
         pushbyte 1
         pushfalse
         getlex Qname(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty Qname(PackageNamespace(""),"NORMAL")
         getlex Qname(PackageNamespace("flash.display"),"CapsStyle")
         getproperty Qname(PackageNamespace(""),"NONE")
         getlex Qname(PackageNamespace("flash.display"),"JointStyle")
         getproperty Qname(PackageNamespace(""),"ROUND")
         pushbyte 3
         callpropvoid Qname(PackageNamespace(""),"lineStyle") 8
         getlex Qname(PackageNamespace(""),"graphics")
         pushint 3552822
         pushbyte 0
         callpropvoid Qname(PackageNamespace(""),"beginFill") 2
         getlocal 5
         pushbyte 0
         dup
         getlocal 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"drawBevelRect") 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         jump ofs01eb
         ofs0131:getlocal_3
         getlex Qname(PackageNamespace(""),"TYPE_TRANSPARENT_WITHOUT_HEADER")
         ifne ofs018e
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 2
         pushint 16777215
         pushbyte 1
         pushfalse
         getlex Qname(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty Qname(PackageNamespace(""),"NORMAL")
         getlex Qname(PackageNamespace("flash.display"),"CapsStyle")
         getproperty Qname(PackageNamespace(""),"NONE")
         getlex Qname(PackageNamespace("flash.display"),"JointStyle")
         getproperty Qname(PackageNamespace(""),"ROUND")
         pushbyte 3
         callpropvoid Qname(PackageNamespace(""),"lineStyle") 8
         getlex Qname(PackageNamespace(""),"graphics")
         pushint 3552822
         pushbyte 0
         callpropvoid Qname(PackageNamespace(""),"beginFill") 2
         getlocal 5
         pushbyte 0
         dup
         getlocal 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"drawBevelRect") 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         jump ofs01eb
         ofs018e:getlocal_3
         getlex Qname(PackageNamespace(""),"TYPE_DEFAULT_GREY")
         ifne ofs01bf
         getlex Qname(PackageNamespace(""),"graphics")
         pushint 3552822
         callpropvoid Qname(PackageNamespace(""),"beginFill") 1
         getlocal 5
         pushbyte 0
         dup
         getlocal 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"drawBevelRect") 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         jump ofs01eb
         ofs01bf:getlocal_3
         getlex Qname(PackageNamespace(""),"TYPE_DEFAULT_BLACK")
         ifne ofs01eb
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 0
         callpropvoid Qname(PackageNamespace(""),"beginFill") 1
         getlocal 5
         pushbyte 0
         dup
         getlocal 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"drawBevelRect") 4
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         ofs01eb:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function divide(param1:String, param2:int) : void
      {
         trait method Qname(PackageNamespace(""),"divide")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlex Qname(PackageNamespace(""),"HORIZONTAL_DIVISION")
         ifne ofs0015
         getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"594"),"divideHorizontally") 1
         jump ofs0024
         ofs0015:getlocal_1
         getlex Qname(PackageNamespace(""),"VERTICAL_DIVISION")
         ifne ofs0024
         getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"594"),"divideVertically") 1
         ofs0024:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function divideHorizontally(param1:int) : void
      {
         trait method Qname(PrivateNamespace(null,"594"),"divideHorizontally")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"lineStyle") 0
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 1
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"moveTo") 2
         getlex Qname(PackageNamespace(""),"graphics")
         pushint 6710886
         pushbyte 1
         callpropvoid Qname(PackageNamespace(""),"beginFill") 2
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 1
         getlocal_1
         getlex Qname(PackageNamespace(""),"width")
         pushbyte 2
         subtract
         pushbyte 2
         callpropvoid Qname(PackageNamespace(""),"drawRect") 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function divideVertically(param1:int) : void
      {
         trait method Qname(PrivateNamespace(null,"594"),"divideVertically")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"lineStyle") 0
         getlex Qname(PackageNamespace(""),"graphics")
         getlocal_1
         pushbyte 1
         callpropvoid Qname(PackageNamespace(""),"moveTo") 2
         getlex Qname(PackageNamespace(""),"graphics")
         pushbyte 2
         pushint 6710886
         callpropvoid Qname(PackageNamespace(""),"lineStyle") 2
         getlex Qname(PackageNamespace(""),"graphics")
         getlocal_1
         getlex Qname(PackageNamespace(""),"height")
         decrement
         callpropvoid Qname(PackageNamespace(""),"lineTo") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.language.control
{
   import kabam.lib.console.signals.HideConsoleSignal;
   import kabam.lib.tasks.DispatchSignalTask;
   import kabam.lib.tasks.TaskMonitor;
   import kabam.lib.tasks.TaskSequence;
   import kabam.rotmg.language.model.LanguageModel;
   import kabam.rotmg.language.service.GetLanguageService;
   import kabam.rotmg.ui.signals.ShowLoadingUISignal;
   import org.swiftsuspenders.Injector;
   
   public class SetLanguageCommand
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var language:String;
      
      [Inject]
      public var model:LanguageModel;
      
      [Inject]
      public var loading:ShowLoadingUISignal;
      
      [Inject]
      public var injector:Injector;
      
      [Inject]
      public var task:GetLanguageService;
      
      [Inject]
      public var reload:ReloadCurrentScreenSignal;
      
      [Inject]
      public var hideConsole:HideConsoleSignal;
      
      [Inject]
      public var monitor:TaskMonitor;
      
      public function SetLanguageCommand()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function execute() : void
      {
         trait method Qname(PackageNamespace(""),"execute")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"model")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"language")
         callpropvoid Qname(Namespace("kabam.rotmg.language.model:LanguageModel"),"setLanguage") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"loading")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 0
         findpropstrict Qname(PackageNamespace("kabam.lib.tasks"),"TaskSequence")
         constructprop Qname(PackageNamespace("kabam.lib.tasks"),"TaskSequence") 0
         coerce Qname(PackageNamespace("kabam.lib.tasks"),"TaskSequence")
         setlocal_1
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"task")
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_1
         findpropstrict Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"reload")
         constructprop Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask") 1
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_1
         findpropstrict Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"hideConsole")
         constructprop Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask") 1
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"monitor")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"start") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

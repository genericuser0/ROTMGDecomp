package kabam.rotmg.messaging.impl.data
{
   import flash.utils.IDataInput;
   import flash.utils.IDataOutput;
   import kabam.rotmg.text.model.TextKey;
   
   public class StatData
   {
      
      public static const MAX_HP_STAT:int = 0;
      
      public static const HP_STAT:int = 1;
      
      public static const SIZE_STAT:int = 2;
      
      public static const MAX_MP_STAT:int = 3;
      
      public static const MP_STAT:int = 4;
      
      public static const NEXT_LEVEL_EXP_STAT:int = 5;
      
      public static const EXP_STAT:int = 6;
      
      public static const LEVEL_STAT:int = 7;
      
      public static const ATTACK_STAT:int = 20;
      
      public static const DEFENSE_STAT:int = 21;
      
      public static const SPEED_STAT:int = 22;
      
      public static const INVENTORY_0_STAT:int = 8;
      
      public static const INVENTORY_1_STAT:int = 9;
      
      public static const INVENTORY_2_STAT:int = 10;
      
      public static const INVENTORY_3_STAT:int = 11;
      
      public static const INVENTORY_4_STAT:int = 12;
      
      public static const INVENTORY_5_STAT:int = 13;
      
      public static const INVENTORY_6_STAT:int = 14;
      
      public static const INVENTORY_7_STAT:int = 15;
      
      public static const INVENTORY_8_STAT:int = 16;
      
      public static const INVENTORY_9_STAT:int = 17;
      
      public static const INVENTORY_10_STAT:int = 18;
      
      public static const INVENTORY_11_STAT:int = 19;
      
      public static const VITALITY_STAT:int = 26;
      
      public static const WISDOM_STAT:int = 27;
      
      public static const DEXTERITY_STAT:int = 28;
      
      public static const CONDITION_STAT:int = 29;
      
      public static const NUM_STARS_STAT:int = 30;
      
      public static const NAME_STAT:int = 31;
      
      public static const TEX1_STAT:int = 32;
      
      public static const TEX2_STAT:int = 33;
      
      public static const MERCHANDISE_TYPE_STAT:int = 34;
      
      public static const CREDITS_STAT:int = 35;
      
      public static const MERCHANDISE_PRICE_STAT:int = 36;
      
      public static const ACTIVE_STAT:int = 37;
      
      public static const ACCOUNT_ID_STAT:int = 38;
      
      public static const FAME_STAT:int = 39;
      
      public static const MERCHANDISE_CURRENCY_STAT:int = 40;
      
      public static const CONNECT_STAT:int = 41;
      
      public static const MERCHANDISE_COUNT_STAT:int = 42;
      
      public static const MERCHANDISE_MINS_LEFT_STAT:int = 43;
      
      public static const MERCHANDISE_DISCOUNT_STAT:int = 44;
      
      public static const MERCHANDISE_RANK_REQ_STAT:int = 45;
      
      public static const MAX_HP_BOOST_STAT:int = 46;
      
      public static const MAX_MP_BOOST_STAT:int = 47;
      
      public static const ATTACK_BOOST_STAT:int = 48;
      
      public static const DEFENSE_BOOST_STAT:int = 49;
      
      public static const SPEED_BOOST_STAT:int = 50;
      
      public static const VITALITY_BOOST_STAT:int = 51;
      
      public static const WISDOM_BOOST_STAT:int = 52;
      
      public static const DEXTERITY_BOOST_STAT:int = 53;
      
      public static const OWNER_ACCOUNT_ID_STAT:int = 54;
      
      public static const RANK_REQUIRED_STAT:int = 55;
      
      public static const NAME_CHOSEN_STAT:int = 56;
      
      public static const CURR_FAME_STAT:int = 57;
      
      public static const NEXT_CLASS_QUEST_FAME_STAT:int = 58;
      
      public static const LEGENDARY_RANK_STAT:int = 59;
      
      public static const SINK_LEVEL_STAT:int = 60;
      
      public static const ALT_TEXTURE_STAT:int = 61;
      
      public static const GUILD_NAME_STAT:int = 62;
      
      public static const GUILD_RANK_STAT:int = 63;
      
      public static const BREATH_STAT:int = 64;
      
      public static const XP_BOOSTED_STAT:int = 65;
      
      public static const XP_TIMER_STAT:int = 66;
      
      public static const LD_TIMER_STAT:int = 67;
      
      public static const LT_TIMER_STAT:int = 68;
      
      public static const HEALTH_POTION_STACK_STAT:int = 69;
      
      public static const MAGIC_POTION_STACK_STAT:int = 70;
      
      public static const BACKPACK_0_STAT:int = 71;
      
      public static const BACKPACK_1_STAT:int = 72;
      
      public static const BACKPACK_2_STAT:int = 73;
      
      public static const BACKPACK_3_STAT:int = 74;
      
      public static const BACKPACK_4_STAT:int = 75;
      
      public static const BACKPACK_5_STAT:int = 76;
      
      public static const BACKPACK_6_STAT:int = 77;
      
      public static const BACKPACK_7_STAT:int = 78;
      
      public static const HASBACKPACK_STAT:int = 79;
      
      public static const TEXTURE_STAT:int = 80;
      
      public static const PET_INSTANCEID_STAT:int = 81;
      
      public static const PET_NAME_STAT:int = 82;
      
      public static const PET_TYPE_STAT:int = 83;
      
      public static const PET_RARITY_STAT:int = 84;
      
      public static const PET_MAXABILITYPOWER_STAT:int = 85;
      
      public static const PET_FAMILY_STAT:int = 86;
      
      public static const PET_FIRSTABILITY_POINT_STAT:int = 87;
      
      public static const PET_SECONDABILITY_POINT_STAT:int = 88;
      
      public static const PET_THIRDABILITY_POINT_STAT:int = 89;
      
      public static const PET_FIRSTABILITY_POWER_STAT:int = 90;
      
      public static const PET_SECONDABILITY_POWER_STAT:int = 91;
      
      public static const PET_THIRDABILITY_POWER_STAT:int = 92;
      
      public static const PET_FIRSTABILITY_TYPE_STAT:int = 93;
      
      public static const PET_SECONDABILITY_TYPE_STAT:int = 94;
      
      public static const PET_THIRDABILITY_TYPE_STAT:int = 95;
      
      public static const NEW_CON_STAT:int = 96;
      
      public static const FORTUNE_TOKEN_STAT:int = 97;
      
      public static const SUPPORTER_POINTS_STAT:int = 98;
      
      public static const SUPPORTER_STAT:int = 99;
      
      public static const CHALLENGER_STARBG_STAT:int = 100;
      
      public static const PROJECTILE_SPEED_MULT:int = 102;
      
      public static const PROJECTILE_LIFE_MULT:int = 103;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"MAX_HP_STAT")
         pushbyte 0
         initproperty Qname(PackageNamespace(""),"MAX_HP_STAT")
         findproperty Qname(PackageNamespace(""),"HP_STAT")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"HP_STAT")
         findproperty Qname(PackageNamespace(""),"SIZE_STAT")
         pushbyte 2
         initproperty Qname(PackageNamespace(""),"SIZE_STAT")
         findproperty Qname(PackageNamespace(""),"MAX_MP_STAT")
         pushbyte 3
         initproperty Qname(PackageNamespace(""),"MAX_MP_STAT")
         findproperty Qname(PackageNamespace(""),"MP_STAT")
         pushbyte 4
         initproperty Qname(PackageNamespace(""),"MP_STAT")
         findproperty Qname(PackageNamespace(""),"NEXT_LEVEL_EXP_STAT")
         pushbyte 5
         initproperty Qname(PackageNamespace(""),"NEXT_LEVEL_EXP_STAT")
         findproperty Qname(PackageNamespace(""),"EXP_STAT")
         pushbyte 6
         initproperty Qname(PackageNamespace(""),"EXP_STAT")
         findproperty Qname(PackageNamespace(""),"LEVEL_STAT")
         pushbyte 7
         initproperty Qname(PackageNamespace(""),"LEVEL_STAT")
         findproperty Qname(PackageNamespace(""),"ATTACK_STAT")
         pushbyte 20
         initproperty Qname(PackageNamespace(""),"ATTACK_STAT")
         findproperty Qname(PackageNamespace(""),"DEFENSE_STAT")
         pushbyte 21
         initproperty Qname(PackageNamespace(""),"DEFENSE_STAT")
         findproperty Qname(PackageNamespace(""),"SPEED_STAT")
         pushbyte 22
         initproperty Qname(PackageNamespace(""),"SPEED_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_0_STAT")
         pushbyte 8
         initproperty Qname(PackageNamespace(""),"INVENTORY_0_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_1_STAT")
         pushbyte 9
         initproperty Qname(PackageNamespace(""),"INVENTORY_1_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_2_STAT")
         pushbyte 10
         initproperty Qname(PackageNamespace(""),"INVENTORY_2_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_3_STAT")
         pushbyte 11
         initproperty Qname(PackageNamespace(""),"INVENTORY_3_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_4_STAT")
         pushbyte 12
         initproperty Qname(PackageNamespace(""),"INVENTORY_4_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_5_STAT")
         pushbyte 13
         initproperty Qname(PackageNamespace(""),"INVENTORY_5_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_6_STAT")
         pushbyte 14
         initproperty Qname(PackageNamespace(""),"INVENTORY_6_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_7_STAT")
         pushbyte 15
         initproperty Qname(PackageNamespace(""),"INVENTORY_7_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_8_STAT")
         pushbyte 16
         initproperty Qname(PackageNamespace(""),"INVENTORY_8_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_9_STAT")
         pushbyte 17
         initproperty Qname(PackageNamespace(""),"INVENTORY_9_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_10_STAT")
         pushbyte 18
         initproperty Qname(PackageNamespace(""),"INVENTORY_10_STAT")
         findproperty Qname(PackageNamespace(""),"INVENTORY_11_STAT")
         pushbyte 19
         initproperty Qname(PackageNamespace(""),"INVENTORY_11_STAT")
         findproperty Qname(PackageNamespace(""),"VITALITY_STAT")
         pushbyte 26
         initproperty Qname(PackageNamespace(""),"VITALITY_STAT")
         findproperty Qname(PackageNamespace(""),"WISDOM_STAT")
         pushbyte 27
         initproperty Qname(PackageNamespace(""),"WISDOM_STAT")
         findproperty Qname(PackageNamespace(""),"DEXTERITY_STAT")
         pushbyte 28
         initproperty Qname(PackageNamespace(""),"DEXTERITY_STAT")
         findproperty Qname(PackageNamespace(""),"CONDITION_STAT")
         pushbyte 29
         initproperty Qname(PackageNamespace(""),"CONDITION_STAT")
         findproperty Qname(PackageNamespace(""),"NUM_STARS_STAT")
         pushbyte 30
         initproperty Qname(PackageNamespace(""),"NUM_STARS_STAT")
         findproperty Qname(PackageNamespace(""),"NAME_STAT")
         pushbyte 31
         initproperty Qname(PackageNamespace(""),"NAME_STAT")
         findproperty Qname(PackageNamespace(""),"TEX1_STAT")
         pushbyte 32
         initproperty Qname(PackageNamespace(""),"TEX1_STAT")
         findproperty Qname(PackageNamespace(""),"TEX2_STAT")
         pushbyte 33
         initproperty Qname(PackageNamespace(""),"TEX2_STAT")
         findproperty Qname(PackageNamespace(""),"MERCHANDISE_TYPE_STAT")
         pushbyte 34
         initproperty Qname(PackageNamespace(""),"MERCHANDISE_TYPE_STAT")
         findproperty Qname(PackageNamespace(""),"CREDITS_STAT")
         pushbyte 35
         initproperty Qname(PackageNamespace(""),"CREDITS_STAT")
         findproperty Qname(PackageNamespace(""),"MERCHANDISE_PRICE_STAT")
         pushbyte 36
         initproperty Qname(PackageNamespace(""),"MERCHANDISE_PRICE_STAT")
         findproperty Qname(PackageNamespace(""),"ACTIVE_STAT")
         pushbyte 37
         initproperty Qname(PackageNamespace(""),"ACTIVE_STAT")
         findproperty Qname(PackageNamespace(""),"ACCOUNT_ID_STAT")
         pushbyte 38
         initproperty Qname(PackageNamespace(""),"ACCOUNT_ID_STAT")
         findproperty Qname(PackageNamespace(""),"FAME_STAT")
         pushbyte 39
         initproperty Qname(PackageNamespace(""),"FAME_STAT")
         findproperty Qname(PackageNamespace(""),"MERCHANDISE_CURRENCY_STAT")
         pushbyte 40
         initproperty Qname(PackageNamespace(""),"MERCHANDISE_CURRENCY_STAT")
         findproperty Qname(PackageNamespace(""),"CONNECT_STAT")
         pushbyte 41
         initproperty Qname(PackageNamespace(""),"CONNECT_STAT")
         findproperty Qname(PackageNamespace(""),"MERCHANDISE_COUNT_STAT")
         pushbyte 42
         initproperty Qname(PackageNamespace(""),"MERCHANDISE_COUNT_STAT")
         findproperty Qname(PackageNamespace(""),"MERCHANDISE_MINS_LEFT_STAT")
         pushbyte 43
         initproperty Qname(PackageNamespace(""),"MERCHANDISE_MINS_LEFT_STAT")
         findproperty Qname(PackageNamespace(""),"MERCHANDISE_DISCOUNT_STAT")
         pushbyte 44
         initproperty Qname(PackageNamespace(""),"MERCHANDISE_DISCOUNT_STAT")
         findproperty Qname(PackageNamespace(""),"MERCHANDISE_RANK_REQ_STAT")
         pushbyte 45
         initproperty Qname(PackageNamespace(""),"MERCHANDISE_RANK_REQ_STAT")
         findproperty Qname(PackageNamespace(""),"MAX_HP_BOOST_STAT")
         pushbyte 46
         initproperty Qname(PackageNamespace(""),"MAX_HP_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"MAX_MP_BOOST_STAT")
         pushbyte 47
         initproperty Qname(PackageNamespace(""),"MAX_MP_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"ATTACK_BOOST_STAT")
         pushbyte 48
         initproperty Qname(PackageNamespace(""),"ATTACK_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"DEFENSE_BOOST_STAT")
         pushbyte 49
         initproperty Qname(PackageNamespace(""),"DEFENSE_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"SPEED_BOOST_STAT")
         pushbyte 50
         initproperty Qname(PackageNamespace(""),"SPEED_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"VITALITY_BOOST_STAT")
         pushbyte 51
         initproperty Qname(PackageNamespace(""),"VITALITY_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"WISDOM_BOOST_STAT")
         pushbyte 52
         initproperty Qname(PackageNamespace(""),"WISDOM_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"DEXTERITY_BOOST_STAT")
         pushbyte 53
         initproperty Qname(PackageNamespace(""),"DEXTERITY_BOOST_STAT")
         findproperty Qname(PackageNamespace(""),"OWNER_ACCOUNT_ID_STAT")
         pushbyte 54
         initproperty Qname(PackageNamespace(""),"OWNER_ACCOUNT_ID_STAT")
         findproperty Qname(PackageNamespace(""),"RANK_REQUIRED_STAT")
         pushbyte 55
         initproperty Qname(PackageNamespace(""),"RANK_REQUIRED_STAT")
         findproperty Qname(PackageNamespace(""),"NAME_CHOSEN_STAT")
         pushbyte 56
         initproperty Qname(PackageNamespace(""),"NAME_CHOSEN_STAT")
         findproperty Qname(PackageNamespace(""),"CURR_FAME_STAT")
         pushbyte 57
         initproperty Qname(PackageNamespace(""),"CURR_FAME_STAT")
         findproperty Qname(PackageNamespace(""),"NEXT_CLASS_QUEST_FAME_STAT")
         pushbyte 58
         initproperty Qname(PackageNamespace(""),"NEXT_CLASS_QUEST_FAME_STAT")
         findproperty Qname(PackageNamespace(""),"LEGENDARY_RANK_STAT")
         pushbyte 59
         initproperty Qname(PackageNamespace(""),"LEGENDARY_RANK_STAT")
         findproperty Qname(PackageNamespace(""),"SINK_LEVEL_STAT")
         pushbyte 60
         initproperty Qname(PackageNamespace(""),"SINK_LEVEL_STAT")
         findproperty Qname(PackageNamespace(""),"ALT_TEXTURE_STAT")
         pushbyte 61
         initproperty Qname(PackageNamespace(""),"ALT_TEXTURE_STAT")
         findproperty Qname(PackageNamespace(""),"GUILD_NAME_STAT")
         pushbyte 62
         initproperty Qname(PackageNamespace(""),"GUILD_NAME_STAT")
         findproperty Qname(PackageNamespace(""),"GUILD_RANK_STAT")
         pushbyte 63
         initproperty Qname(PackageNamespace(""),"GUILD_RANK_STAT")
         findproperty Qname(PackageNamespace(""),"BREATH_STAT")
         pushbyte 64
         initproperty Qname(PackageNamespace(""),"BREATH_STAT")
         findproperty Qname(PackageNamespace(""),"XP_BOOSTED_STAT")
         pushbyte 65
         initproperty Qname(PackageNamespace(""),"XP_BOOSTED_STAT")
         findproperty Qname(PackageNamespace(""),"XP_TIMER_STAT")
         pushbyte 66
         initproperty Qname(PackageNamespace(""),"XP_TIMER_STAT")
         findproperty Qname(PackageNamespace(""),"LD_TIMER_STAT")
         pushbyte 67
         initproperty Qname(PackageNamespace(""),"LD_TIMER_STAT")
         findproperty Qname(PackageNamespace(""),"LT_TIMER_STAT")
         pushbyte 68
         initproperty Qname(PackageNamespace(""),"LT_TIMER_STAT")
         findproperty Qname(PackageNamespace(""),"HEALTH_POTION_STACK_STAT")
         pushbyte 69
         initproperty Qname(PackageNamespace(""),"HEALTH_POTION_STACK_STAT")
         findproperty Qname(PackageNamespace(""),"MAGIC_POTION_STACK_STAT")
         pushbyte 70
         initproperty Qname(PackageNamespace(""),"MAGIC_POTION_STACK_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_0_STAT")
         pushbyte 71
         initproperty Qname(PackageNamespace(""),"BACKPACK_0_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_1_STAT")
         pushbyte 72
         initproperty Qname(PackageNamespace(""),"BACKPACK_1_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_2_STAT")
         pushbyte 73
         initproperty Qname(PackageNamespace(""),"BACKPACK_2_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_3_STAT")
         pushbyte 74
         initproperty Qname(PackageNamespace(""),"BACKPACK_3_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_4_STAT")
         pushbyte 75
         initproperty Qname(PackageNamespace(""),"BACKPACK_4_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_5_STAT")
         pushbyte 76
         initproperty Qname(PackageNamespace(""),"BACKPACK_5_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_6_STAT")
         pushbyte 77
         initproperty Qname(PackageNamespace(""),"BACKPACK_6_STAT")
         findproperty Qname(PackageNamespace(""),"BACKPACK_7_STAT")
         pushbyte 78
         initproperty Qname(PackageNamespace(""),"BACKPACK_7_STAT")
         findproperty Qname(PackageNamespace(""),"HASBACKPACK_STAT")
         pushbyte 79
         initproperty Qname(PackageNamespace(""),"HASBACKPACK_STAT")
         findproperty Qname(PackageNamespace(""),"TEXTURE_STAT")
         pushbyte 80
         initproperty Qname(PackageNamespace(""),"TEXTURE_STAT")
         findproperty Qname(PackageNamespace(""),"PET_INSTANCEID_STAT")
         pushbyte 81
         initproperty Qname(PackageNamespace(""),"PET_INSTANCEID_STAT")
         findproperty Qname(PackageNamespace(""),"PET_NAME_STAT")
         pushbyte 82
         initproperty Qname(PackageNamespace(""),"PET_NAME_STAT")
         findproperty Qname(PackageNamespace(""),"PET_TYPE_STAT")
         pushbyte 83
         initproperty Qname(PackageNamespace(""),"PET_TYPE_STAT")
         findproperty Qname(PackageNamespace(""),"PET_RARITY_STAT")
         pushbyte 84
         initproperty Qname(PackageNamespace(""),"PET_RARITY_STAT")
         findproperty Qname(PackageNamespace(""),"PET_MAXABILITYPOWER_STAT")
         pushbyte 85
         initproperty Qname(PackageNamespace(""),"PET_MAXABILITYPOWER_STAT")
         findproperty Qname(PackageNamespace(""),"PET_FAMILY_STAT")
         pushbyte 86
         initproperty Qname(PackageNamespace(""),"PET_FAMILY_STAT")
         findproperty Qname(PackageNamespace(""),"PET_FIRSTABILITY_POINT_STAT")
         pushbyte 87
         initproperty Qname(PackageNamespace(""),"PET_FIRSTABILITY_POINT_STAT")
         findproperty Qname(PackageNamespace(""),"PET_SECONDABILITY_POINT_STAT")
         pushbyte 88
         initproperty Qname(PackageNamespace(""),"PET_SECONDABILITY_POINT_STAT")
         findproperty Qname(PackageNamespace(""),"PET_THIRDABILITY_POINT_STAT")
         pushbyte 89
         initproperty Qname(PackageNamespace(""),"PET_THIRDABILITY_POINT_STAT")
         findproperty Qname(PackageNamespace(""),"PET_FIRSTABILITY_POWER_STAT")
         pushbyte 90
         initproperty Qname(PackageNamespace(""),"PET_FIRSTABILITY_POWER_STAT")
         findproperty Qname(PackageNamespace(""),"PET_SECONDABILITY_POWER_STAT")
         pushbyte 91
         initproperty Qname(PackageNamespace(""),"PET_SECONDABILITY_POWER_STAT")
         findproperty Qname(PackageNamespace(""),"PET_THIRDABILITY_POWER_STAT")
         pushbyte 92
         initproperty Qname(PackageNamespace(""),"PET_THIRDABILITY_POWER_STAT")
         findproperty Qname(PackageNamespace(""),"PET_FIRSTABILITY_TYPE_STAT")
         pushbyte 93
         initproperty Qname(PackageNamespace(""),"PET_FIRSTABILITY_TYPE_STAT")
         findproperty Qname(PackageNamespace(""),"PET_SECONDABILITY_TYPE_STAT")
         pushbyte 94
         initproperty Qname(PackageNamespace(""),"PET_SECONDABILITY_TYPE_STAT")
         findproperty Qname(PackageNamespace(""),"PET_THIRDABILITY_TYPE_STAT")
         pushbyte 95
         initproperty Qname(PackageNamespace(""),"PET_THIRDABILITY_TYPE_STAT")
         findproperty Qname(PackageNamespace(""),"NEW_CON_STAT")
         pushbyte 96
         initproperty Qname(PackageNamespace(""),"NEW_CON_STAT")
         findproperty Qname(PackageNamespace(""),"FORTUNE_TOKEN_STAT")
         pushbyte 97
         initproperty Qname(PackageNamespace(""),"FORTUNE_TOKEN_STAT")
         findproperty Qname(PackageNamespace(""),"SUPPORTER_POINTS_STAT")
         pushbyte 98
         initproperty Qname(PackageNamespace(""),"SUPPORTER_POINTS_STAT")
         findproperty Qname(PackageNamespace(""),"SUPPORTER_STAT")
         pushbyte 99
         initproperty Qname(PackageNamespace(""),"SUPPORTER_STAT")
         findproperty Qname(PackageNamespace(""),"CHALLENGER_STARBG_STAT")
         pushbyte 100
         initproperty Qname(PackageNamespace(""),"CHALLENGER_STARBG_STAT")
         findproperty Qname(PackageNamespace(""),"PROJECTILE_SPEED_MULT")
         pushbyte 102
         initproperty Qname(PackageNamespace(""),"PROJECTILE_SPEED_MULT")
         findproperty Qname(PackageNamespace(""),"PROJECTILE_LIFE_MULT")
         pushbyte 103
         initproperty Qname(PackageNamespace(""),"PROJECTILE_LIFE_MULT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var statType_:uint = 0;
      
      public var statValue_:int;
      
      public var strStatValue_:String;
      
      public function StatData()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function statToName(param1:int) : String
      {
         trait method Qname(PackageNamespace(""),"statToName")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         jump ofs0080
         ofs0006:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_DATA_MAXHP")
         returnvalue
         ofs000f:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STATUS_BAR_HEALTH_POINTS")
         returnvalue
         ofs0018:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_DATA_SIZE")
         returnvalue
         ofs0021:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_DATA_MAXMP")
         returnvalue
         ofs002a:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STATUS_BAR_MANA_POINTS")
         returnvalue
         ofs0033:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_DATA_XP")
         returnvalue
         ofs003c:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_DATA_LEVEL")
         returnvalue
         ofs0045:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_MODEL_ATTACK_LONG")
         returnvalue
         ofs004e:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_MODEL_DEFENSE_LONG")
         returnvalue
         ofs0057:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_MODEL_SPEED_LONG")
         returnvalue
         ofs0060:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_MODEL_VITALITY_LONG")
         returnvalue
         ofs0069:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_MODEL_WISDOM_LONG")
         returnvalue
         ofs0072:label
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_MODEL_DEXTERITY_LONG")
         returnvalue
         ofs007b:label
         jump ofs0182
         ofs0080:getlocal_1
         setlocal_2
         getlex Qname(PackageNamespace(""),"MAX_HP_STAT")
         getlocal_2
         ifstrictne ofs0091
         pushbyte 0
         jump ofs0151
         ofs0091:getlex Qname(PackageNamespace(""),"HP_STAT")
         getlocal_2
         ifstrictne ofs00a0
         pushbyte 1
         jump ofs0151
         ofs00a0:getlex Qname(PackageNamespace(""),"SIZE_STAT")
         getlocal_2
         ifstrictne ofs00af
         pushbyte 2
         jump ofs0151
         ofs00af:getlex Qname(PackageNamespace(""),"MAX_MP_STAT")
         getlocal_2
         ifstrictne ofs00be
         pushbyte 3
         jump ofs0151
         ofs00be:getlex Qname(PackageNamespace(""),"MP_STAT")
         getlocal_2
         ifstrictne ofs00cd
         pushbyte 4
         jump ofs0151
         ofs00cd:getlex Qname(PackageNamespace(""),"EXP_STAT")
         getlocal_2
         ifstrictne ofs00dc
         pushbyte 5
         jump ofs0151
         ofs00dc:getlex Qname(PackageNamespace(""),"LEVEL_STAT")
         getlocal_2
         ifstrictne ofs00eb
         pushbyte 6
         jump ofs0151
         ofs00eb:getlex Qname(PackageNamespace(""),"ATTACK_STAT")
         getlocal_2
         ifstrictne ofs00fa
         pushbyte 7
         jump ofs0151
         ofs00fa:getlex Qname(PackageNamespace(""),"DEFENSE_STAT")
         getlocal_2
         ifstrictne ofs0109
         pushbyte 8
         jump ofs0151
         ofs0109:getlex Qname(PackageNamespace(""),"SPEED_STAT")
         getlocal_2
         ifstrictne ofs0118
         pushbyte 9
         jump ofs0151
         ofs0118:getlex Qname(PackageNamespace(""),"VITALITY_STAT")
         getlocal_2
         ifstrictne ofs0127
         pushbyte 10
         jump ofs0151
         ofs0127:getlex Qname(PackageNamespace(""),"WISDOM_STAT")
         getlocal_2
         ifstrictne ofs0136
         pushbyte 11
         jump ofs0151
         ofs0136:getlex Qname(PackageNamespace(""),"DEXTERITY_STAT")
         getlocal_2
         ifstrictne ofs0145
         pushbyte 12
         jump ofs0151
         ofs0145:jump ofs014f
         pushbyte 13
         jump ofs014f
         ofs014f:pushbyte 13
         ofs0151:kill 2
         lookupswitch ofs007b 13 ofs0006 ofs000f ofs0018 ofs0021 ofs002a ofs0033 ofs003c ofs0045 ofs004e ofs0057 ofs0060 ofs0069 ofs0072 ofs007b
         ofs0182:getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"STAT_DATA_UNKNOWN_STAT")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isStringStat() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isStringStat")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         jump ofs000e
         ofs0006:label
         pushtrue
         returnvalue
         ofs0009:label
         jump ofs0083
         ofs000e:getlocal_0
         getproperty Qname(PackageNamespace(""),"statType_")
         setlocal_1
         getlex Qname(PackageNamespace(""),"NAME_STAT")
         getlocal_1
         ifstrictne ofs0022
         pushbyte 0
         jump ofs006a
         ofs0022:getlex Qname(PackageNamespace(""),"GUILD_NAME_STAT")
         getlocal_1
         ifstrictne ofs0031
         pushbyte 1
         jump ofs006a
         ofs0031:getlex Qname(PackageNamespace(""),"PET_NAME_STAT")
         getlocal_1
         ifstrictne ofs0040
         pushbyte 2
         jump ofs006a
         ofs0040:getlex Qname(PackageNamespace(""),"ACCOUNT_ID_STAT")
         getlocal_1
         ifstrictne ofs004f
         pushbyte 3
         jump ofs006a
         ofs004f:getlex Qname(PackageNamespace(""),"OWNER_ACCOUNT_ID_STAT")
         getlocal_1
         ifstrictne ofs005e
         pushbyte 4
         jump ofs006a
         ofs005e:jump ofs0068
         pushbyte 5
         jump ofs0068
         ofs0068:pushbyte 5
         ofs006a:kill 1
         lookupswitch ofs0009 5 ofs0006 ofs0006 ofs0006 ofs0006 ofs0006 ofs0009
         ofs0083:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function parseFromInput(param1:IDataInput) : void
      {
         trait method Qname(PackageNamespace(""),"parseFromInput")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"IDataInput")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         callproperty Qname(Namespace("flash.utils:IDataInput"),"readUnsignedByte") 0
         initproperty Qname(PackageNamespace(""),"statType_")
         getlocal_0
         callproperty Qname(PackageNamespace(""),"isStringStat") 0
         iftrue ofs002f
         getlocal_0
         getlocal_1
         callproperty Qname(Namespace("flash.utils:IDataInput"),"readInt") 0
         initproperty Qname(PackageNamespace(""),"statValue_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"statType_")
         getlex Qname(PackageNamespace(""),"SUPPORTER_STAT")
         ifne ofs002b
         ofs002b:jump ofs0039
         ofs002f:getlocal_0
         getlocal_1
         callproperty Qname(Namespace("flash.utils:IDataInput"),"readUTF") 0
         initproperty Qname(PackageNamespace(""),"strStatValue_")
         ofs0039:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function writeToOutput(param1:IDataOutput) : void
      {
         trait method Qname(PackageNamespace(""),"writeToOutput")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"IDataOutput")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"statType_")
         callpropvoid Qname(Namespace("flash.utils:IDataOutput"),"writeByte") 1
         getlocal_0
         callproperty Qname(PackageNamespace(""),"isStringStat") 0
         iftrue ofs0023
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"statValue_")
         callpropvoid Qname(Namespace("flash.utils:IDataOutput"),"writeInt") 1
         jump ofs002d
         ofs0023:getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"strStatValue_")
         callpropvoid Qname(Namespace("flash.utils:IDataOutput"),"writeUTF") 1
         ofs002d:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callproperty Qname(PackageNamespace(""),"isStringStat") 0
         iftrue ofs0024
         pushstring "["
         getlocal_0
         getproperty Qname(PackageNamespace(""),"statType_")
         add
         pushstring ": "
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"statValue_")
         add
         pushstring "]"
         add
         returnvalue
         ofs0024:pushstring "["
         getlocal_0
         getproperty Qname(PackageNamespace(""),"statType_")
         add
         pushstring ": \""
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"strStatValue_")
         add
         pushstring "\"]"
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

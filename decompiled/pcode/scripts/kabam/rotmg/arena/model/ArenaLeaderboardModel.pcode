package kabam.rotmg.arena.model
{
   import kabam.rotmg.text.model.TextKey;
   
   public class ArenaLeaderboardModel
   {
      
      public static const FILTERS:Vector.<ArenaLeaderboardFilter>;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 8
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"FILTERS")
         getlex Multiname("Vector",[PrivateNamespace(null,"1349"),PackageNamespace(""),PrivateNamespace(null,"1350"),PackageNamespace("kabam.rotmg.arena.model"),PackageInternalNs("kabam.rotmg.arena.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.arena.model:ArenaLeaderboardModel"),StaticProtectedNs("kabam.rotmg.arena.model:ArenaLeaderboardModel"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter")
         applytype 1
         getglobalscope
         findpropstrict Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter")
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"ARENA_LEADERBOARD_ALLTIME")
         pushstring "alltime"
         constructprop Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter") 2
         findpropstrict Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter")
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"ARENA_LEADERBOARD_WEEKLY")
         pushstring "weekly"
         constructprop Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter") 2
         findpropstrict Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter")
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"ARENA_LEADERBOARD_YOURRANK")
         pushstring "personal"
         constructprop Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter") 2
         newarray 3
         call 1
         initproperty Qname(PackageNamespace(""),"FILTERS")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ArenaLeaderboardModel()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function clearFilters() : void
      {
         trait method Qname(PackageNamespace(""),"clearFilters")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter")
         setlocal_1
         pushbyte 0
         setlocal_2
         getlex Qname(PackageNamespace(""),"FILTERS")
         coerce_a
         setlocal_3
         jump ofs001f
         ofs0013:label
         getlocal_3
         getlocal_2
         nextvalue
         coerce Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardFilter")
         setlocal_1
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"clearEntries") 0
         ofs001f:hasnext2 3 2
         iftrue ofs0013
         kill 3
         kill 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.dialogs
{
   import kabam.lib.console.signals.RegisterConsoleActionSignal;
   import kabam.lib.console.vo.ConsoleAction;
   import kabam.rotmg.dialogs.control.AddPopupToStartupQueueSignal;
   import kabam.rotmg.dialogs.control.CloseDialogsSignal;
   import kabam.rotmg.dialogs.control.FlushPopupStartupQueueSignal;
   import kabam.rotmg.dialogs.control.OpenDialogNoModalSignal;
   import kabam.rotmg.dialogs.control.OpenDialogSignal;
   import kabam.rotmg.dialogs.control.PopDialogSignal;
   import kabam.rotmg.dialogs.control.PushDialogSignal;
   import kabam.rotmg.dialogs.control.ShowDialogBackgroundSignal;
   import kabam.rotmg.dialogs.view.DialogsMediator;
   import kabam.rotmg.dialogs.view.DialogsView;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;
   import robotlegs.bender.framework.api.IConfig;
   
   public class DialogsConfig implements IConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var injector:Injector;
      
      [Inject]
      public var mediatorMap:IMediatorMap;
      
      [Inject]
      public var register:RegisterConsoleActionSignal;
      
      public function DialogsConfig()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function configure() : void
      {
         trait method Qname(PackageNamespace(""),"configure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.lib.console.vo"),"ConsoleAction")
         setlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"ShowDialogBackgroundSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"OpenDialogSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"OpenDialogNoModalSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"CloseDialogsSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"FlushPopupStartupQueueSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"AddPopupToStartupQueueSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"PushDialogSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"PopDialogSignal")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.view"),"DialogsView")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.view"),"DialogsMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         findpropstrict Qname(PackageNamespace("kabam.lib.console.vo"),"ConsoleAction")
         constructprop Qname(PackageNamespace("kabam.lib.console.vo"),"ConsoleAction") 0
         coerce Qname(PackageNamespace("kabam.lib.console.vo"),"ConsoleAction")
         setlocal_1
         getlocal_1
         pushstring "closeDialogs"
         setproperty Qname(PackageNamespace(""),"name")
         getlocal_1
         pushstring "closes all open dialogs"
         setproperty Qname(PackageNamespace(""),"description")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"register")
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.dialogs.control"),"CloseDialogsSignal")
         callproperty Qname(PackageNamespace(""),"getInstance") 1
         callpropvoid Qname(PackageNamespace(""),"dispatch") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

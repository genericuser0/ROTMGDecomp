package kabam.rotmg.application.model
{
   import flash.display.DisplayObjectContainer;
   import flash.display.LoaderInfo;
   import flash.system.Capabilities;
   
   public class PlatformModel
   {
      
      private static var platform:PlatformType;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var root:DisplayObjectContainer;
      
      private const DESKTOP:String = "Desktop";
      
      public function PlatformModel()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isWeb() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isWeb")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("flash.system"),"Capabilities")
         getproperty Qname(PackageNamespace(""),"playerType")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"478"),"DESKTOP")
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isDesktop() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isDesktop")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("flash.system"),"Capabilities")
         getproperty Qname(PackageNamespace(""),"playerType")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"478"),"DESKTOP")
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getPlatform() : PlatformType
      {
         trait method Qname(PackageNamespace(""),"getPlatform")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"478"),"platform")
         getlex Qname(PrivateNamespace(null,"478"),"platform")
         coerce Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         dup
         iftrue ofs001b
         pop
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"478"),"determinePlatform") 0
         coerce Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         ofs001b:dup
         setlocal_1
         setproperty Qname(PrivateNamespace(null,"478"),"platform")
         getlocal_1
         kill 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function determinePlatform() : PlatformType
      {
         trait method Qname(PrivateNamespace(null,"478"),"determinePlatform")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.display"),"LoaderInfo")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"root")
         getproperty Qname(PackageNamespace(""),"stage")
         getproperty Qname(PackageNamespace(""),"root")
         getproperty Qname(PackageNamespace(""),"loaderInfo")
         callproperty Qname(PackageNamespace("flash.display"),"LoaderInfo") 1
         getproperty Qname(PackageNamespace(""),"parameters")
         coerce Qname(PackageNamespace(""),"Object")
         setlocal_1
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"478"),"isKongregate") 1
         iffalse ofs002e
         getlex Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         getproperty Qname(PackageNamespace(""),"KONGREGATE")
         returnvalue
         ofs002e:getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"478"),"isSteam") 1
         iffalse ofs0040
         getlex Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         getproperty Qname(PackageNamespace(""),"STEAM")
         returnvalue
         ofs0040:getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"478"),"isKabam") 1
         iffalse ofs0052
         getlex Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         getproperty Qname(PackageNamespace(""),"KABAM")
         returnvalue
         ofs0052:getlex Qname(PackageNamespace("kabam.rotmg.application.model"),"PlatformType")
         getproperty Qname(PackageNamespace(""),"WEB")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isKongregate(param1:Object) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"478"),"isKongregate")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Multiname("kongregate_api_path",[PrivateNamespace(null,"478"),PackageNamespace(""),PackageNamespace("kabam.rotmg.application.model"),PrivateNamespace(null,"1517"),PackageInternalNs("kabam.rotmg.application.model"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("kabam.rotmg.application"),ProtectedNamespace("kabam.rotmg.application.model:PlatformModel"),StaticProtectedNs("kabam.rotmg.application.model:PlatformModel")])
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isSteam(param1:Object) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"478"),"isSteam")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Multiname("steam_api_path",[PrivateNamespace(null,"478"),PackageNamespace(""),PackageNamespace("kabam.rotmg.application.model"),PrivateNamespace(null,"1517"),PackageInternalNs("kabam.rotmg.application.model"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("kabam.rotmg.application"),ProtectedNamespace("kabam.rotmg.application.model:PlatformModel"),StaticProtectedNs("kabam.rotmg.application.model:PlatformModel")])
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isKabam(param1:Object) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"478"),"isKabam")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Multiname("kabam_signed_request",[PrivateNamespace(null,"478"),PackageNamespace(""),PackageNamespace("kabam.rotmg.application.model"),PrivateNamespace(null,"1517"),PackageInternalNs("kabam.rotmg.application.model"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("kabam.rotmg.application"),ProtectedNamespace("kabam.rotmg.application.model:PlatformModel"),StaticProtectedNs("kabam.rotmg.application.model:PlatformModel")])
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

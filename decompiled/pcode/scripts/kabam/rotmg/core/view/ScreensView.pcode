package kabam.rotmg.core.view
{
   import flash.display.Sprite;
   
   public class ScreensView extends Sprite
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var current:Sprite;
      
      private var previous:Sprite;
      
      public function ScreensView()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setScreen(param1:Sprite) : void
      {
         trait method Qname(PackageNamespace(""),"setScreen")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.display"),"Sprite")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"509"),"current")
         getlocal_1
         ifne ofs000c
         returnvoid
         ofs000c:getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"509"),"removePrevious") 0
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"509"),"current")
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function removePrevious() : void
      {
         trait method Qname(PrivateNamespace(null,"509"),"removePrevious")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"509"),"current")
         convert_b
         dup
         iffalse ofs0019
         pop
         findpropstrict Qname(PackageNamespace(""),"contains")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"509"),"current")
         callproperty Qname(PackageNamespace(""),"contains") 1
         convert_b
         ofs0019:iffalse ofs0030
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"509"),"current")
         initproperty Qname(PrivateNamespace(null,"509"),"previous")
         findpropstrict Qname(PackageNamespace(""),"removeChild")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"509"),"current")
         callpropvoid Qname(PackageNamespace(""),"removeChild") 1
         ofs0030:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getPrevious() : Sprite
      {
         trait method Qname(PackageNamespace(""),"getPrevious")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("flash.display"),"Sprite")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"509"),"previous")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.death.control
{
   import kabam.rotmg.core.model.PlayerModel;
   import kabam.rotmg.death.model.DeathModel;
   import kabam.rotmg.dialogs.control.CloseDialogsSignal;
   import kabam.rotmg.messaging.impl.incoming.Death;
   
   public class HandleDeathCommand
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var death:Death;
      
      [Inject]
      public var closeDialogs:CloseDialogsSignal;
      
      [Inject]
      public var model:DeathModel;
      
      [Inject]
      public var player:PlayerModel;
      
      [Inject]
      public var resurrect:ResurrectPlayerSignal;
      
      [Inject]
      public var zombify:ZombifySignal;
      
      [Inject]
      public var normal:HandleNormalDeathSignal;
      
      public function HandleDeathCommand()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function execute() : void
      {
         trait method Qname(PackageNamespace(""),"execute")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"closeDialogs")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 0
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"470"),"isZombieDeathPending") 0
         iffalse ofs001c
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"470"),"passPreviousDeathToFameView") 0
         jump ofs0021
         ofs001c:getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"470"),"updateModelAndHandleDeath") 0
         ofs0021:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function isZombieDeathPending() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"470"),"isZombieDeathPending")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"model")
         callproperty Qname(PackageNamespace(""),"getIsDeathViewPending") 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function passPreviousDeathToFameView() : void
      {
         trait method Qname(PrivateNamespace(null,"470"),"passPreviousDeathToFameView")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"normal")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"model")
         callproperty Qname(PackageNamespace(""),"getLastDeath") 0
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function updateModelAndHandleDeath() : void
      {
         trait method Qname(PrivateNamespace(null,"470"),"updateModelAndHandleDeath")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"model")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"death")
         callpropvoid Qname(PackageNamespace(""),"setLastDeath") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"death")
         getproperty Qname(PackageNamespace(""),"isZombie")
         iffalse ofs0029
         getlocal_0
         getproperty Qname(PackageNamespace(""),"zombify")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"death")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         jump ofs0051
         ofs0029:getlocal_0
         getproperty Qname(PackageNamespace(""),"player")
         callproperty Qname(PackageNamespace(""),"getHasPlayerDied") 0
         iftrue ofs0045
         getlocal_0
         getproperty Qname(PackageNamespace(""),"resurrect")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"death")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         jump ofs0051
         ofs0045:getlocal_0
         getproperty Qname(PackageNamespace(""),"normal")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"death")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         ofs0051:returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

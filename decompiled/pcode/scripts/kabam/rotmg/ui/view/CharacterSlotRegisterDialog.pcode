package kabam.rotmg.ui.view
{
   import com.company.assembleegameclient.ui.dialogs.Dialog;
   import flash.display.Sprite;
   import org.osflash.signals.Signal;
   import org.osflash.signals.natives.NativeMappedSignal;
   
   public class CharacterSlotRegisterDialog extends Sprite
   {
      
      private static const TEXT:String = "In order to have more than one character slot, you must be a registered user.";
      
      private static const TITLE:String = "Not Registered";
      
      private static const CANCEL:String = "Cancel";
      
      private static const REGISTER:String = "Register";
      
      private static const ANALYTICS_PAGE:String = "/charSlotNeedRegister";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"217"),"TEXT")
         pushstring "In order to have more than one character slot, you must be a registered user."
         initproperty Qname(PrivateNamespace(null,"217"),"TEXT")
         findproperty Qname(PrivateNamespace(null,"217"),"TITLE")
         pushstring "Not Registered"
         initproperty Qname(PrivateNamespace(null,"217"),"TITLE")
         findproperty Qname(PrivateNamespace(null,"217"),"CANCEL")
         pushstring "Cancel"
         initproperty Qname(PrivateNamespace(null,"217"),"CANCEL")
         findproperty Qname(PrivateNamespace(null,"217"),"REGISTER")
         pushstring "Register"
         initproperty Qname(PrivateNamespace(null,"217"),"REGISTER")
         findproperty Qname(PrivateNamespace(null,"217"),"ANALYTICS_PAGE")
         pushstring "/charSlotNeedRegister"
         initproperty Qname(PrivateNamespace(null,"217"),"ANALYTICS_PAGE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var cancel:Signal;
      
      public var register:Signal;
      
      private var dialog:Dialog;
      
      public function CharacterSlotRegisterDialog()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"217"),"makeDialog") 0
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"217"),"makeSignals") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function makeDialog() : void
      {
         trait method Qname(PrivateNamespace(null,"217"),"makeDialog")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.ui.dialogs"),"Dialog")
         getlex Qname(PrivateNamespace(null,"217"),"TITLE")
         getlex Qname(PrivateNamespace(null,"217"),"TEXT")
         getlex Qname(PrivateNamespace(null,"217"),"CANCEL")
         getlex Qname(PrivateNamespace(null,"217"),"REGISTER")
         getlex Qname(PrivateNamespace(null,"217"),"ANALYTICS_PAGE")
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.ui.dialogs"),"Dialog") 5
         initproperty Qname(PrivateNamespace(null,"217"),"dialog")
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"217"),"dialog")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function makeSignals() : void
      {
         trait method Qname(PrivateNamespace(null,"217"),"makeSignals")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals.natives"),"NativeMappedSignal")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"217"),"dialog")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.dialogs"),"Dialog")
         getproperty Qname(PackageNamespace(""),"LEFT_BUTTON")
         constructprop Qname(PackageNamespace("org.osflash.signals.natives"),"NativeMappedSignal") 2
         initproperty Qname(PackageNamespace(""),"cancel")
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals.natives"),"NativeMappedSignal")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"217"),"dialog")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.dialogs"),"Dialog")
         getproperty Qname(PackageNamespace(""),"RIGHT_BUTTON")
         constructprop Qname(PackageNamespace("org.osflash.signals.natives"),"NativeMappedSignal") 2
         initproperty Qname(PackageNamespace(""),"register")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

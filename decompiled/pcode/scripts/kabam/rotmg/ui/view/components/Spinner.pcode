package kabam.rotmg.ui.view.components
{
   import flash.display.DisplayObject;
   import flash.display.Sprite;
   import flash.events.Event;
   import flash.utils.getTimer;
   import kabam.rotmg.assets.EmbeddedAssets;
   
   public class Spinner extends Sprite
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public const graphic:DisplayObject;
      
      public var degreesPerSecond:Number;
      
      private var secondsElapsed:Number;
      
      private var previousSeconds:Number;
      
      public function Spinner()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlex Qname(PackageNamespace("kabam.rotmg.assets"),"EmbeddedAssets")
         constructprop Qname(PackageNamespace(""),"StarburstSpinner") 0
         initproperty Qname(PackageNamespace(""),"graphic")
         getlocal_0
         constructsuper 0
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"1195"),"secondsElapsed")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1195"),"defaultConfig") 0
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1195"),"addGraphic") 0
         findpropstrict Qname(PackageNamespace(""),"addEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ENTER_FRAME")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"onEnterFrame")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         findpropstrict Qname(PackageNamespace(""),"addEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"REMOVED_FROM_STAGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"onRemoved")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function defaultConfig() : void
      {
         trait method Qname(PrivateNamespace(null,"1195"),"defaultConfig")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         pushbyte 50
         initproperty Qname(PackageNamespace(""),"degreesPerSecond")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function addGraphic() : void
      {
         trait method Qname(PrivateNamespace(null,"1195"),"addGraphic")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"graphic")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"graphic")
         pushbyte -1
         getlex Qname(PackageNamespace(""),"width")
         multiply
         pushbyte 2
         divide
         setproperty Qname(PackageNamespace(""),"x")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"graphic")
         pushbyte -1
         getlex Qname(PackageNamespace(""),"height")
         multiply
         pushbyte 2
         divide
         setproperty Qname(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onRemoved(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1195"),"onRemoved")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"removeEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"REMOVED_FROM_STAGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"onRemoved")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         findpropstrict Qname(PackageNamespace(""),"removeEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ENTER_FRAME")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"onEnterFrame")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onEnterFrame(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1195"),"onEnterFrame")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1195"),"updateTimeElapsed") 0
         findproperty Qname(PackageNamespace(""),"rotation")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"degreesPerSecond")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"secondsElapsed")
         multiply
         pushshort 360
         modulo
         initproperty Qname(PackageNamespace(""),"rotation")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function updateTimeElapsed() : void
      {
         trait method Qname(PrivateNamespace(null,"1195"),"updateTimeElapsed")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.utils"),"getTimer")
         callproperty Qname(PackageNamespace("flash.utils"),"getTimer") 0
         pushshort 1000
         divide
         convert_d
         setlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"previousSeconds")
         iffalse ofs002c
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"secondsElapsed")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1195"),"previousSeconds")
         subtract
         add
         initproperty Qname(PrivateNamespace(null,"1195"),"secondsElapsed")
         ofs002c:getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1195"),"previousSeconds")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

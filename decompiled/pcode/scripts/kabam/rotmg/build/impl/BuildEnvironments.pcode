package kabam.rotmg.build.impl
{
   import kabam.rotmg.build.api.BuildEnvironment;
   
   public final class BuildEnvironments
   {
      
      public static const LOCALHOST:String = "localhost";
      
      public static const PRIVATE:String = "private";
      
      public static const DEV:String = "dev";
      
      public static const TESTING:String = "testing";
      
      public static const TESTING2:String = "testing2";
      
      public static const PRODTEST:String = "prodtest";
      
      public static const PRODUCTION:String = "production";
      
      private static const IP_MATCHER:RegExp;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"LOCALHOST")
         pushstring "localhost"
         initproperty Qname(PackageNamespace(""),"LOCALHOST")
         findproperty Qname(PackageNamespace(""),"PRIVATE")
         pushstring "private"
         initproperty Qname(PackageNamespace(""),"PRIVATE")
         findproperty Qname(PackageNamespace(""),"DEV")
         pushstring "dev"
         initproperty Qname(PackageNamespace(""),"DEV")
         findproperty Qname(PackageNamespace(""),"TESTING")
         pushstring "testing"
         initproperty Qname(PackageNamespace(""),"TESTING")
         findproperty Qname(PackageNamespace(""),"TESTING2")
         pushstring "testing2"
         initproperty Qname(PackageNamespace(""),"TESTING2")
         findproperty Qname(PackageNamespace(""),"PRODTEST")
         pushstring "prodtest"
         initproperty Qname(PackageNamespace(""),"PRODTEST")
         findproperty Qname(PackageNamespace(""),"PRODUCTION")
         pushstring "production"
         initproperty Qname(PackageNamespace(""),"PRODUCTION")
         findproperty Qname(PrivateNamespace(null,"92"),"IP_MATCHER")
         getlex Qname(PackageNamespace(""),"RegExp")
         pushstring "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
         construct 1
         initproperty Qname(PrivateNamespace(null,"92"),"IP_MATCHER")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function BuildEnvironments()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getEnvironment(param1:String) : BuildEnvironment
      {
         trait method Qname(PackageNamespace(""),"getEnvironment")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"92"),"isFixedIP") 1
         iffalse ofs0018
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"FIXED_IP")
         coerce Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         jump ofs0020
         ofs0018:getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"92"),"getEnvironmentFromName") 1
         coerce Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         ofs0020:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isFixedIP(param1:String) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"92"),"isFixedIP")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlex Qname(PrivateNamespace(null,"92"),"IP_MATCHER")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"match") 1
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function getEnvironmentFromName(param1:String) : BuildEnvironment
      {
         trait method Qname(PrivateNamespace(null,"92"),"getEnvironmentFromName")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         jump ofs0043
         ofs0006:label
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"LOCALHOST")
         returnvalue
         ofs000e:label
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"PRIVATE")
         returnvalue
         ofs0016:label
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"DEV")
         returnvalue
         ofs001e:label
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"TESTING")
         returnvalue
         ofs0026:label
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"TESTING2")
         returnvalue
         ofs002e:label
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"PRODTEST")
         returnvalue
         ofs0036:label
         getlex Qname(PackageNamespace("kabam.rotmg.build.api"),"BuildEnvironment")
         getproperty Qname(PackageNamespace(""),"PRODUCTION")
         returnvalue
         ofs003e:label
         jump ofs00d9
         ofs0043:getlocal_1
         setlocal_2
         getlex Qname(PackageNamespace(""),"LOCALHOST")
         getlocal_2
         ifstrictne ofs0054
         pushbyte 0
         jump ofs00ba
         ofs0054:getlex Qname(PackageNamespace(""),"PRIVATE")
         getlocal_2
         ifstrictne ofs0063
         pushbyte 1
         jump ofs00ba
         ofs0063:getlex Qname(PackageNamespace(""),"DEV")
         getlocal_2
         ifstrictne ofs0072
         pushbyte 2
         jump ofs00ba
         ofs0072:getlex Qname(PackageNamespace(""),"TESTING")
         getlocal_2
         ifstrictne ofs0081
         pushbyte 3
         jump ofs00ba
         ofs0081:getlex Qname(PackageNamespace(""),"TESTING2")
         getlocal_2
         ifstrictne ofs0090
         pushbyte 4
         jump ofs00ba
         ofs0090:getlex Qname(PackageNamespace(""),"PRODTEST")
         getlocal_2
         ifstrictne ofs009f
         pushbyte 5
         jump ofs00ba
         ofs009f:getlex Qname(PackageNamespace(""),"PRODUCTION")
         getlocal_2
         ifstrictne ofs00ae
         pushbyte 6
         jump ofs00ba
         ofs00ae:jump ofs00b8
         pushbyte 7
         jump ofs00b8
         ofs00b8:pushbyte 7
         ofs00ba:kill 2
         lookupswitch ofs003e 7 ofs0006 ofs000e ofs0016 ofs001e ofs0026 ofs002e ofs0036 ofs003e
         ofs00d9:pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.stage3D.Object3D
{
   import flash.geom.Matrix3D;
   import flash.utils.ByteArray;
   
   public class Util
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Util()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function perspectiveProjection(param1:Number = 90, param2:Number = 1, param3:Number = 1, param4:Number = 2048) : Matrix3D
      {
         trait method Qname(PackageNamespace(""),"perspectiveProjection")
         flag FINAL
         dispid 3
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         optional 90
         optional 1
         optional 1
         optional 2048
         returns Qname(PackageNamespace("flash.geom"),"Matrix3D")
         
         body
         maxstack 19
         localcount 15
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_3
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         pushshort 360
         divide
         callproperty Qname(PackageNamespace(""),"tan") 1
         multiply
         convert_d
         dup
         setlocal 5
         negate
         convert_d
         dup
         setlocal 6
         getlocal_2
         multiply
         convert_d
         setlocal 7
         getlocal 5
         getlocal_2
         multiply
         convert_d
         setlocal 8
         pushbyte 2
         getlocal_3
         multiply
         getlocal 8
         getlocal 7
         subtract
         divide
         convert_d
         setlocal 9
         pushbyte 2
         getlocal_3
         multiply
         getlocal 5
         getlocal 6
         subtract
         divide
         convert_d
         setlocal 10
         getlocal 8
         getlocal 7
         add
         getlocal 8
         getlocal 7
         subtract
         divide
         convert_d
         setlocal 11
         getlocal 5
         getlocal 6
         add
         getlocal 5
         getlocal 6
         subtract
         divide
         convert_d
         setlocal 12
         getlocal 4
         getlocal_3
         add
         negate
         getlocal 4
         getlocal_3
         subtract
         divide
         convert_d
         setlocal 13
         pushbyte -2
         getlocal 4
         getlocal_3
         multiply
         multiply
         getlocal 4
         getlocal_3
         subtract
         divide
         convert_d
         setlocal 14
         findpropstrict Qname(PackageNamespace("flash.geom"),"Matrix3D")
         getlex Multiname("Vector",[PrivateNamespace(null,"1835"),PackageNamespace(""),PrivateNamespace(null,"1836"),PackageNamespace("kabam.rotmg.stage3D.Object3D"),PackageInternalNs("kabam.rotmg.stage3D.Object3D"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.stage3D.Object3D:Util"),StaticProtectedNs("kabam.rotmg.stage3D.Object3D:Util"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"Number")
         applytype 1
         getglobalscope
         getlocal 9
         pushbyte 0
         dup
         dup
         pushbyte 0
         getlocal 10
         pushbyte 0
         dup
         getlocal 11
         getlocal 12
         getlocal 13
         pushbyte -1
         pushbyte 0
         dup
         getlocal 14
         pushbyte 0
         newarray 16
         call 1
         constructprop Qname(PackageNamespace("flash.geom"),"Matrix3D") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function readString(param1:ByteArray, param2:int) : String
      {
         trait method Qname(PackageNamespace(""),"readString")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 7
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 5
         pushstring ""
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs0054
         ofs0012:label
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedByte") 0
         convert_u
         dup
         setlocal 5
         pushbyte 0
         ifstrictne ofs0045
         getlocal_1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"position")
         getlex Qname(PackageNamespace(""),"Math")
         pushbyte 0
         getlocal_2
         getlocal 4
         pushbyte 1
         add
         subtract
         callproperty Qname(PackageNamespace(""),"max") 2
         add
         setproperty Qname(PackageNamespace(""),"position")
         jump ofs005b
         jump ofs0045
         ofs0045:getlocal_3
         getlex Qname(PackageNamespace(""),"String")
         getlocal 5
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode") 1
         add
         coerce_s
         setlocal_3
         inclocal_i 4
         ofs0054:getlocal 4
         getlocal_2
         iflt ofs0012
         ofs005b:getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function upperPowerOfTwo(param1:uint) : uint
      {
         trait method Qname(PackageNamespace(""),"upperPowerOfTwo")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         decrement
         convert_u
         setlocal_1
         getlocal_1
         getlocal_1
         pushbyte 1
         rshift
         bitor
         convert_u
         setlocal_1
         getlocal_1
         getlocal_1
         pushbyte 2
         rshift
         bitor
         convert_u
         setlocal_1
         getlocal_1
         getlocal_1
         pushbyte 4
         rshift
         bitor
         convert_u
         setlocal_1
         getlocal_1
         getlocal_1
         pushbyte 8
         rshift
         bitor
         convert_u
         setlocal_1
         getlocal_1
         getlocal_1
         pushbyte 16
         rshift
         bitor
         convert_u
         setlocal_1
         getlocal_1
         increment
         convert_u
         setlocal_1
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

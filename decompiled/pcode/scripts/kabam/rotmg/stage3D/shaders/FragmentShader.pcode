package kabam.rotmg.stage3D.shaders
{
   import com.adobe.utils.AGALMiniAssembler;
   import flash.display3D.Context3DProgramType;
   import flash.utils.ByteArray;
   
   public class FragmentShader
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var vertexProgram:ByteArray;
      
      public function FragmentShader()
      {
         method
         name null
         returns null
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         findpropstrict Qname(PackageNamespace("com.adobe.utils"),"AGALMiniAssembler")
         constructprop Qname(PackageNamespace("com.adobe.utils"),"AGALMiniAssembler") 0
         coerce Qname(PackageNamespace("com.adobe.utils"),"AGALMiniAssembler")
         setlocal_1
         getlocal_1
         getlex Qname(PackageNamespace("flash.display3D"),"Context3DProgramType")
         getproperty Qname(PackageNamespace(""),"FRAGMENT")
         pushstring "tex ft1, v0, fs0 <2d>\n"
         pushstring "mul ft1.x, ft1.x, fc2.x\n"
         add
         pushstring "mul ft1.y, ft1.y, fc2.y\n"
         add
         pushstring "mul ft1.z, ft1.z, fc2.z\n"
         add
         pushstring "mul ft1.w, ft1.w, fc2.w\n"
         add
         pushstring "add ft1, ft1, fc3\n"
         add
         pushstring "mov oc, ft1"
         add
         callpropvoid Qname(PackageNamespace(""),"assemble") 2
         getlocal_0
         getlocal_1
         getproperty Qname(PackageNamespace(""),"agalcode")
         initproperty Qname(PrivateNamespace(null,"1033"),"vertexProgram")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getVertexProgram() : ByteArray
      {
         trait method Qname(PackageNamespace(""),"getVertexProgram")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("flash.utils"),"ByteArray")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1033"),"vertexProgram")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

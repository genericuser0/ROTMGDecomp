package kabam.rotmg.text.model
{
   import flash.text.Font;
   import flash.text.TextField;
   import flash.text.TextFormat;
   
   public class FontModel
   {
      
      public static const MyriadPro:Class;
      
      public static const MyriadPro_Bold:Class;
      
      public static var DEFAULT_FONT_NAME:String = "";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"MyriadPro")
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"FontModel_MyriadPro")
         initproperty Qname(PackageNamespace(""),"MyriadPro")
         findproperty Qname(PackageNamespace(""),"MyriadPro_Bold")
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"FontModel_MyriadPro_Bold")
         initproperty Qname(PackageNamespace(""),"MyriadPro_Bold")
         findproperty Qname(PackageNamespace(""),"DEFAULT_FONT_NAME")
         pushstring ""
         setproperty Qname(PackageNamespace(""),"DEFAULT_FONT_NAME")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var fontInfo:FontInfo;
      
      public function FontModel()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlex Qname(PackageNamespace("flash.text"),"Font")
         getlex Qname(PackageNamespace(""),"MyriadPro")
         callpropvoid Qname(PackageNamespace(""),"registerFont") 1
         getlex Qname(PackageNamespace("flash.text"),"Font")
         getlex Qname(PackageNamespace(""),"MyriadPro_Bold")
         callpropvoid Qname(PackageNamespace(""),"registerFont") 1
         findpropstrict Qname(PackageNamespace(""),"MyriadPro")
         constructprop Qname(PackageNamespace(""),"MyriadPro") 0
         coerce Qname(PackageNamespace("flash.text"),"Font")
         setlocal_1
         findproperty Qname(PackageNamespace(""),"DEFAULT_FONT_NAME")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"fontName")
         setproperty Qname(PackageNamespace(""),"DEFAULT_FONT_NAME")
         getlocal_0
         findpropstrict Qname(PackageNamespace("kabam.rotmg.text.model"),"FontInfo")
         constructprop Qname(PackageNamespace("kabam.rotmg.text.model"),"FontInfo") 0
         initproperty Qname(PrivateNamespace(null,"127"),"fontInfo")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"127"),"fontInfo")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"fontName")
         callpropvoid Qname(PackageNamespace(""),"setName") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getFont() : FontInfo
      {
         trait method Qname(PackageNamespace(""),"getFont")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.text.model"),"FontInfo")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"127"),"fontInfo")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function apply(param1:TextField, param2:int, param3:uint, param4:Boolean, param5:Boolean = false) : TextFormat
      {
         trait method Qname(PackageNamespace(""),"apply")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.text"),"TextField")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         returns Qname(PackageNamespace("flash.text"),"TextFormat")
         
         body
         maxstack 2
         localcount 7
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"defaultTextFormat")
         coerce Qname(PackageNamespace("flash.text"),"TextFormat")
         dup
         setlocal 6
         getlocal_2
         setproperty Qname(PackageNamespace(""),"size")
         getlocal 6
         getlocal_3
         setproperty Qname(PackageNamespace(""),"color")
         getlocal 6
         getlocal_0
         callproperty Qname(PackageNamespace(""),"getFont") 0
         callproperty Qname(PackageNamespace(""),"getName") 0
         setproperty Qname(PackageNamespace(""),"font")
         getlocal 6
         getlocal 4
         setproperty Qname(PackageNamespace(""),"bold")
         getlocal 5
         iffalse ofs003c
         getlocal 6
         pushstring "center"
         setproperty Qname(PackageNamespace(""),"align")
         ofs003c:getlocal_1
         getlocal 6
         setproperty Qname(PackageNamespace(""),"defaultTextFormat")
         getlocal_1
         getlocal 6
         callpropvoid Qname(PackageNamespace(""),"setTextFormat") 1
         getlocal 6
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getFormat(param1:TextField, param2:int, param3:uint, param4:Boolean) : TextFormat
      {
         trait method Qname(PackageNamespace(""),"getFormat")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.text"),"TextField")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace("flash.text"),"TextFormat")
         
         body
         maxstack 2
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"defaultTextFormat")
         coerce Qname(PackageNamespace("flash.text"),"TextFormat")
         dup
         setlocal 5
         getlocal_2
         setproperty Qname(PackageNamespace(""),"size")
         getlocal 5
         getlocal_3
         setproperty Qname(PackageNamespace(""),"color")
         getlocal 5
         getlocal_0
         callproperty Qname(PackageNamespace(""),"getFont") 0
         callproperty Qname(PackageNamespace(""),"getName") 0
         setproperty Qname(PackageNamespace(""),"font")
         getlocal 5
         getlocal 4
         setproperty Qname(PackageNamespace(""),"bold")
         getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.appengine.impl
{
   import kabam.lib.console.signals.ConsoleWatchSignal;
   
   public class AppEngineRequestStats
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var watch:ConsoleWatchSignal;
      
      private const nameMap:Object;
      
      public function AppEngineRequestStats()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         newobject 0
         initproperty Qname(PrivateNamespace(null,"59"),"nameMap")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function recordStats(param1:String, param2:Boolean, param3:int) : void
      {
         trait method Qname(PackageNamespace(""),"recordStats")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"59"),"nameMap")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"59"),"nameMap")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"59"),PrivateNamespace(null,"60"),PackageNamespace(""),PackageNamespace("kabam.rotmg.appengine.impl"),PackageInternalNs("kabam.rotmg.appengine.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.appengine.impl:AppEngineRequestStats"),StaticProtectedNs("kabam.rotmg.appengine.impl:AppEngineRequestStats")])
         coerce_a
         dup
         iftrue ofs0020
         pop
         findpropstrict Qname(PrivateNamespace(null,"60"),"StatsWatch")
         getlocal_1
         constructprop Qname(PrivateNamespace(null,"60"),"StatsWatch") 1
         coerce_a
         ofs0020:dup
         setlocal 5
         setproperty MultinameL([PrivateNamespace(null,"59"),PrivateNamespace(null,"60"),PackageNamespace(""),PackageNamespace("kabam.rotmg.appengine.impl"),PackageInternalNs("kabam.rotmg.appengine.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.appengine.impl:AppEngineRequestStats"),StaticProtectedNs("kabam.rotmg.appengine.impl:AppEngineRequestStats")])
         getlocal 5
         kill 5
         coerce Qname(PrivateNamespace(null,"60"),"StatsWatch")
         dup
         setlocal 4
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"addResponse") 2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"watch")
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

import kabam.lib.console.model.Watch;

class StatsWatch extends Watch
{
   
   private static const STATS_PATTERN:String = "[APPENGINE STATS] [0xFFEE00:{/x={MEAN}ms, ok={OK}/{COUNT}} {NAME}]";
   
   private static const MEAN:String = "{MEAN}";
   
   private static const COUNT:String = "{COUNT}";
   
   private static const OK:String = "{OK}";
   
   private static const NAME:String = "{NAME}";
   
   {
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      findproperty Qname(PrivateNamespace(null,"61"),"STATS_PATTERN")
      pushstring "[APPENGINE STATS] [0xFFEE00:{/x={MEAN}ms, ok={OK}/{COUNT}} {NAME}]"
      initproperty Qname(PrivateNamespace(null,"61"),"STATS_PATTERN")
      findproperty Qname(PrivateNamespace(null,"61"),"MEAN")
      pushstring "{MEAN}"
      initproperty Qname(PrivateNamespace(null,"61"),"MEAN")
      findproperty Qname(PrivateNamespace(null,"61"),"COUNT")
      pushstring "{COUNT}"
      initproperty Qname(PrivateNamespace(null,"61"),"COUNT")
      findproperty Qname(PrivateNamespace(null,"61"),"OK")
      pushstring "{OK}"
      initproperty Qname(PrivateNamespace(null,"61"),"OK")
      findproperty Qname(PrivateNamespace(null,"61"),"NAME")
      pushstring "{NAME}"
      initproperty Qname(PrivateNamespace(null,"61"),"NAME")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private var count:int;
   
   private var time:int;
   
   private var mean:int;
   
   private var ok:int;
   
   function StatsWatch(param1:String)
   {
      method
      name null
      param Qname(PackageNamespace(""),"String")
      returns null
      
      body
      maxstack 3
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_1
      pushstring ""
      constructsuper 2
      getlocal_0
      pushbyte 0
      initproperty Qname(PrivateNamespace(null,"61"),"count")
      getlocal_0
      pushbyte 0
      initproperty Qname(PrivateNamespace(null,"61"),"ok")
      getlocal_0
      pushbyte 0
      initproperty Qname(PrivateNamespace(null,"61"),"time")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function addResponse(param1:Boolean, param2:int) : void
   {
      trait method Qname(PackageNamespace(""),"addResponse")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"Boolean")
      param Qname(PackageNamespace(""),"int")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 5
      localcount 5
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_1
      coerce_a
      dup
      iffalse ofs001f
      pop
      getlocal_0
      dup
      setlocal_3
      getproperty Qname(PrivateNamespace(null,"61"),"ok")
      increment_i
      dup
      setlocal 4
      getlocal_3
      getlocal 4
      setproperty Qname(PrivateNamespace(null,"61"),"ok")
      kill 4
      kill 3
      coerce_a
      ofs001f:pop
      getlocal_0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"61"),"time")
      getlocal_2
      add
      initproperty Qname(PrivateNamespace(null,"61"),"time")
      getlocal_0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"61"),"time")
      getlocal_0
      dup
      setlocal_3
      getproperty Qname(PrivateNamespace(null,"61"),"count")
      increment_i
      dup
      setlocal 4
      getlocal_3
      getlocal 4
      setproperty Qname(PrivateNamespace(null,"61"),"count")
      kill 4
      kill 3
      divide
      initproperty Qname(PrivateNamespace(null,"61"),"mean")
      findproperty Qname(PackageNamespace(""),"data")
      getlocal_0
      callproperty Qname(PrivateNamespace(null,"61"),"report") 0
      initproperty Qname(PackageNamespace(""),"data")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private function report() : String
   {
      trait method Qname(PrivateNamespace(null,"61"),"report")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"String")
      
      body
      maxstack 3
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlex Qname(PrivateNamespace(null,"61"),"STATS_PATTERN")
      getlex Qname(PrivateNamespace(null,"61"),"MEAN")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"61"),"mean")
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
      getlex Qname(PrivateNamespace(null,"61"),"COUNT")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"61"),"count")
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
      getlex Qname(PrivateNamespace(null,"61"),"OK")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"61"),"ok")
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
      getlex Qname(PrivateNamespace(null,"61"),"NAME")
      getlex Qname(PackageNamespace(""),"name")
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

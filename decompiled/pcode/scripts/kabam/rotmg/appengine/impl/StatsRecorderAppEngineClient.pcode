package kabam.rotmg.appengine.impl
{
   import flash.events.EventDispatcher;
   import flash.utils.getTimer;
   import kabam.rotmg.appengine.api.AppEngineClient;
   import org.osflash.signals.OnceSignal;
   
   public class StatsRecorderAppEngineClient extends EventDispatcher implements AppEngineClient
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var stats:AppEngineRequestStats;
      
      [Inject]
      public var wrapped:SimpleAppEngineClient;
      
      private var timeAtRequest:int;
      
      private var target:String;
      
      public function StatsRecorderAppEngineClient()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get complete() : OnceSignal
      {
         trait getter Qname(PackageNamespace(""),"complete")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("org.osflash.signals"),"OnceSignal")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"wrapped")
         getproperty Qname(PackageNamespace(""),"complete")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setDataFormat(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"setDataFormat")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"wrapped")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setDataFormat") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setSendEncrypted(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setSendEncrypted")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"wrapped")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setSendEncrypted") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setMaxRetries(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setMaxRetries")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"wrapped")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setMaxRetries") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function sendRequest(param1:String, param2:Object) : void
      {
         trait method Qname(PackageNamespace(""),"sendRequest")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.utils"),"getTimer")
         callproperty Qname(PackageNamespace("flash.utils"),"getTimer") 0
         initproperty Qname(PrivateNamespace(null,"63"),"timeAtRequest")
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"63"),"target")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"wrapped")
         getproperty Qname(PackageNamespace(""),"complete")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"63"),"onComplete")
         callpropvoid Qname(PackageNamespace(""),"addOnce") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"wrapped")
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"sendRequest") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onComplete(param1:Boolean, param2:*) : void
      {
         trait method Qname(PrivateNamespace(null,"63"),"onComplete")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"stats")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"63"),"target")
         getlocal_1
         findpropstrict Qname(PackageNamespace("flash.utils"),"getTimer")
         callproperty Qname(PackageNamespace("flash.utils"),"getTimer") 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"63"),"timeAtRequest")
         subtract
         callpropvoid Qname(PackageNamespace(""),"recordStats") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function requestInProgress() : Boolean
      {
         trait method Qname(PackageNamespace(""),"requestInProgress")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

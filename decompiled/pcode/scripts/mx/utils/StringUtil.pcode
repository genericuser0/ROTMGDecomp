package mx.utils
{
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class StringUtil
   {
      
      mx_internal static const VERSION:String = "4.6.0.23201";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.6.0.23201"
         initproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function StringUtil()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function trim(param1:String) : String
      {
         trait method Qname(PackageNamespace(""),"trim")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs000b
         pushstring ""
         returnvalue
         ofs000b:pushbyte 0
         setlocal_2
         jump ofs0015
         ofs0012:label
         inclocal_i 2
         ofs0015:findpropstrict Qname(PackageNamespace(""),"isWhitespace")
         getlocal_1
         getlocal_2
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
         callproperty Qname(PackageNamespace(""),"isWhitespace") 1
         iftrue ofs0012
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         decrement
         convert_i
         setlocal_3
         jump ofs0038
         ofs0034:label
         getlocal_3
         decrement_i
         setlocal_3
         ofs0038:findpropstrict Qname(PackageNamespace(""),"isWhitespace")
         getlocal_1
         getlocal_3
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
         callproperty Qname(PackageNamespace(""),"isWhitespace") 1
         iftrue ofs0034
         getlocal_3
         getlocal_2
         ifnge ofs005e
         getlocal_1
         getlocal_2
         getlocal_3
         pushbyte 1
         add
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"slice") 2
         returnvalue
         ofs005e:pushstring ""
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function trimArrayElements(param1:String, param2:String) : String
      {
         trait method Qname(PackageNamespace(""),"trimArrayElements")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 5
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         pushbyte 0
         setlocal 4
         pushbyte 0
         setlocal 5
         getlocal_1
         pushstring ""
         equals
         not
         dup
         iffalse ofs001d
         pop
         getlocal_1
         pushnull
         equals
         not
         ofs001d:iffalse ofs006c
         getlocal_1
         getlocal_2
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_3
         getproperty Qname(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs0053
         ofs003a:label
         getlocal_3
         getlocal 5
         getlex Qname(PackageNamespace("mx.utils"),"StringUtil")
         getlocal_3
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1270"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"1885"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil")])
         callproperty Qname(PackageNamespace(""),"trim") 1
         setproperty MultinameL([PrivateNamespace(null,"1270"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"1885"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil")])
         inclocal_i 5
         ofs0053:getlocal 5
         getlocal 4
         iflt ofs003a
         getlocal 4
         pushbyte 0
         ifngt ofs006c
         getlocal_3
         getlocal_2
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         coerce_s
         setlocal_1
         ofs006c:getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function isWhitespace(param1:String) : Boolean
      {
         trait method Qname(PackageNamespace(""),"isWhitespace")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         jump ofs0010
         ofs0006:label
         pushtrue
         returnvalue
         ofs0009:label
         pushfalse
         returnvalue
         jump ofs0010
         ofs0010:getlocal_1
         setlocal_2
         pushstring " "
         getlocal_2
         ifstrictne ofs0021
         pushbyte 0
         jump ofs0068
         ofs0021:pushstring "\t"
         getlocal_2
         ifstrictne ofs0030
         pushbyte 1
         jump ofs0068
         ofs0030:pushstring "\r"
         getlocal_2
         ifstrictne ofs003f
         pushbyte 2
         jump ofs0068
         ofs003f:pushstring "\n"
         getlocal_2
         ifstrictne ofs004d
         pushbyte 3
         jump ofs0068
         ofs004d:pushstring "\f"
         getlocal_2
         ifstrictne ofs005c
         pushbyte 4
         jump ofs0068
         ofs005c:jump ofs0066
         pushbyte 5
         jump ofs0066
         ofs0066:pushbyte 5
         ofs0068:kill 2
         lookupswitch ofs0009 5 ofs0006 ofs0006 ofs0006 ofs0006 ofs0006 ofs0009
         end ; code
         end ; body
         end ; method
      }
      
      public static function substitute(param1:String, ... rest) : String
      {
         trait method Qname(PackageNamespace(""),"substitute")
         flag FINAL
         dispid 6
         method
         name null
         flag NEED_REST
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 4
         getlocal_1
         pushnull
         ifne ofs0010
         pushstring ""
         returnvalue
         ofs0010:getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setlocal_3
         getlocal_3
         pushbyte 1
         equals
         dup
         iffalse ofs002a
         pop
         getlocal_2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1270"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"1885"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil")])
         getlex Qname(PackageNamespace(""),"Array")
         istypelate
         ofs002a:iffalse ofs0046
         getlocal_2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1270"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"1885"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil")])
         getlex Qname(PackageNamespace(""),"Array")
         astypelate
         coerce Qname(PackageNamespace(""),"Array")
         dup
         setlocal 4
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setlocal_3
         jump ofs004b
         ofs0046:getlocal_2
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 4
         ofs004b:pushbyte 0
         setlocal 5
         jump ofs007d
         ofs0053:label
         getlocal_1
         findpropstrict Qname(PackageNamespace(""),"RegExp")
         pushstring "\\{"
         getlocal 5
         add
         pushstring "\\}"
         add
         pushstring "g"
         constructprop Qname(PackageNamespace(""),"RegExp") 2
         getlocal 4
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"1270"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),PrivateNamespace(null,"1885"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:StringUtil"),StaticProtectedNs("mx.utils:StringUtil")])
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         coerce_s
         setlocal_1
         inclocal_i 5
         ofs007d:getlocal 5
         getlocal_3
         iflt ofs0053
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function repeat(param1:String, param2:int) : String
      {
         trait method Qname(PackageNamespace(""),"repeat")
         flag FINAL
         dispid 7
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_2
         pushbyte 0
         ifne ofs000c
         pushstring ""
         returnvalue
         ofs000c:getlocal_1
         coerce_s
         setlocal_3
         pushbyte 1
         setlocal 4
         jump ofs001f
         ofs0017:label
         getlocal_3
         getlocal_1
         add
         coerce_s
         setlocal_3
         inclocal_i 4
         ofs001f:getlocal 4
         getlocal_2
         iflt ofs0017
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function restrict(param1:String, param2:String) : String
      {
         trait method Qname(PackageNamespace(""),"restrict")
         flag FINAL
         dispid 8
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 6
         getlocal_2
         pushnull
         ifne ofs000f
         getlocal_1
         returnvalue
         ofs000f:getlocal_2
         pushstring ""
         ifne ofs0019
         pushstring ""
         returnvalue
         ofs0019:newarray 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs0053
         ofs002d:label
         getlocal_1
         getlocal 5
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt") 1
         convert_u
         setlocal 6
         findpropstrict Qname(PrivateNamespace(null,"1270"),"testCharacter")
         getlocal 6
         getlocal_2
         callproperty Qname(PrivateNamespace(null,"1270"),"testCharacter") 2
         iffalse ofs0051
         getlocal_3
         getlocal 6
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0051:inclocal_i 5
         ofs0053:getlocal 5
         getlocal 4
         iflt ofs002d
         getlex Qname(PackageNamespace(""),"String")
         getproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"fromCharCode")
         pushnull
         getlocal_3
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function testCharacter(param1:uint, param2:String) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"1270"),"testCharacter")
         flag FINAL
         dispid 9
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 12
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 9
         pushfalse
         setlocal 11
         pushfalse
         setlocal_3
         pushfalse
         setlocal 4
         pushfalse
         setlocal 5
         pushtrue
         setlocal 6
         pushbyte 0
         convert_u
         setlocal 7
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         convert_i
         dup
         setlocal 8
         pushbyte 0
         ifngt ofs003c
         getlocal_2
         pushbyte 0
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt") 1
         convert_u
         dup
         setlocal 9
         pushbyte 94
         ifne ofs003c
         pushtrue
         setlocal_3
         ofs003c:pushbyte 0
         setlocal 10
         jump ofs00d5
         ofs0044:label
         getlocal_2
         getlocal 10
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt") 1
         convert_u
         setlocal 9
         pushfalse
         setlocal 11
         getlocal 4
         iftrue ofs008f
         getlocal 9
         pushbyte 45
         ifne ofs0068
         pushtrue
         setlocal 5
         jump ofs008b
         ofs0068:getlocal 9
         pushbyte 94
         ifne ofs0079
         getlocal 6
         not
         setlocal 6
         jump ofs008b
         ofs0079:getlocal 9
         pushbyte 92
         ifne ofs0088
         pushtrue
         setlocal 4
         jump ofs008b
         ofs0088:pushtrue
         setlocal 11
         ofs008b:jump ofs0095
         ofs008f:pushtrue
         setlocal 11
         pushfalse
         setlocal 4
         ofs0095:getlocal 11
         iffalse ofs00d3
         getlocal 5
         iffalse ofs00c3
         getlocal 7
         getlocal_1
         lessequals
         dup
         iffalse ofs00af
         pop
         getlocal_1
         getlocal 9
         lessequals
         ofs00af:iffalse ofs00b7
         getlocal 6
         convert_b
         setlocal_3
         ofs00b7:pushfalse
         setlocal 5
         pushbyte 0
         convert_u
         setlocal 7
         jump ofs00d3
         ofs00c3:getlocal_1
         getlocal 9
         ifne ofs00ce
         getlocal 6
         convert_b
         setlocal_3
         ofs00ce:getlocal 9
         convert_u
         setlocal 7
         ofs00d3:inclocal_i 10
         ofs00d5:getlocal 10
         getlocal 8
         iflt ofs0044
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

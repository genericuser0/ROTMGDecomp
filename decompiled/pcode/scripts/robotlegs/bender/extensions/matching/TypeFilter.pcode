package robotlegs.bender.extensions.matching
{
   import flash.utils.getQualifiedClassName;
   
   public class TypeFilter implements ITypeFilter
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected var _allOfTypes:Vector.<Class>;
      
      protected var _anyOfTypes:Vector.<Class>;
      
      protected var _descriptor:String;
      
      protected var _noneOfTypes:Vector.<Class>;
      
      public function TypeFilter(param1:Vector.<Class>, param2:Vector.<Class>, param3:Vector.<Class>)
      {
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Class")>)
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Class")>)
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Class")>)
         returns null
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_1
         not
         dup
         iftrue ofs000f
         pop
         getlocal_2
         not
         ofs000f:dup
         iftrue ofs0017
         pop
         getlocal_3
         not
         ofs0017:iffalse ofs0029
         findpropstrict Qname(PackageNamespace(""),"ArgumentError")
         pushstring "TypeFilter parameters can not be null"
         callproperty Qname(PackageNamespace(""),"ArgumentError") 1
         throw
         ofs0029:getlocal_0
         getlocal_1
         initproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_allOfTypes")
         getlocal_0
         getlocal_2
         initproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_anyOfTypes")
         getlocal_0
         getlocal_3
         initproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_noneOfTypes")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get allOfTypes() : Vector.<Class>
      {
         trait getter Qname(PackageNamespace(""),"allOfTypes")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Class")>)
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_allOfTypes")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get anyOfTypes() : Vector.<Class>
      {
         trait getter Qname(PackageNamespace(""),"anyOfTypes")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Class")>)
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_anyOfTypes")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get descriptor() : String
      {
         trait getter Qname(PackageNamespace(""),"descriptor")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_descriptor")
         coerce_s
         dup
         iftrue ofs0014
         pop
         getlocal_0
         callproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"createDescriptor") 0
         coerce_s
         ofs0014:dup
         setlocal_1
         initproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_descriptor")
         getlocal_1
         kill 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get noneOfTypes() : Vector.<Class>
      {
         trait getter Qname(PackageNamespace(""),"noneOfTypes")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Class")>)
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_noneOfTypes")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function matches(param1:*) : Boolean
      {
         trait method Qname(PackageNamespace(""),"matches")
         dispid 0
         method
         name null
         param null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_allOfTypes")
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setlocal_2
         jump ofs0021
         ofs000f:label
         getlocal_1
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_allOfTypes")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"2094"),ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),PackageNamespace(""),PrivateNamespace(null,"2095"),PackageNamespace("robotlegs.bender.extensions.matching"),PackageInternalNs("robotlegs.bender.extensions.matching"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("robotlegs.bender.extensions.matching:TypeFilter")])
         istypelate
         iftrue ofs0021
         pushfalse
         returnvalue
         ofs0021:getlocal_2
         convert_d
         dup
         decrement
         convert_u
         setlocal_2
         iftrue ofs000f
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_noneOfTypes")
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setlocal_2
         jump ofs004a
         ofs0038:label
         getlocal_1
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_noneOfTypes")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"2094"),ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),PackageNamespace(""),PrivateNamespace(null,"2095"),PackageNamespace("robotlegs.bender.extensions.matching"),PackageInternalNs("robotlegs.bender.extensions.matching"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("robotlegs.bender.extensions.matching:TypeFilter")])
         istypelate
         iffalse ofs004a
         pushfalse
         returnvalue
         ofs004a:getlocal_2
         convert_d
         dup
         decrement
         convert_u
         setlocal_2
         iftrue ofs0038
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_anyOfTypes")
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         equals
         dup
         iffalse ofs007e
         pop
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_allOfTypes")
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         dup
         iftrue ofs007e
         pop
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_noneOfTypes")
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs007e:iffalse ofs0084
         pushtrue
         returnvalue
         ofs0084:getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_anyOfTypes")
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setlocal_2
         jump ofs00a3
         ofs0091:label
         getlocal_1
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"_anyOfTypes")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"2094"),ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),PackageNamespace(""),PrivateNamespace(null,"2095"),PackageNamespace("robotlegs.bender.extensions.matching"),PackageInternalNs("robotlegs.bender.extensions.matching"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("robotlegs.bender.extensions.matching:TypeFilter")])
         istypelate
         iffalse ofs00a3
         pushtrue
         returnvalue
         ofs00a3:getlocal_2
         convert_d
         dup
         decrement
         convert_u
         setlocal_2
         iftrue ofs0091
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function alphabetiseCaseInsensitiveFCQNs(param1:Vector.<Class>) : Vector.<String>
      {
         trait method Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"alphabetiseCaseInsensitiveFCQNs")
         dispid 0
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Class")>)
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         
         body
         maxstack 3
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_2
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"2094"),ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),PackageNamespace("__AS3__.vec"),PackageNamespace(""),PrivateNamespace(null,"2095"),PackageNamespace("robotlegs.bender.extensions.matching"),PackageInternalNs("robotlegs.bender.extensions.matching"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("robotlegs.bender.extensions.matching:TypeFilter")])
         getlex Qname(PackageNamespace(""),"String")
         applytype 1
         pushbyte 0
         construct 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         setlocal_3
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         convert_u
         setlocal 4
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs004c
         ofs0029:label
         findpropstrict Qname(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal_1
         getlocal 5
         getproperty MultinameL([PrivateNamespace(null,"2094"),ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),PackageNamespace(""),PrivateNamespace(null,"2095"),PackageNamespace("robotlegs.bender.extensions.matching"),PackageInternalNs("robotlegs.bender.extensions.matching"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("robotlegs.bender.extensions.matching:TypeFilter")])
         callproperty Qname(PackageNamespace("flash.utils"),"getQualifiedClassName") 1
         coerce_s
         setlocal_2
         getlocal_3
         getlocal_3
         getproperty Qname(PackageNamespace(""),"length")
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"2094"),ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),PackageNamespace(""),PrivateNamespace(null,"2095"),PackageNamespace("robotlegs.bender.extensions.matching"),PackageInternalNs("robotlegs.bender.extensions.matching"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("robotlegs.bender.extensions.matching:TypeFilter")])
         getlocal 5
         increment
         convert_u
         setlocal 5
         ofs004c:getlocal 5
         getlocal 4
         iflt ofs0029
         getlocal_3
         getlocal_0
         getproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"stringSort")
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"sort") 1
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function createDescriptor() : String
      {
         trait method Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"createDescriptor")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"allOfTypes")
         callproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"alphabetiseCaseInsensitiveFCQNs") 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         setlocal_1
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"anyOfTypes")
         callproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"alphabetiseCaseInsensitiveFCQNs") 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         setlocal_2
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"noneOfTypes")
         callproperty Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"alphabetiseCaseInsensitiveFCQNs") 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         setlocal_3
         pushstring "all of: "
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"toString") 0
         add
         pushstring ", any of: "
         add
         getlocal_2
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"toString") 0
         add
         pushstring ", none of: "
         add
         getlocal_3
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"toString") 0
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function stringSort(param1:String, param2:String) : int
      {
         trait method Qname(ProtectedNamespace("robotlegs.bender.extensions.matching:TypeFilter"),"stringSort")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_2
         ifnlt ofs000b
         pushbyte 1
         returnvalue
         ofs000b:pushbyte -1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

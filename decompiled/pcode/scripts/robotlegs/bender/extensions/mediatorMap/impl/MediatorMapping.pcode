package robotlegs.bender.extensions.mediatorMap.impl
{
   import robotlegs.bender.extensions.matching.ITypeFilter;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMapping;
   import robotlegs.bender.extensions.mediatorMap.dsl.IMediatorMappingConfig;
   import robotlegs.bender.framework.impl.MappingConfigValidator;
   
   public class MediatorMapping implements IMediatorMapping, IMediatorMappingConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _locked:Boolean = false;
      
      private var _validator:MappingConfigValidator;
      
      private var _matcher:ITypeFilter;
      
      private var _mediatorClass:Class;
      
      private var _guards:Array;
      
      private var _hooks:Array;
      
      public function MediatorMapping(param1:ITypeFilter, param2:Class)
      {
         method
         name null
         param Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"ITypeFilter")
         param Qname(PackageNamespace(""),"Class")
         returns null
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         newarray 0
         initproperty Qname(PrivateNamespace(null,"1158"),"_guards")
         getlocal_0
         newarray 0
         initproperty Qname(PrivateNamespace(null,"1158"),"_hooks")
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1158"),"_matcher")
         getlocal_0
         getlocal_2
         initproperty Qname(PrivateNamespace(null,"1158"),"_mediatorClass")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get matcher() : ITypeFilter
      {
         trait getter Qname(PackageNamespace(""),"matcher")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"ITypeFilter")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_matcher")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get mediatorClass() : Class
      {
         trait getter Qname(PackageNamespace(""),"mediatorClass")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Class")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_mediatorClass")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get guards() : Array
      {
         trait getter Qname(PackageNamespace(""),"guards")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_guards")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get hooks() : Array
      {
         trait getter Qname(PackageNamespace(""),"hooks")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_hooks")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function withGuards(... rest) : IMediatorMappingConfig
      {
         trait method Qname(PackageNamespace(""),"withGuards")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorMappingConfig")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         coerce_a
         dup
         iffalse ofs0018
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"checkGuards") 1
         coerce_a
         ofs0018:pop
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_guards")
         getproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat")
         pushnull
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         initproperty Qname(PrivateNamespace(null,"1158"),"_guards")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function withHooks(... rest) : IMediatorMappingConfig
      {
         trait method Qname(PackageNamespace(""),"withHooks")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorMappingConfig")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         coerce_a
         dup
         iffalse ofs0018
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"checkHooks") 1
         coerce_a
         ofs0018:pop
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_hooks")
         getproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat")
         pushnull
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         initproperty Qname(PrivateNamespace(null,"1158"),"_hooks")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      function invalidate() : void
      {
         trait method Qname(PackageInternalNs("robotlegs.bender.extensions.mediatorMap.impl"),"invalidate")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         iffalse ofs0016
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         callpropvoid Qname(PackageNamespace(""),"invalidate") 0
         jump ofs001b
         ofs0016:getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1158"),"createValidator") 0
         ofs001b:getlocal_0
         newarray 0
         initproperty Qname(PrivateNamespace(null,"1158"),"_guards")
         getlocal_0
         newarray 0
         initproperty Qname(PrivateNamespace(null,"1158"),"_hooks")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function validate() : void
      {
         trait method Qname(PackageNamespace(""),"validate")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         iftrue ofs0013
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1158"),"createValidator") 0
         jump ofs002f
         ofs0013:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         getproperty Qname(PackageNamespace(""),"valid")
         iftrue ofs002f
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_guards")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_hooks")
         callpropvoid Qname(PackageNamespace(""),"validate") 2
         ofs002f:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function createValidator() : void
      {
         trait method Qname(PrivateNamespace(null,"1158"),"createValidator")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("robotlegs.bender.framework.impl"),"MappingConfigValidator")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_guards")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"slice") 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_hooks")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"slice") 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_matcher")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1158"),"_mediatorClass")
         constructprop Qname(PackageNamespace("robotlegs.bender.framework.impl"),"MappingConfigValidator") 4
         initproperty Qname(PrivateNamespace(null,"1158"),"_validator")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package robotlegs.bender.extensions.commandCenter.impl
{
   import flash.utils.Dictionary;
   import robotlegs.bender.extensions.commandCenter.api.ICommandMapping;
   import robotlegs.bender.extensions.commandCenter.api.ICommandTrigger;
   import robotlegs.bender.extensions.commandCenter.dsl.ICommandMapper;
   import robotlegs.bender.extensions.commandCenter.dsl.ICommandMappingConfig;
   import robotlegs.bender.extensions.commandCenter.dsl.ICommandUnmapper;
   
   public class CommandMapper implements ICommandMapper, ICommandUnmapper
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const _mappings:Dictionary;
      
      private var _trigger:ICommandTrigger;
      
      public function CommandMapper(param1:ICommandTrigger)
      {
         method
         name null
         param Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.api"),"ICommandTrigger")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.utils"),"Dictionary")
         constructprop Qname(PackageNamespace("flash.utils"),"Dictionary") 0
         initproperty Qname(PrivateNamespace(null,"1091"),"_mappings")
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1091"),"_trigger")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function toCommand(param1:Class) : ICommandMappingConfig
      {
         trait method Qname(PackageNamespace(""),"toCommand")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.dsl"),"ICommandMappingConfig")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_mappings")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1091"),PrivateNamespace(null,"2022"),PackageNamespace(""),PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),PackageInternalNs("robotlegs.bender.extensions.commandCenter.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.commandCenter.impl:CommandMapper"),StaticProtectedNs("robotlegs.bender.extensions.commandCenter.impl:CommandMapper")])
         callproperty Qname(PrivateNamespace(null,"1091"),"locked") 1
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.dsl"),"ICommandMappingConfig")
         dup
         iftrue ofs0022
         pop
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"1091"),"createMapping") 1
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.dsl"),"ICommandMappingConfig")
         ofs0022:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function fromCommand(param1:Class) : void
      {
         trait method Qname(PackageNamespace(""),"fromCommand")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_mappings")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1091"),PrivateNamespace(null,"2022"),PackageNamespace(""),PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),PackageInternalNs("robotlegs.bender.extensions.commandCenter.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.commandCenter.impl:CommandMapper"),StaticProtectedNs("robotlegs.bender.extensions.commandCenter.impl:CommandMapper")])
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.api"),"ICommandMapping")
         setlocal_2
         getlocal_2
         coerce_a
         dup
         iffalse ofs0021
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_trigger")
         getlocal_2
         callproperty Qname(Namespace("robotlegs.bender.extensions.commandCenter.api:ICommandTrigger"),"removeMapping") 1
         coerce_a
         ofs0021:pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_mappings")
         getlocal_1
         deleteproperty MultinameL([PrivateNamespace(null,"1091"),PrivateNamespace(null,"2022"),PackageNamespace(""),PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),PackageInternalNs("robotlegs.bender.extensions.commandCenter.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.commandCenter.impl:CommandMapper"),StaticProtectedNs("robotlegs.bender.extensions.commandCenter.impl:CommandMapper")])
         pop
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function fromAll() : void
      {
         trait method Qname(PackageNamespace(""),"fromAll")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.api"),"ICommandMapping")
         setlocal_1
         pushbyte 0
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_mappings")
         coerce_a
         setlocal_3
         jump ofs0032
         ofs0014:label
         getlocal_3
         getlocal_2
         nextvalue
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.api"),"ICommandMapping")
         setlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_trigger")
         getlocal_1
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.api:ICommandTrigger"),"removeMapping") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_mappings")
         getlocal_1
         getproperty Qname(Namespace("robotlegs.bender.extensions.commandCenter.api:ICommandMapping"),"commandClass")
         deleteproperty MultinameL([PrivateNamespace(null,"1091"),PrivateNamespace(null,"2022"),PackageNamespace(""),PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),PackageInternalNs("robotlegs.bender.extensions.commandCenter.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.commandCenter.impl:CommandMapper"),StaticProtectedNs("robotlegs.bender.extensions.commandCenter.impl:CommandMapper")])
         pop
         ofs0032:hasnext2 3 2
         iftrue ofs0014
         kill 3
         kill 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function createMapping(param1:Class) : CommandMapping
      {
         trait method Qname(PrivateNamespace(null,"1091"),"createMapping")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),"CommandMapping")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),"CommandMapping")
         getlocal_1
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),"CommandMapping") 1
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),"CommandMapping")
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_trigger")
         getlocal_2
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.api:ICommandTrigger"),"addMapping") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1091"),"_mappings")
         getlocal_1
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"1091"),PrivateNamespace(null,"2022"),PackageNamespace(""),PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),PackageInternalNs("robotlegs.bender.extensions.commandCenter.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.commandCenter.impl:CommandMapper"),StaticProtectedNs("robotlegs.bender.extensions.commandCenter.impl:CommandMapper")])
         getlocal_2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function locked(param1:CommandMapping) : CommandMapping
      {
         trait method Qname(PrivateNamespace(null,"1091"),"locked")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),"CommandMapping")
         returns Qname(PackageNamespace("robotlegs.bender.extensions.commandCenter.impl"),"CommandMapping")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         iftrue ofs0009
         pushnull
         returnvalue
         ofs0009:getlocal_1
         callpropvoid Qname(PackageInternalNs("robotlegs.bender.extensions.commandCenter.impl"),"invalidate") 0
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

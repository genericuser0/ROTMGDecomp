package robotlegs.bender.extensions.modularity.impl
{
   import flash.events.Event;
   import robotlegs.bender.framework.api.IContext;
   
   public class ModularContextEvent extends Event
   {
      
      public static const CONTEXT_ADD:String = "contextAdd";
      
      public static const CONTEXT_REMOVE:String = "contextRemove";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"CONTEXT_ADD")
         pushstring "contextAdd"
         initproperty Qname(PackageNamespace(""),"CONTEXT_ADD")
         findproperty Qname(PackageNamespace(""),"CONTEXT_REMOVE")
         pushstring "contextRemove"
         initproperty Qname(PackageNamespace(""),"CONTEXT_REMOVE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _context:IContext;
      
      public function ModularContextEvent(param1:String, param2:IContext)
      {
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace("robotlegs.bender.framework.api"),"IContext")
         returns null
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         pushtrue
         pushtrue
         constructsuper 3
         getlocal_0
         getlocal_2
         initproperty Qname(PrivateNamespace(null,"890"),"_context")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get context() : IContext
      {
         trait getter Qname(PackageNamespace(""),"context")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("robotlegs.bender.framework.api"),"IContext")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"890"),"_context")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function clone() : Event
      {
         trait method Qname(PackageNamespace(""),"clone")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("flash.events"),"Event")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.modularity.impl"),"ModularContextEvent")
         getlex Qname(PackageNamespace(""),"type")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.modularity.impl"),"ModularContextEvent") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"formatToString")
         pushstring "ModularContextEvent"
         pushstring "context"
         callproperty Qname(PackageNamespace(""),"formatToString") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package org.hamcrest.object
{
   import org.hamcrest.BaseMatcher;
   import org.hamcrest.Description;
   
   public class IsEqualMatcher extends BaseMatcher
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _value:Object;
      
      public function IsEqualMatcher(param1:Object)
      {
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         findproperty Qname(PrivateNamespace(null,"1153"),"_value")
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1153"),"_value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function areEqual(param1:Object, param2:Object) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"1153"),"areEqual")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"isNaN")
         getlocal_1
         getlex Qname(PackageNamespace(""),"Number")
         astypelate
         callproperty Qname(PackageNamespace(""),"isNaN") 1
         iffalse ofs0021
         findpropstrict Qname(PackageNamespace(""),"isNaN")
         getlocal_2
         getlex Qname(PackageNamespace(""),"Number")
         astypelate
         callproperty Qname(PackageNamespace(""),"isNaN") 1
         returnvalue
         ofs0021:getlocal_1
         pushnull
         ifne ofs002b
         getlocal_2
         pushnull
         equals
         returnvalue
         ofs002b:getlocal_1
         getlex Qname(PackageNamespace(""),"Array")
         istypelate
         iffalse ofs004e
         getlocal_2
         getlex Qname(PackageNamespace(""),"Array")
         istypelate
         dup
         iffalse ofs004d
         pop
         findpropstrict Qname(PrivateNamespace(null,"1153"),"areArraysEqual")
         getlocal_1
         getlex Qname(PackageNamespace(""),"Array")
         astypelate
         getlocal_2
         getlex Qname(PackageNamespace(""),"Array")
         astypelate
         callproperty Qname(PrivateNamespace(null,"1153"),"areArraysEqual") 2
         convert_b
         ofs004d:returnvalue
         ofs004e:getlocal_1
         getlocal_2
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function areArraysEqual(param1:Array, param2:Array) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"1153"),"areArraysEqual")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PrivateNamespace(null,"1153"),"areArraysLengthsEqual")
         getlocal_1
         getlocal_2
         callproperty Qname(PrivateNamespace(null,"1153"),"areArraysLengthsEqual") 2
         convert_b
         dup
         iffalse ofs001c
         pop
         findpropstrict Qname(PrivateNamespace(null,"1153"),"areArrayElementsEqual")
         getlocal_1
         getlocal_2
         callproperty Qname(PrivateNamespace(null,"1153"),"areArrayElementsEqual") 2
         convert_b
         ofs001c:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function describeTo(param1:Description) : void
      {
         trait method Qname(PackageNamespace(""),"describeTo")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace("org.hamcrest"),"Description")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlex Qname(PrivateNamespace(null,"1153"),"_value")
         callpropvoid Qname(Namespace("org.hamcrest:Description"),"appendValue") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function areArrayElementsEqual(param1:Array, param2:Array) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"1153"),"areArrayElementsEqual")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         setlocal_3
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         jump ofs002c
         ofs0010:label
         findpropstrict Qname(PrivateNamespace(null,"1153"),"areEqual")
         getlocal_1
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"1153"),PackageNamespace(""),PrivateNamespace(null,"2092"),PackageNamespace("org.hamcrest.object"),PackageInternalNs("org.hamcrest.object"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.hamcrest.object:IsEqualMatcher"),StaticProtectedNs("org.hamcrest.object:IsEqualMatcher"),StaticProtectedNs("org.hamcrest:BaseMatcher"),StaticProtectedNs("Object")])
         getlocal_2
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"1153"),PackageNamespace(""),PrivateNamespace(null,"2092"),PackageNamespace("org.hamcrest.object"),PackageInternalNs("org.hamcrest.object"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.hamcrest.object:IsEqualMatcher"),StaticProtectedNs("org.hamcrest.object:IsEqualMatcher"),StaticProtectedNs("org.hamcrest:BaseMatcher"),StaticProtectedNs("Object")])
         callproperty Qname(PrivateNamespace(null,"1153"),"areEqual") 2
         iftrue ofs002a
         pushfalse
         returnvalue
         ofs002a:inclocal_i 3
         ofs002c:getlocal_3
         getlocal 4
         iflt ofs0010
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function matches(param1:Object) : Boolean
      {
         trait method Qname(PackageNamespace(""),"matches")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PrivateNamespace(null,"1153"),"areEqual")
         getlocal_1
         getlex Qname(PrivateNamespace(null,"1153"),"_value")
         callproperty Qname(PrivateNamespace(null,"1153"),"areEqual") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function areArraysLengthsEqual(param1:Array, param2:Array) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"1153"),"areArraysLengthsEqual")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

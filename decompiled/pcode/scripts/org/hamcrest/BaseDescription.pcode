package org.hamcrest
{
   import flash.errors.IllegalOperationError;
   
   public class BaseDescription implements Description
   {
      
      private static const charToActionScriptSyntaxMap:Object;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 9
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"1150"),"charToActionScriptSyntaxMap")
         pushstring "\""
         pushstring "\\\""
         pushstring "\n"
         pushstring "\\n"
         pushstring "\r"
         pushstring "\\r"
         pushstring "\t"
         pushstring "\\t"
         newobject 4
         initproperty Qname(PrivateNamespace(null,"1150"),"charToActionScriptSyntaxMap")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function BaseDescription()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function appendDescriptionOf(param1:SelfDescribing) : Description
      {
         trait method Qname(PackageNamespace(""),"appendDescriptionOf")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("org.hamcrest"),"SelfDescribing")
         returns Qname(PackageNamespace("org.hamcrest"),"Description")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_0
         callpropvoid Qname(Namespace("org.hamcrest:SelfDescribing"),"describeTo") 1
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function toActionScriptSyntax(param1:Object) : void
      {
         trait method Qname(PrivateNamespace(null,"1150"),"toActionScriptSyntax")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"String")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"String") 1
         pushstring ""
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         getlex Qname(PrivateNamespace(null,"1150"),"charToActionScriptSyntax")
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"forEach") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function toSelfDescribingValue(param1:Object, param2:int = 0, param3:Array = null) : SelfDescribingValue
      {
         trait method Qname(PrivateNamespace(null,"1150"),"toSelfDescribingValue")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Array")
         optional 0
         optional null
         returns Qname(PrivateNamespace(null,"14"),"SelfDescribingValue")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PrivateNamespace(null,"14"),"SelfDescribingValue")
         getlocal_1
         constructprop Qname(PrivateNamespace(null,"14"),"SelfDescribingValue") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function appendMismatchOf(param1:Matcher, param2:*) : Description
      {
         trait method Qname(PackageNamespace(""),"appendMismatchOf")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("org.hamcrest"),"Matcher")
         param null
         returns Qname(PackageNamespace("org.hamcrest"),"Description")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_2
         getlocal_0
         callpropvoid Qname(Namespace("org.hamcrest:Matcher"),"describeMismatch") 2
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function appendText(param1:String) : Description
      {
         trait method Qname(PackageNamespace(""),"appendText")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("org.hamcrest"),"Description")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_1
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function appendValueList(param1:String, param2:String, param3:String, param4:Array) : Description
      {
         trait method Qname(PackageNamespace(""),"appendValueList")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace("org.hamcrest"),"Description")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"appendList")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         getlex Qname(PrivateNamespace(null,"1150"),"toSelfDescribingValue")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"map") 1
         callproperty Qname(PackageNamespace(""),"appendList") 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function appendValue(param1:Object) : Description
      {
         trait method Qname(PackageNamespace(""),"appendValue")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace("org.hamcrest"),"Description")
         
         body
         maxstack 6
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs0017
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring "null"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         jump ofs011d
         ofs0017:getlocal_1
         getlex Qname(PackageNamespace(""),"String")
         istypelate
         iffalse ofs0041
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring "\""
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(PrivateNamespace(null,"1150"),"toActionScriptSyntax")
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1150"),"toActionScriptSyntax") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring "\""
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         jump ofs011d
         ofs0041:getlocal_1
         getlex Qname(PackageNamespace(""),"Number")
         istypelate
         iffalse ofs006b
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring "<"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_1
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring ">"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         jump ofs011d
         ofs006b:getlocal_1
         getlex Qname(PackageNamespace(""),"int")
         istypelate
         iffalse ofs0095
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring "<"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_1
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring ">"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         jump ofs011d
         ofs0095:getlocal_1
         getlex Qname(PackageNamespace(""),"uint")
         istypelate
         iffalse ofs00bf
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring "<"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_1
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring ">"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         jump ofs011d
         ofs00bf:getlocal_1
         getlex Qname(PackageNamespace(""),"Array")
         istypelate
         iffalse ofs00e1
         findpropstrict Qname(PackageNamespace(""),"appendValueList")
         pushstring "["
         pushstring ","
         pushstring "]"
         getlocal_1
         getlex Qname(PackageNamespace(""),"Array")
         astypelate
         callpropvoid Qname(PackageNamespace(""),"appendValueList") 4
         jump ofs011d
         ofs00e1:getlocal_1
         getlex Qname(PackageNamespace(""),"XML")
         istypelate
         iffalse ofs00ff
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         findpropstrict Qname(PackageNamespace(""),"XML")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"XML") 1
         callproperty Multiname("toXMLString",[PrivateNamespace(null,"1150"),PackageNamespace(""),ProtectedNamespace("org.hamcrest:BaseDescription"),PackageNamespace("org.hamcrest"),PrivateNamespace(null,"14"),PackageInternalNs("org.hamcrest"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("org.hamcrest:BaseDescription"),StaticProtectedNs("Object")]) 0
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         jump ofs011d
         ofs00ff:findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring "<"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_1
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         pushstring ">"
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         ofs011d:getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function appendList(param1:String, param2:String, param3:String, param4:Array) : Description
      {
         trait method Qname(PackageNamespace(""),"appendList")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace("org.hamcrest"),"Description")
         
         body
         maxstack 3
         localcount 9
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace(""),"Object")
         setlocal 6
         pushfalse
         setlocal 5
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_1
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         pushbyte 0
         setlocal 7
         getlocal 4
         coerce_a
         setlocal 8
         jump ofs005e
         ofs001f:label
         getlocal 8
         getlocal 7
         nextvalue
         coerce Qname(PackageNamespace(""),"Object")
         setlocal 6
         getlocal 5
         iffalse ofs0037
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_2
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         ofs0037:getlocal 6
         getlex Qname(PackageNamespace("org.hamcrest"),"SelfDescribing")
         istypelate
         iffalse ofs0052
         findpropstrict Qname(PackageNamespace(""),"appendDescriptionOf")
         getlocal 6
         getlex Qname(PackageNamespace("org.hamcrest"),"SelfDescribing")
         astypelate
         callpropvoid Qname(PackageNamespace(""),"appendDescriptionOf") 1
         jump ofs005b
         ofs0052:findpropstrict Qname(PackageNamespace(""),"appendValue")
         getlocal 6
         callpropvoid Qname(PackageNamespace(""),"appendValue") 1
         ofs005b:pushtrue
         setlocal 5
         ofs005e:hasnext2 8 7
         iftrue ofs001f
         kill 8
         kill 7
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlocal_3
         callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function append(param1:Object) : void
      {
         trait method Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.errors"),"IllegalOperationError")
         pushstring "BaseDescription#append is abstract and must be overriden by a subclass"
         constructprop Qname(PackageNamespace("flash.errors"),"IllegalOperationError") 1
         throw
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.errors"),"IllegalOperationError")
         pushstring "BaseDescription#toString is abstract and must be overriden by a subclass"
         constructprop Qname(PackageNamespace("flash.errors"),"IllegalOperationError") 1
         throw
         end ; code
         end ; body
         end ; method
      }
      
      private function charToActionScriptSyntax(param1:String, param2:int = 0, param3:Array = null) : void
      {
         trait method Qname(PrivateNamespace(null,"1150"),"charToActionScriptSyntax")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Array")
         optional 0
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append")
         getlex Qname(PrivateNamespace(null,"1150"),"charToActionScriptSyntaxMap")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1150"),PackageNamespace(""),ProtectedNamespace("org.hamcrest:BaseDescription"),PackageNamespace("org.hamcrest"),PrivateNamespace(null,"14"),PackageInternalNs("org.hamcrest"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("org.hamcrest:BaseDescription"),StaticProtectedNs("Object")])
         coerce Qname(PackageNamespace(""),"Object")
         dup
         iftrue ofs0019
         pop
         getlocal_1
         coerce Qname(PackageNamespace(""),"Object")
         ofs0019:callpropvoid Qname(ProtectedNamespace("org.hamcrest:BaseDescription"),"append") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

import org.hamcrest.Description;
import org.hamcrest.SelfDescribing;

class SelfDescribingValue implements SelfDescribing
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private var _value:Object;
   
   function SelfDescribingValue(param1:Object)
   {
      method
      name null
      param Qname(PackageNamespace(""),"Object")
      returns null
      
      body
      maxstack 2
      localcount 2
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      findproperty Qname(PrivateNamespace(null,"1151"),"_value")
      getlocal_1
      initproperty Qname(PrivateNamespace(null,"1151"),"_value")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function describeTo(param1:Description) : void
   {
      trait method Qname(PackageNamespace(""),"describeTo")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("org.hamcrest"),"Description")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_1
      getlex Qname(PrivateNamespace(null,"1151"),"_value")
      callpropvoid Qname(Namespace("org.hamcrest:Description"),"appendValue") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

package org.swiftsuspenders.typedescriptions
{
   import flash.utils.Dictionary;
   import flash.utils.getQualifiedClassName;
   import org.swiftsuspenders.Injector;
   import org.swiftsuspenders.dependencyproviders.DependencyProvider;
   import org.swiftsuspenders.errors.InjectorMissingMappingError;
   import org.swiftsuspenders.utils.SsInternal;
   
   public class PropertyInjectionPoint extends InjectionPoint
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _propertyName:String;
      
      private var _mappingId:String;
      
      private var _optional:Boolean;
      
      public function PropertyInjectionPoint(param1:String, param2:String, param3:Boolean, param4:Dictionary)
      {
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace("flash.utils"),"Dictionary")
         returns null
         
         body
         maxstack 2
         localcount 5
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_2
         initproperty Qname(PrivateNamespace(null,"916"),"_propertyName")
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"916"),"_mappingId")
         getlocal_0
         getlocal_3
         initproperty Qname(PrivateNamespace(null,"916"),"_optional")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"injectParameters")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function applyInjection(param1:Object, param2:Class, param3:Injector) : void
      {
         trait method Qname(PackageNamespace(""),"applyInjection")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Class")
         param Qname(PackageNamespace("org.swiftsuspenders"),"Injector")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_3
         dup
         setlocal 5
         getlex Qname(PackageNamespace("org.swiftsuspenders.utils"),"SsInternal")
         coerce Qname(PackageNamespace(""),"Namespace")
         getproperty RTQname("getProvider")
         getlocal 5
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"916"),"_mappingId")
         call 1
         kill 5
         coerce Qname(PackageNamespace("org.swiftsuspenders.dependencyproviders"),"DependencyProvider")
         dup
         setlocal 4
         iftrue ofs0065
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"916"),"_optional")
         iffalse ofs002e
         returnvoid
         ofs002e:findpropstrict Qname(PackageNamespace("org.swiftsuspenders.errors"),"InjectorMissingMappingError")
         pushstring "Injector is missing a mapping to handle injection into property \""
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"916"),"_propertyName")
         add
         pushstring "\" of object \""
         add
         getlocal_1
         add
         pushstring "\" with type \""
         add
         findpropstrict Qname(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal_2
         callproperty Qname(PackageNamespace("flash.utils"),"getQualifiedClassName") 1
         add
         pushstring "\". Target dependency: \""
         add
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"916"),"_mappingId")
         add
         pushstring "\""
         add
         constructprop Qname(PackageNamespace("org.swiftsuspenders.errors"),"InjectorMissingMappingError") 1
         throw
         ofs0065:getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"916"),"_propertyName")
         getlocal 4
         getlocal_2
         getlocal_3
         getlex Qname(PackageNamespace(""),"injectParameters")
         callproperty Qname(Namespace("org.swiftsuspenders.dependencyproviders:DependencyProvider"),"apply") 3
         setproperty MultinameL([PrivateNamespace(null,"916"),PackageNamespace(""),PrivateNamespace(null,"1858"),PackageNamespace("org.swiftsuspenders.typedescriptions"),PackageInternalNs("org.swiftsuspenders.typedescriptions"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.swiftsuspenders.typedescriptions:PropertyInjectionPoint"),StaticProtectedNs("org.swiftsuspenders.typedescriptions:PropertyInjectionPoint"),StaticProtectedNs("org.swiftsuspenders.typedescriptions:InjectionPoint")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

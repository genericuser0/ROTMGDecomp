package robotlegs.bender.extensions.mediatorMap.impl
{
   import flash.display.DisplayObject;
   import flash.utils.Dictionary;
   import robotlegs.bender.extensions.matching.ITypeMatcher;
   import robotlegs.bender.extensions.matching.TypeMatcher;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorFactory;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorViewHandler;
   import robotlegs.bender.extensions.mediatorMap.dsl.IMediatorMapper;
   import robotlegs.bender.extensions.mediatorMap.dsl.IMediatorUnmapper;
   import robotlegs.bender.extensions.viewManager.api.IViewHandler;
   
   public class MediatorMap implements IMediatorMap, IViewHandler
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const _mappers:Dictionary;
      
      private var _handler:IMediatorViewHandler;
      
      private var _factory:IMediatorFactory;
      
      private const NULL_UNMAPPER:IMediatorUnmapper;
      
      public function MediatorMap(param1:IMediatorFactory, param2:IMediatorViewHandler = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.api"),"IMediatorFactory")
         param Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.api"),"IMediatorViewHandler")
         optional null
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.utils"),"Dictionary")
         constructprop Qname(PackageNamespace("flash.utils"),"Dictionary") 0
         initproperty Qname(PrivateNamespace(null,"900"),"_mappers")
         getlocal_0
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),"NullMediatorUnmapper")
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),"NullMediatorUnmapper") 0
         initproperty Qname(PrivateNamespace(null,"900"),"NULL_UNMAPPER")
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"900"),"_factory")
         getlocal_0
         getlocal_2
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.api"),"IMediatorViewHandler")
         dup
         iftrue ofs0039
         pop
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),"MediatorViewHandler")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_factory")
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),"MediatorViewHandler") 1
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.api"),"IMediatorViewHandler")
         ofs0039:initproperty Qname(PrivateNamespace(null,"900"),"_handler")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function mapMatcher(param1:ITypeMatcher) : IMediatorMapper
      {
         trait method Qname(PackageNamespace(""),"mapMatcher")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"ITypeMatcher")
         returns Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorMapper")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_mappers")
         getlocal_1
         callproperty Qname(Namespace("robotlegs.bender.extensions.matching:ITypeMatcher"),"createTypeFilter") 0
         getproperty Qname(Namespace("robotlegs.bender.extensions.matching:ITypeFilter"),"descriptor")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_mappers")
         getlocal_1
         callproperty Qname(Namespace("robotlegs.bender.extensions.matching:ITypeMatcher"),"createTypeFilter") 0
         getproperty Qname(Namespace("robotlegs.bender.extensions.matching:ITypeFilter"),"descriptor")
         getproperty MultinameL([PrivateNamespace(null,"900"),PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),PrivateNamespace(null,"1849"),PackageNamespace(""),PackageInternalNs("robotlegs.bender.extensions.mediatorMap.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap"),StaticProtectedNs("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap")])
         coerce_a
         dup
         iftrue ofs002c
         pop
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"900"),"createMapper") 1
         coerce_a
         ofs002c:dup
         setlocal_2
         setproperty MultinameL([PrivateNamespace(null,"900"),PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),PrivateNamespace(null,"1849"),PackageNamespace(""),PackageInternalNs("robotlegs.bender.extensions.mediatorMap.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap"),StaticProtectedNs("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap")])
         getlocal_2
         kill 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function map(param1:Class) : IMediatorMapper
      {
         trait method Qname(PackageNamespace(""),"map")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorMapper")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"TypeMatcher")
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"TypeMatcher") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"allOf") 1
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"ITypeMatcher")
         setlocal_2
         getlocal_0
         getlocal_2
         callproperty Qname(PackageNamespace(""),"mapMatcher") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function unmapMatcher(param1:ITypeMatcher) : IMediatorUnmapper
      {
         trait method Qname(PackageNamespace(""),"unmapMatcher")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"ITypeMatcher")
         returns Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorUnmapper")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_mappers")
         getlocal_1
         callproperty Qname(Namespace("robotlegs.bender.extensions.matching:ITypeMatcher"),"createTypeFilter") 0
         getproperty Qname(Namespace("robotlegs.bender.extensions.matching:ITypeFilter"),"descriptor")
         getproperty MultinameL([PrivateNamespace(null,"900"),PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),PrivateNamespace(null,"1849"),PackageNamespace(""),PackageInternalNs("robotlegs.bender.extensions.mediatorMap.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap"),StaticProtectedNs("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap")])
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorUnmapper")
         dup
         iftrue ofs0020
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"NULL_UNMAPPER")
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorUnmapper")
         ofs0020:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function unmap(param1:Class) : IMediatorUnmapper
      {
         trait method Qname(PackageNamespace(""),"unmap")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorUnmapper")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"TypeMatcher")
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"TypeMatcher") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"allOf") 1
         coerce Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"ITypeMatcher")
         setlocal_2
         getlocal_0
         getlocal_2
         callproperty Qname(PackageNamespace(""),"unmapMatcher") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function handleView(param1:DisplayObject, param2:Class) : void
      {
         trait method Qname(PackageNamespace(""),"handleView")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.display"),"DisplayObject")
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_handler")
         getlocal_1
         getlocal_2
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.viewManager.api:IViewHandler"),"handleView") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function mediate(param1:Object) : void
      {
         trait method Qname(PackageNamespace(""),"mediate")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Multiname("constructor",[PrivateNamespace(null,"900"),PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),PrivateNamespace(null,"1849"),PackageNamespace(""),PackageInternalNs("robotlegs.bender.extensions.mediatorMap.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap"),StaticProtectedNs("robotlegs.bender.extensions.mediatorMap.impl:MediatorMap")])
         getlex Qname(PackageNamespace(""),"Class")
         astypelate
         coerce Qname(PackageNamespace(""),"Class")
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_handler")
         getlocal_1
         getlocal_2
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorViewHandler"),"handleItem") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function unmediate(param1:Object) : void
      {
         trait method Qname(PackageNamespace(""),"unmediate")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_factory")
         getlocal_1
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorFactory"),"removeMediators") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function createMapper(param1:ITypeMatcher, param2:Class = null) : IMediatorMapper
      {
         trait method Qname(PrivateNamespace(null,"900"),"createMapper")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("robotlegs.bender.extensions.matching"),"ITypeMatcher")
         param Qname(PackageNamespace(""),"Class")
         optional null
         returns Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.dsl"),"IMediatorMapper")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),"MediatorMapper")
         getlocal_1
         callproperty Qname(Namespace("robotlegs.bender.extensions.matching:ITypeMatcher"),"createTypeFilter") 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"900"),"_handler")
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.mediatorMap.impl"),"MediatorMapper") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package robotlegs.bender.extensions.commandCenter.impl
{
   import robotlegs.bender.extensions.commandCenter.dsl.ICommandUnmapper;
   
   public class NullCommandUnmapper implements ICommandUnmapper
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function NullCommandUnmapper()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function fromCommand(param1:Class) : void
      {
         trait method Qname(PackageNamespace(""),"fromCommand")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function fromAll() : void
      {
         trait method Qname(PackageNamespace(""),"fromAll")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package robotlegs.bender.extensions.logging.impl
{
   import robotlegs.bender.framework.api.IContext;
   import robotlegs.bender.framework.api.ILogTarget;
   import robotlegs.bender.framework.api.LogLevel;
   
   public class TraceLogTarget implements ILogTarget
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const _messageParser:LogMessageParser;
      
      private var _context:IContext;
      
      public function TraceLogTarget(param1:IContext)
      {
         method
         name null
         param Qname(PackageNamespace("robotlegs.bender.framework.api"),"IContext")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("robotlegs.bender.extensions.logging.impl"),"LogMessageParser")
         constructprop Qname(PackageNamespace("robotlegs.bender.extensions.logging.impl"),"LogMessageParser") 0
         initproperty Qname(PrivateNamespace(null,"903"),"_messageParser")
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"903"),"_context")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function log(param1:Object, param2:uint, param3:int, param4:String, param5:Array = null) : void
      {
         trait method Qname(PackageNamespace(""),"log")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Array")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"trace")
         getlocal_3
         pushstring " "
         add
         getlex Qname(PackageNamespace("robotlegs.bender.framework.api"),"LogLevel")
         getproperty Qname(PackageNamespace(""),"NAME")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"903"),PackageNamespace("robotlegs.bender.extensions.logging.impl"),PackageNamespace(""),PrivateNamespace(null,"1852"),PackageInternalNs("robotlegs.bender.extensions.logging.impl"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("robotlegs.bender.extensions.logging.impl:TraceLogTarget"),StaticProtectedNs("robotlegs.bender.extensions.logging.impl:TraceLogTarget")])
         add
         pushstring " "
         add
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"903"),"_context")
         add
         pushstring " "
         add
         getlocal_1
         add
         pushstring " - "
         add
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"903"),"_messageParser")
         getlocal 4
         getlocal 5
         callproperty Qname(PackageNamespace(""),"parseMessage") 2
         add
         callpropvoid Qname(PackageNamespace(""),"trace") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.lib.tasks
{
   public class TaskMonitor
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var tasks:Vector.<Task>;
      
      public function TaskMonitor()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"504"),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1534"),PackageNamespace(""),PackageNamespace("kabam.lib.tasks"),PackageInternalNs("kabam.lib.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.tasks:TaskMonitor"),StaticProtectedNs("kabam.lib.tasks:TaskMonitor")])
         getlex Qname(PackageNamespace("kabam.lib.tasks"),"Task")
         applytype 1
         pushbyte 0
         construct 1
         initproperty Qname(PrivateNamespace(null,"504"),"tasks")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function add(param1:Task) : void
      {
         trait method Qname(PackageNamespace(""),"add")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.lib.tasks"),"Task")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"504"),"tasks")
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_1
         getproperty Qname(Namespace("kabam.lib.tasks:Task"),"finished")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"504"),"onTaskFinished")
         callpropvoid Qname(PackageNamespace(""),"addOnce") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function has(param1:Task) : Boolean
      {
         trait method Qname(PackageNamespace(""),"has")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.lib.tasks"),"Task")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"504"),"tasks")
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         pushbyte -1
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function onTaskFinished(param1:Task, param2:Boolean, param3:String = "") : void
      {
         trait method Qname(PrivateNamespace(null,"504"),"onTaskFinished")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("kabam.lib.tasks"),"Task")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"String")
         optional ""
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"504"),"tasks")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"504"),"tasks")
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         pushbyte 1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"splice") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.lib.tasks
{
   public class TaskGroup extends BaseTask
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var tasks:Vector.<BaseTask>;
      
      private var pending:int;
      
      public function TaskGroup()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlex Multiname("Vector",[PrivateNamespace(null,"1071"),PrivateNamespace(null,"2013"),PackageNamespace(""),PackageNamespace("kabam.lib.tasks"),PackageInternalNs("kabam.lib.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.tasks:TaskGroup"),StaticProtectedNs("kabam.lib.tasks:TaskGroup"),StaticProtectedNs("kabam.lib.tasks:BaseTask"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.lib.tasks"),"BaseTask")
         applytype 1
         construct 0
         initproperty Qname(PrivateNamespace(null,"1071"),"tasks")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function add(param1:BaseTask) : void
      {
         trait method Qname(PackageNamespace(""),"add")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.lib.tasks"),"BaseTask")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"tasks")
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function startTask() : void
      {
         trait method Qname(ProtectedNamespace("kabam.lib.tasks:TaskGroup"),"startTask")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"tasks")
         getproperty Qname(PackageNamespace(""),"length")
         initproperty Qname(PrivateNamespace(null,"1071"),"pending")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"pending")
         pushbyte 0
         ifngt ofs0020
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"1071"),"startAllTasks") 0
         jump ofs0028
         ofs0020:findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         pushtrue
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 1
         ofs0028:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function onReset() : void
      {
         trait method Qname(ProtectedNamespace("kabam.lib.tasks:TaskGroup"),"onReset")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.lib.tasks"),"BaseTask")
         setlocal_1
         pushbyte 0
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"tasks")
         coerce_a
         setlocal_3
         jump ofs0021
         ofs0014:label
         getlocal_3
         getlocal_2
         nextvalue
         coerce Qname(PackageNamespace("kabam.lib.tasks"),"BaseTask")
         setlocal_1
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"reset") 0
         ofs0021:hasnext2 3 2
         iftrue ofs0014
         kill 3
         kill 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function startAllTasks() : void
      {
         trait method Qname(PrivateNamespace(null,"1071"),"startAllTasks")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"pending")
         convert_i
         setlocal_1
         jump ofs002e
         ofs000c:label
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"tasks")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1071"),PrivateNamespace(null,"2013"),PackageNamespace(""),PackageNamespace("kabam.lib.tasks"),PackageInternalNs("kabam.lib.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.tasks:TaskGroup"),StaticProtectedNs("kabam.lib.tasks:TaskGroup"),StaticProtectedNs("kabam.lib.tasks:BaseTask")])
         getproperty Qname(PackageNamespace(""),"lastly")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"onTaskFinished")
         callpropvoid Qname(PackageNamespace(""),"addOnce") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"tasks")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1071"),PrivateNamespace(null,"2013"),PackageNamespace(""),PackageNamespace("kabam.lib.tasks"),PackageInternalNs("kabam.lib.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.lib.tasks:TaskGroup"),StaticProtectedNs("kabam.lib.tasks:TaskGroup"),StaticProtectedNs("kabam.lib.tasks:BaseTask")])
         callpropvoid Qname(PackageNamespace(""),"start") 0
         ofs002e:getlocal_1
         dup
         decrement_i
         setlocal_1
         iftrue ofs000c
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onTaskFinished(param1:BaseTask, param2:Boolean, param3:String) : void
      {
         trait method Qname(PrivateNamespace(null,"1071"),"onTaskFinished")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.lib.tasks"),"BaseTask")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_2
         iffalse ofs002f
         getlocal_0
         dup
         setlocal 4
         getproperty Qname(PrivateNamespace(null,"1071"),"pending")
         decrement_i
         dup
         setlocal 5
         getlocal 4
         getlocal 5
         setproperty Qname(PrivateNamespace(null,"1071"),"pending")
         kill 5
         kill 4
         pushbyte 0
         ifne ofs002b
         findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         pushtrue
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 1
         ofs002b:jump ofs0038
         ofs002f:findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         pushfalse
         getlocal_3
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 2
         ofs0038:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushstring "[TaskGroup("
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1071"),"tasks")
         pushstring ","
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         add
         pushstring ")]"
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

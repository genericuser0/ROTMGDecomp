package kabam.lib.console.controller
{
   import kabam.lib.console.model.Console;
   import kabam.lib.console.vo.ConsoleAction;
   import org.osflash.signals.Signal;
   
   public class RegisterConsoleActionCommand
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var console:Console;
      
      [Inject]
      public var action:ConsoleAction;
      
      [Inject]
      public var trigger:Signal;
      
      public function RegisterConsoleActionCommand()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function execute() : void
      {
         trait method Qname(PackageNamespace(""),"execute")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"console")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"action")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"trigger")
         callpropvoid Qname(PackageNamespace(""),"register") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.lib.math.easing
{
   public class Back
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Back()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function easeIn(param1:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"easeIn")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_1
         multiply
         pushdouble 2.70158
         getlocal_1
         multiply
         pushdouble 1.70158
         subtract
         multiply
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function easeOut(param1:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"easeOut")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         decrement
         dup
         setlocal_2
         convert_d
         setlocal_1
         getlocal_2
         kill 2
         getlocal_1
         multiply
         pushdouble 2.70158
         getlocal_1
         multiply
         pushdouble 1.70158
         add
         multiply
         pushbyte 1
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function easeInOut(param1:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"easeInOut")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushbyte 2
         multiply
         dup
         setlocal_2
         convert_d
         setlocal_1
         getlocal_2
         kill 2
         pushbyte 1
         ifnlt ofs0024
         pushdouble 0.5
         getlocal_1
         multiply
         getlocal_1
         multiply
         pushdouble 3.5949095
         getlocal_1
         multiply
         pushdouble 2.5949095
         subtract
         multiply
         returnvalue
         ofs0024:pushdouble 0.5
         getlocal_1
         pushbyte 2
         subtract
         dup
         setlocal_2
         convert_d
         setlocal_1
         getlocal_2
         kill 2
         getlocal_1
         multiply
         pushdouble 3.5949095
         getlocal_1
         multiply
         pushdouble 2.5949095
         add
         multiply
         pushbyte 2
         add
         multiply
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

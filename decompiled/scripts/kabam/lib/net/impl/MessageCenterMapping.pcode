package kabam.lib.net.impl
{
   import kabam.lib.net.api.MessageHandlerProxy;
   import kabam.lib.net.api.MessageMapping;
   import org.swiftsuspenders.Injector;
   
   public class MessageCenterMapping implements MessageMapping
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const nullHandler:NullHandlerProxy;
      
      private var id:int;
      
      private var injector:Injector;
      
      private var messageType:Class;
      
      private var population:int = 1;
      
      private var handler:MessageHandlerProxy;
      
      public function MessageCenterMapping()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PrivateNamespace(null,"885"),"NullHandlerProxy")
         constructprop Qname(PrivateNamespace(null,"885"),"NullHandlerProxy") 0
         initproperty Qname(PrivateNamespace(null,"884"),"nullHandler")
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"884"),"nullHandler")
         initproperty Qname(PrivateNamespace(null,"884"),"handler")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setID(param1:int) : MessageMapping
      {
         trait method Qname(PackageNamespace(""),"setID")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.lib.net.api"),"MessageMapping")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"884"),"id")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setInjector(param1:Injector) : MessageCenterMapping
      {
         trait method Qname(PackageNamespace(""),"setInjector")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("org.swiftsuspenders"),"Injector")
         returns Qname(PackageNamespace("kabam.lib.net.impl"),"MessageCenterMapping")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"884"),"injector")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function toMessage(param1:Class) : MessageMapping
      {
         trait method Qname(PackageNamespace(""),"toMessage")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace("kabam.lib.net.api"),"MessageMapping")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"884"),"messageType")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function toHandler(param1:Class) : MessageMapping
      {
         trait method Qname(PackageNamespace(""),"toHandler")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace("kabam.lib.net.api"),"MessageMapping")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("kabam.lib.net.impl"),"ClassHandlerProxy")
         constructprop Qname(PackageNamespace("kabam.lib.net.impl"),"ClassHandlerProxy") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"setType") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"884"),"injector")
         callproperty Qname(PackageNamespace(""),"setInjector") 1
         initproperty Qname(PrivateNamespace(null,"884"),"handler")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function toMethod(param1:Function) : MessageMapping
      {
         trait method Qname(PackageNamespace(""),"toMethod")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Function")
         returns Qname(PackageNamespace("kabam.lib.net.api"),"MessageMapping")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("kabam.lib.net.impl"),"MethodHandlerProxy")
         constructprop Qname(PackageNamespace("kabam.lib.net.impl"),"MethodHandlerProxy") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"setMethod") 1
         initproperty Qname(PrivateNamespace(null,"884"),"handler")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setPopulation(param1:int) : MessageMapping
      {
         trait method Qname(PackageNamespace(""),"setPopulation")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.lib.net.api"),"MessageMapping")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"884"),"population")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function makePool() : MessagePool
      {
         trait method Qname(PackageNamespace(""),"makePool")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"884"),"id")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"884"),"messageType")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"884"),"handler")
         callproperty Qname(Namespace("kabam.lib.net.api:MessageHandlerProxy"),"getMethod") 0
         constructprop Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool") 3
         coerce Qname(PackageNamespace("kabam.lib.net.impl"),"MessagePool")
         setlocal_1
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"884"),"population")
         callpropvoid Qname(PackageNamespace(""),"populate") 1
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

import kabam.lib.net.api.MessageHandlerProxy;

class NullHandlerProxy implements MessageHandlerProxy
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   function NullHandlerProxy()
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function getMethod() : Function
   {
      trait method Qname(PackageNamespace(""),"getMethod")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Function")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      pushnull
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

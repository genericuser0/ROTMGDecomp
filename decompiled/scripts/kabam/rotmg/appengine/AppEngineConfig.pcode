package kabam.rotmg.appengine
{
   import kabam.rotmg.appengine.api.AppEngineClient;
   import kabam.rotmg.appengine.api.RetryLoader;
   import kabam.rotmg.appengine.impl.AppEngineRequestStats;
   import kabam.rotmg.appengine.impl.AppEngineRetryLoader;
   import kabam.rotmg.appengine.impl.SimpleAppEngineClient;
   import kabam.rotmg.appengine.impl.StatsRecorderAppEngineClient;
   import kabam.rotmg.appengine.impl.TrackingAppEngineClient;
   import kabam.rotmg.application.api.ApplicationSetup;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.framework.api.IConfig;
   import robotlegs.bender.framework.api.IContext;
   
   public class AppEngineConfig implements IConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const TRACK_APP_ENGINE_CALLS:Boolean = true;
      
      [Inject]
      public var context:IContext;
      
      [Inject]
      public var setup:ApplicationSetup;
      
      [Inject]
      public var injector:Injector;
      
      public function AppEngineConfig()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function configure() : void
      {
         trait method Qname(PackageNamespace(""),"configure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"21"),"configureCoreDependencies") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"setup")
         callproperty Qname(Namespace("kabam.rotmg.application.api:ApplicationSetup"),"isToolingEnabled") 0
         iffalse ofs001c
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"21"),"configureForTesting") 0
         jump ofs0032
         ofs001c:getlocal_0
         getproperty Qname(PrivateNamespace(null,"21"),"TRACK_APP_ENGINE_CALLS")
         iffalse ofs002d
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"21"),"configureForTracking") 0
         jump ofs0032
         ofs002d:getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"21"),"configureForSimplicity") 0
         ofs0032:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function configureCoreDependencies() : void
      {
         trait method Qname(PrivateNamespace(null,"21"),"configureCoreDependencies")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.api"),"RetryLoader")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"AppEngineRetryLoader")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function configureForTesting() : void
      {
         trait method Qname(PrivateNamespace(null,"21"),"configureForTesting")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"AppEngineRequestStats")
         callproperty Qname(PackageNamespace(""),"map") 1
         callpropvoid Qname(PackageNamespace(""),"asSingleton") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"SimpleAppEngineClient")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.api"),"AppEngineClient")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"StatsRecorderAppEngineClient")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function configureForTracking() : void
      {
         trait method Qname(PrivateNamespace(null,"21"),"configureForTracking")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"SimpleAppEngineClient")
         callpropvoid Qname(PackageNamespace(""),"map") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.api"),"AppEngineClient")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"TrackingAppEngineClient")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function configureForSimplicity() : void
      {
         trait method Qname(PrivateNamespace(null,"21"),"configureForSimplicity")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.api"),"AppEngineClient")
         callproperty Qname(PackageNamespace(""),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"SimpleAppEngineClient")
         callpropvoid Qname(PackageNamespace(""),"toType") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

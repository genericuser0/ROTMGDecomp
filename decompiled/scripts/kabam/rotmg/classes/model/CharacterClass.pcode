package kabam.rotmg.classes.model
{
   import org.osflash.signals.Signal;
   
   public class CharacterClass
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public const selected:Signal;
      
      public var id:int;
      
      public var name:String;
      
      public var description:String;
      
      public var hitSound:String;
      
      public var deathSound:String;
      
      public var bloodProb:Number;
      
      public var slotTypes:Vector.<int>;
      
      public var defaultEquipment:Vector.<int>;
      
      public var hp:CharacterClassStat;
      
      public var mp:CharacterClassStat;
      
      public var attack:CharacterClassStat;
      
      public var defense:CharacterClassStat;
      
      public var speed:CharacterClassStat;
      
      public var dexterity:CharacterClassStat;
      
      public var hpRegeneration:CharacterClassStat;
      
      public var mpRegeneration:CharacterClassStat;
      
      public var unlockCost:int;
      
      private var maxLevelAchieved:int;
      
      private var isSelected:Boolean;
      
      private var _isChallenger:Boolean;
      
      public const unlocks:Vector.<CharacterClassUnlock>;
      
      public const skins:CharacterSkins;
      
      public function CharacterClass()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterClass")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 1
         initproperty Qname(PackageNamespace(""),"selected")
         getlocal_0
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"537"),PackageNamespace(""),PackageNamespace("kabam.rotmg.classes.model"),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1548"),PackageInternalNs("kabam.rotmg.classes.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.classes.model:CharacterClass"),StaticProtectedNs("kabam.rotmg.classes.model:CharacterClass")])
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterClassUnlock")
         applytype 1
         pushbyte 0
         construct 1
         initproperty Qname(PackageNamespace(""),"unlocks")
         getlocal_0
         findpropstrict Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkins")
         constructprop Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkins") 0
         initproperty Qname(PackageNamespace(""),"skins")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function resetSkin() : void
      {
         trait method Qname(PackageNamespace(""),"resetSkin")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"skins")
         callpropvoid Qname(PackageNamespace(""),"resetSkin") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getIsSelected() : Boolean
      {
         trait method Qname(PackageNamespace(""),"getIsSelected")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"537"),"isSelected")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setIsSelected(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setIsSelected")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"537"),"isSelected")
         getlocal_1
         ifeq ofs0026
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"537"),"isSelected")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"537"),"isSelected")
         coerce_a
         dup
         iffalse ofs0025
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"selected")
         getlocal_0
         callproperty Qname(PackageNamespace(""),"dispatch") 1
         coerce_a
         ofs0025:pop
         ofs0026:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getMaxLevelAchieved() : int
      {
         trait method Qname(PackageNamespace(""),"getMaxLevelAchieved")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"537"),"maxLevelAchieved")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setMaxLevelAchieved(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setMaxLevelAchieved")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"537"),"maxLevelAchieved")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"skins")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"537"),"maxLevelAchieved")
         callpropvoid Qname(PackageNamespace(""),"updateSkins") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get isChallenger() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"isChallenger")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"537"),"_isChallenger")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set isChallenger(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"isChallenger")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"537"),"_isChallenger")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.classes.model
{
   public class CharacterSkins
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const skins:Vector.<CharacterSkin>;
      
      private const map:Object;
      
      private var defaultSkin:CharacterSkin;
      
      private var selectedSkin:CharacterSkin;
      
      private var maxLevelAchieved:int;
      
      public function CharacterSkins()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"547"),PackageNamespace(""),PackageNamespace("kabam.rotmg.classes.model"),PrivateNamespace(null,"1555"),PackageInternalNs("kabam.rotmg.classes.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"),StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         applytype 1
         pushbyte 0
         construct 1
         initproperty Qname(PrivateNamespace(null,"547"),"skins")
         getlocal_0
         newobject 0
         initproperty Qname(PrivateNamespace(null,"547"),"map")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getCount() : int
      {
         trait method Qname(PackageNamespace(""),"getCount")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"skins")
         getproperty Qname(PackageNamespace(""),"length")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function resetSkin() : void
      {
         trait method Qname(PackageNamespace(""),"resetSkin")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         equals
         not
         dup
         iffalse ofs0017
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         convert_b
         ofs0017:iffalse ofs0045
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         iffalse ofs002c
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         pushfalse
         callpropvoid Qname(PackageNamespace(""),"setIsSelected") 1
         ofs002c:getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         iffalse ofs003d
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setIsSelected") 1
         ofs003d:getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         initproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         ofs0045:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getDefaultSkin() : CharacterSkin
      {
         trait method Qname(PackageNamespace(""),"getDefaultSkin")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getSelectedSkin() : CharacterSkin
      {
         trait method Qname(PackageNamespace(""),"getSelectedSkin")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getSkinAt(param1:int) : CharacterSkin
      {
         trait method Qname(PackageNamespace(""),"getSkinAt")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"skins")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"547"),PackageNamespace(""),PackageNamespace("kabam.rotmg.classes.model"),PrivateNamespace(null,"1555"),PackageInternalNs("kabam.rotmg.classes.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"),StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function addSkin(param1:CharacterSkin, param2:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"addSkin")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"changed")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"onSkinChanged")
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"skins")
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"map")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"id")
         getlocal_1
         setproperty MultinameL([PrivateNamespace(null,"547"),PackageNamespace(""),PackageNamespace("kabam.rotmg.classes.model"),PrivateNamespace(null,"1555"),PackageInternalNs("kabam.rotmg.classes.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"),StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins")])
         getlocal_0
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"547"),"updateSkinState") 1
         getlocal_2
         iffalse ofs004c
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         iftrue ofs0048
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         getlocal_1
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setIsSelected") 1
         ofs0048:jump ofs005a
         ofs004c:getlocal_1
         callproperty Qname(PackageNamespace(""),"getIsSelected") 0
         iffalse ofs005a
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         ofs005a:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onSkinChanged(param1:CharacterSkin) : void
      {
         trait method Qname(PrivateNamespace(null,"547"),"onSkinChanged")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         callproperty Qname(PackageNamespace(""),"getIsSelected") 0
         convert_b
         dup
         iffalse ofs0015
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         getlocal_1
         equals
         not
         ofs0015:iffalse ofs0034
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         coerce_a
         dup
         iffalse ofs002e
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         pushfalse
         callproperty Qname(PackageNamespace(""),"setIsSelected") 1
         coerce_a
         ofs002e:pop
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"547"),"selectedSkin")
         ofs0034:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updateSkins(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"updateSkins")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         setlocal_2
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"547"),"maxLevelAchieved")
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"skins")
         coerce_a
         setlocal 4
         jump ofs0027
         ofs0019:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         setlocal_2
         getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"547"),"updateSkinState") 1
         ofs0027:hasnext2 4 3
         iftrue ofs0019
         kill 4
         kill 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function updateSkinState(param1:CharacterSkin) : void
      {
         trait method Qname(PrivateNamespace(null,"547"),"updateSkinState")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"skinSelectEnabled")
         iftrue ofs0019
         getlocal_1
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkinState")
         getproperty Qname(PackageNamespace(""),"UNLISTED")
         callpropvoid Qname(PackageNamespace(""),"setState") 1
         jump ofs0031
         ofs0019:getlocal_1
         callproperty Qname(PackageNamespace(""),"getState") 0
         callproperty Qname(PackageNamespace(""),"isSkinStateDeterminedByLevel") 0
         iffalse ofs0031
         getlocal_1
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"547"),"getSkinState") 1
         callpropvoid Qname(PackageNamespace(""),"setState") 1
         ofs0031:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function getSkinState(param1:CharacterSkin) : CharacterSkinState
      {
         trait method Qname(PrivateNamespace(null,"547"),"getSkinState")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         returns Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkinState")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"skinSelectEnabled")
         iftrue ofs0011
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkinState")
         getproperty Qname(PackageNamespace(""),"UNLISTED")
         returnvalue
         ofs0011:getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"maxLevelAchieved")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"unlockLevel")
         greaterequals
         dup
         iffalse ofs0026
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"unlockSpecial")
         pushnull
         equals
         ofs0026:iffalse ofs0031
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkinState")
         getproperty Qname(PackageNamespace(""),"PURCHASABLE")
         returnvalue
         ofs0031:getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkinState")
         getproperty Qname(PackageNamespace(""),"LOCKED")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getSkin(param1:int) : CharacterSkin
      {
         trait method Qname(PackageNamespace(""),"getSkin")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"map")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"547"),PackageNamespace(""),PackageNamespace("kabam.rotmg.classes.model"),PrivateNamespace(null,"1555"),PackageInternalNs("kabam.rotmg.classes.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"),StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins")])
         coerce Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         dup
         iftrue ofs0019
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"defaultSkin")
         coerce Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         ofs0019:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getListedSkins() : Vector.<CharacterSkin>
      {
         trait method Qname(PackageNamespace(""),"getListedSkins")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")>)
         
         body
         maxstack 2
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         setlocal_2
         getlex Multiname("Vector",[PrivateNamespace(null,"547"),PackageNamespace(""),PackageNamespace("kabam.rotmg.classes.model"),PrivateNamespace(null,"1555"),PackageInternalNs("kabam.rotmg.classes.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.classes.model:CharacterSkins"),StaticProtectedNs("kabam.rotmg.classes.model:CharacterSkins"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         applytype 1
         construct 0
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")>)
         setlocal_1
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"547"),"skins")
         coerce_a
         setlocal 4
         jump ofs0040
         ofs0022:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkin")
         setlocal_2
         getlocal_2
         callproperty Qname(PackageNamespace(""),"getState") 0
         getlex Qname(PackageNamespace("kabam.rotmg.classes.model"),"CharacterSkinState")
         getproperty Qname(PackageNamespace(""),"UNLISTED")
         ifeq ofs0040
         getlocal_1
         getlocal_2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0040:hasnext2 4 3
         iftrue ofs0022
         kill 4
         kill 3
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

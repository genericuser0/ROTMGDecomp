package kabam.rotmg.arena.model
{
   import flash.display.BitmapData;
   import io.decagames.rotmg.pets.data.vo.PetVO;
   
   public class ArenaLeaderboardEntry
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var playerBitmap:BitmapData;
      
      public var name:String;
      
      public var pet:PetVO;
      
      public var slotTypes:Vector.<int>;
      
      public var equipment:Vector.<int>;
      
      public var runtime:Number;
      
      public var currentWave:int;
      
      public var guildName:String;
      
      public var guildRank:int;
      
      public var rank:int = -1;
      
      public var isPersonalRecord:Boolean = false;
      
      public function ArenaLeaderboardEntry()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isEqual(param1:ArenaLeaderboardEntry) : Boolean
      {
         trait method Qname(PackageNamespace(""),"isEqual")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardEntry")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"name")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"name")
         equals
         dup
         iffalse ofs001a
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"runtime")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"runtime")
         equals
         ofs001a:dup
         iffalse ofs0029
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"currentWave")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"currentWave")
         equals
         ofs0029:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isBetterThan(param1:ArenaLeaderboardEntry) : Boolean
      {
         trait method Qname(PackageNamespace(""),"isBetterThan")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.arena.model"),"ArenaLeaderboardEntry")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"currentWave")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"currentWave")
         greaterthan
         dup
         iftrue ofs0029
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"currentWave")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"currentWave")
         equals
         dup
         iffalse ofs0029
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"runtime")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"runtime")
         lessthan
         ofs0029:returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

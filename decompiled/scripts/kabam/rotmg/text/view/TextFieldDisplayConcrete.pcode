package kabam.rotmg.text.view
{
   import flash.display.Sprite;
   import flash.text.TextField;
   import flash.text.TextFormat;
   import flash.text.TextLineMetrics;
   import kabam.rotmg.language.model.StringMap;
   import kabam.rotmg.text.model.FontInfo;
   import kabam.rotmg.text.view.stringBuilder.StringBuilder;
   import org.osflash.signals.Signal;
   
   public class TextFieldDisplayConcrete extends Sprite implements TextFieldDisplay
   {
      
      public static const MIDDLE:String = "middle";
      
      public static const BOTTOM:String = "bottom";
      
      private static const GUTTER:int = 2;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"MIDDLE")
         pushstring "middle"
         initproperty Qname(PackageNamespace(""),"MIDDLE")
         findproperty Qname(PackageNamespace(""),"BOTTOM")
         pushstring "bottom"
         initproperty Qname(PackageNamespace(""),"BOTTOM")
         findproperty Qname(PrivateNamespace(null,"542"),"GUTTER")
         pushbyte 2
         initproperty Qname(PrivateNamespace(null,"542"),"GUTTER")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public const textChanged:Signal;
      
      public var textField:TextField;
      
      private var stringMap:StringMap;
      
      private var stringBuilder:StringBuilder;
      
      private var size:int = 12;
      
      private var color:uint;
      
      private var font:FontInfo;
      
      private var bold:Boolean;
      
      private var autoSize:String = "left";
      
      private var horizontalAlign:String = "left";
      
      private var verticalAlign:String;
      
      private var multiline:Boolean;
      
      private var wordWrap:Boolean;
      
      private var textWidth:Number = 0;
      
      private var textHeight:Number = 0;
      
      private var html:Boolean;
      
      private var displayAsPassword:Boolean;
      
      private var debugName:String;
      
      private var leftMargin:int = 0;
      
      private var indent:int = 0;
      
      private var leading:int = 0;
      
      public function TextFieldDisplayConcrete()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 0
         initproperty Qname(PackageNamespace(""),"textChanged")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private static function getOnlyTextHeight(param1:TextLineMetrics) : Number
      {
         trait method Qname(PrivateNamespace(null,"542"),"getOnlyTextHeight")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace("flash.text"),"TextLineMetrics")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"height")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"leading")
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setIndent(param1:int) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setIndent")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"indent")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setLeading(param1:int) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setLeading")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"leading")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setLeftMargin(param1:int) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setLeftMargin")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"leftMargin")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setDisplayAsPassword(param1:Boolean) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setDisplayAsPassword")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"displayAsPassword")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setDebugName(param1:String) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setDebugName")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"debugName")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         coerce_a
         dup
         iffalse ofs0023
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"debugName")
         dup
         setlocal_2
         setproperty Qname(PackageNamespace(""),"name")
         getlocal_2
         kill 2
         coerce_a
         ofs0023:pop
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setSize(param1:int) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setSize")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"size")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setColor(param1:uint) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setColor")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"color")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setBold(param1:Boolean) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setBold")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"bold")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHorizontalAlign(param1:String) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setHorizontalAlign")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"horizontalAlign")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setAutoSize(param1:String) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setAutoSize")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"autoSize")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setMultiLine(param1:Boolean) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setMultiLine")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"multiline")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setWordWrap(param1:Boolean) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setWordWrap")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"wordWrap")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTextWidth(param1:Number) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setTextWidth")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"textWidth")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTextHeight(param1:Number) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setTextHeight")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"textHeight")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHTML(param1:Boolean) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setHTML")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"html")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setStringBuilder(param1:StringBuilder) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setStringBuilder")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"StringBuilder")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"stringBuilder")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setTextIfAble") 0
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getStringBuilder() : StringBuilder
      {
         trait method Qname(PackageNamespace(""),"getStringBuilder")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"StringBuilder")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"stringBuilder")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setPosition(param1:Number, param2:Number) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setPosition")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PackageNamespace(""),"x")
         getlocal_0
         getlocal_2
         setproperty Qname(PackageNamespace(""),"y")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setVerticalAlign(param1:String) : TextFieldDisplayConcrete
      {
         trait method Qname(PackageNamespace(""),"setVerticalAlign")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"verticalAlign")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function update() : void
      {
         trait method Qname(PackageNamespace(""),"update")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setTextIfAble") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFont(param1:FontInfo) : void
      {
         trait method Qname(PackageNamespace(""),"setFont")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.text.model"),"FontInfo")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"font")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setStringMap(param1:StringMap) : void
      {
         trait method Qname(PackageNamespace(""),"setStringMap")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.language.model"),"StringMap")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"542"),"stringMap")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setTextIfAble") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setTextField(param1:TextField) : void
      {
         trait method Qname(PackageNamespace(""),"setTextField")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.text"),"TextField")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"textWidth")
         setproperty Qname(PackageNamespace(""),"width")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"textHeight")
         setproperty Qname(PackageNamespace(""),"height")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"debugName")
         dup
         iffalse ofs0029
         pop
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"debugName")
         dup
         setlocal_2
         setproperty Qname(PackageNamespace(""),"name")
         getlocal_2
         kill 2
         ofs0029:pop
         getlocal_0
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"542"),"updateTextOfInjectedTextField") 1
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setProperties") 0
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setPropertiesIfHasTextField() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"setPropertiesIfHasTextField")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         iffalse ofs000f
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setProperties") 0
         ofs000f:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setProperties() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"setProperties")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setFormatProperties") 0
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setTextFieldProperties") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setTextFieldProperties() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"setTextFieldProperties")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"textWidth")
         pushbyte 0
         ifeq ofs0017
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"textWidth")
         setproperty Qname(PackageNamespace(""),"width")
         ofs0017:getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"textHeight")
         pushbyte 0
         ifeq ofs002c
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"textHeight")
         setproperty Qname(PackageNamespace(""),"height")
         ofs002c:getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         pushfalse
         setproperty Qname(PackageNamespace(""),"selectable")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"color")
         setproperty Qname(PackageNamespace(""),"textColor")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"autoSize")
         setproperty Qname(PackageNamespace(""),"autoSize")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"multiline")
         setproperty Qname(PackageNamespace(""),"multiline")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"wordWrap")
         setproperty Qname(PackageNamespace(""),"wordWrap")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"displayAsPassword")
         setproperty Qname(PackageNamespace(""),"displayAsPassword")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         pushtrue
         setproperty Qname(PackageNamespace(""),"embedFonts")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setFormatProperties() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"setFormatProperties")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.text"),"TextFormat")
         constructprop Qname(PackageNamespace("flash.text"),"TextFormat") 0
         coerce Qname(PackageNamespace("flash.text"),"TextFormat")
         setlocal_1
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"size")
         setproperty Qname(PackageNamespace(""),"size")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"font")
         callproperty Qname(PackageNamespace(""),"getName") 0
         setproperty Qname(PackageNamespace(""),"font")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"bold")
         setproperty Qname(PackageNamespace(""),"bold")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"horizontalAlign")
         setproperty Qname(PackageNamespace(""),"align")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"leftMargin")
         setproperty Qname(PackageNamespace(""),"leftMargin")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"indent")
         setproperty Qname(PackageNamespace(""),"indent")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"leading")
         setproperty Qname(PackageNamespace(""),"leading")
         getlocal_0
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setTextFormat") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function updateTextOfInjectedTextField(param1:TextField) : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"updateTextOfInjectedTextField")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.text"),"TextField")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         iffalse ofs0020
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getproperty Qname(PackageNamespace(""),"text")
         setproperty Qname(PackageNamespace(""),"text")
         findpropstrict Qname(PackageNamespace(""),"removeChild")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         callpropvoid Qname(PackageNamespace(""),"removeChild") 1
         ofs0020:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setTextIfAble() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"setTextIfAble")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_1
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"542"),"isAble") 0
         iffalse ofs003c
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"stringBuilder")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"stringMap")
         callpropvoid Qname(Namespace("kabam.rotmg.text.view.stringBuilder:StringBuilder"),"setStringMap") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"stringBuilder")
         callproperty Qname(Namespace("kabam.rotmg.text.view.stringBuilder:StringBuilder"),"getString") 0
         coerce_s
         setlocal_1
         getlocal_0
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setText") 1
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"alignVertically") 0
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"invalidateTextField") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textChanged")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 0
         ofs003c:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function invalidateTextField() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"invalidateTextField")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getproperty Qname(PackageNamespace(""),"height")
         pop
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setText(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"setText")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"html")
         iffalse ofs0016
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"htmlText")
         jump ofs001e
         ofs0016:getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"text")
         ofs001e:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function alignVertically() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"alignVertically")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.text"),"TextLineMetrics")
         setlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"verticalAlign")
         getlex Qname(PackageNamespace(""),"MIDDLE")
         ifne ofs001c
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"542"),"setYToMiddle") 0
         jump ofs0049
         ofs001c:getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"verticalAlign")
         getlex Qname(PackageNamespace(""),"BOTTOM")
         ifne ofs0049
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         pushbyte 0
         callproperty Qname(PackageNamespace(""),"getLineMetrics") 1
         coerce Qname(PackageNamespace("flash.text"),"TextLineMetrics")
         setlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         findpropstrict Qname(PrivateNamespace(null,"542"),"getOnlyTextHeight")
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"542"),"getOnlyTextHeight") 1
         negate
         setproperty Qname(PackageNamespace(""),"y")
         ofs0049:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getTextHeight() : Number
      {
         trait method Qname(PackageNamespace(""),"getTextHeight")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         iffalse ofs0016
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getproperty Qname(PackageNamespace(""),"height")
         convert_d
         jump ofs0019
         ofs0016:pushbyte 0
         convert_d
         ofs0019:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function setYToMiddle() : void
      {
         trait method Qname(PrivateNamespace(null,"542"),"setYToMiddle")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getproperty Qname(PackageNamespace(""),"height")
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         callproperty Qname(PackageNamespace(""),"getTextFormat") 0
         coerce Qname(PackageNamespace("flash.text"),"TextFormat")
         setlocal_1
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"542"),"getSpecificXHeight") 1
         convert_d
         setlocal_2
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"542"),"getSpecificVerticalSpace") 1
         convert_d
         setlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getproperty Qname(PackageNamespace(""),"height")
         getlocal_2
         pushbyte 2
         divide
         getlocal_3
         add
         getlex Qname(PrivateNamespace(null,"542"),"GUTTER")
         add
         subtract
         negate
         setproperty Qname(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function getSpecificXHeight(param1:TextFormat) : Number
      {
         trait method Qname(PrivateNamespace(null,"542"),"getSpecificXHeight")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.text"),"TextFormat")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"font")
         findpropstrict Qname(PackageNamespace(""),"Number")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"size")
         callproperty Qname(PackageNamespace(""),"Number") 1
         callproperty Qname(PackageNamespace(""),"getXHeight") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function getSpecificVerticalSpace(param1:TextFormat) : Number
      {
         trait method Qname(PrivateNamespace(null,"542"),"getSpecificVerticalSpace")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.text"),"TextFormat")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"font")
         findpropstrict Qname(PackageNamespace(""),"Number")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"size")
         callproperty Qname(PackageNamespace(""),"Number") 1
         callproperty Qname(PackageNamespace(""),"getVerticalSpace") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTextFormat(param1:TextFormat, param2:int = -1, param3:int = -1) : void
      {
         trait method Qname(PackageNamespace(""),"setTextFormat")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.text"),"TextFormat")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         optional -1
         optional -1
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"defaultTextFormat")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"setTextFormat") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function isAble() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"542"),"isAble")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"stringMap")
         convert_b
         dup
         iffalse ofs0012
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"stringBuilder")
         convert_b
         ofs0012:dup
         iffalse ofs001d
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         convert_b
         ofs001d:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getVerticalSpace() : Number
      {
         trait method Qname(PackageNamespace(""),"getVerticalSpace")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"font")
         findpropstrict Qname(PackageNamespace(""),"Number")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         callproperty Qname(PackageNamespace(""),"getTextFormat") 0
         getproperty Qname(PackageNamespace(""),"size")
         callproperty Qname(PackageNamespace(""),"Number") 1
         callproperty Qname(PackageNamespace(""),"getVerticalSpace") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getText() : String
      {
         trait method Qname(PackageNamespace(""),"getText")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         iffalse ofs0016
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getproperty Qname(PackageNamespace(""),"text")
         coerce_s
         jump ofs001a
         ofs0016:pushstring "null"
         ofs001a:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getColor() : uint
      {
         trait method Qname(PackageNamespace(""),"getColor")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"color")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getSize() : int
      {
         trait method Qname(PackageNamespace(""),"getSize")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"size")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasTextField() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasTextField")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasStringMap() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasStringMap")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"stringMap")
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasFont() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasFont")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"542"),"font")
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTextFormat(param1:int = -1, param2:int = -1) : TextFormat
      {
         trait method Qname(PackageNamespace(""),"getTextFormat")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         optional -1
         optional -1
         returns Qname(PackageNamespace("flash.text"),"TextFormat")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"textField")
         getlocal_1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"getTextFormat") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.text.view.stringBuilder
{
   import kabam.rotmg.language.model.StringMap;
   
   public class AppendingLineBuilder implements StringBuilder
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var data:Vector.<LineData>;
      
      private var delimiter:String = "\n";
      
      private var provider:StringMap;
      
      public function AppendingLineBuilder()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlex Multiname("Vector",[PackageNamespace(""),PrivateNamespace(null,"10"),PackageNamespace("kabam.rotmg.text.view.stringBuilder"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"986"),PackageInternalNs("kabam.rotmg.text.view.stringBuilder"),ProtectedNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"),StaticProtectedNs("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PrivateNamespace(null,"10"),"LineData")
         applytype 1
         construct 0
         initproperty Qname(PrivateNamespace(null,"986"),"data")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function pushParams(param1:String, param2:Object = null, param3:String = "", param4:String = "") : AppendingLineBuilder
      {
         trait method Qname(PackageNamespace(""),"pushParams")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         optional null
         optional ""
         optional ""
         returns Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"AppendingLineBuilder")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"986"),"data")
         findpropstrict Qname(PrivateNamespace(null,"10"),"LineData")
         constructprop Qname(PrivateNamespace(null,"10"),"LineData") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"setKey") 1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"setTokens") 1
         getlocal_3
         callproperty Qname(PackageNamespace(""),"setOpeningTags") 1
         getlocal 4
         callproperty Qname(PackageNamespace(""),"setClosingTags") 1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setDelimiter(param1:String) : AppendingLineBuilder
      {
         trait method Qname(PackageNamespace(""),"setDelimiter")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"AppendingLineBuilder")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setproperty Qname(PrivateNamespace(null,"986"),"delimiter")
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setStringMap(param1:StringMap) : void
      {
         trait method Qname(PackageNamespace(""),"setStringMap")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.language.model"),"StringMap")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"986"),"provider")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getString() : String
      {
         trait method Qname(PackageNamespace(""),"getString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PrivateNamespace(null,"10"),"LineData")
         setlocal_2
         getlex Multiname("Vector",[PackageNamespace(""),PrivateNamespace(null,"10"),PackageNamespace("kabam.rotmg.text.view.stringBuilder"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"986"),PackageInternalNs("kabam.rotmg.text.view.stringBuilder"),ProtectedNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"),StaticProtectedNs("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"String")
         applytype 1
         construct 0
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"String")>)
         setlocal_1
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"986"),"data")
         coerce_a
         setlocal 4
         jump ofs003b
         ofs0023:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PrivateNamespace(null,"10"),"LineData")
         setlocal_2
         getlocal_1
         getlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"986"),"provider")
         callproperty Qname(PackageNamespace(""),"getString") 1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs003b:hasnext2 4 3
         iftrue ofs0023
         kill 4
         kill 3
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"986"),"delimiter")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasLines() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasLines")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"986"),"data")
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 0
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function clear() : void
      {
         trait method Qname(PackageNamespace(""),"clear")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlex Multiname("Vector",[PackageNamespace(""),PrivateNamespace(null,"10"),PackageNamespace("kabam.rotmg.text.view.stringBuilder"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"986"),PackageInternalNs("kabam.rotmg.text.view.stringBuilder"),ProtectedNamespace("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"),StaticProtectedNs("kabam.rotmg.text.view.stringBuilder:AppendingLineBuilder"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PrivateNamespace(null,"10"),"LineData")
         applytype 1
         construct 0
         initproperty Qname(PrivateNamespace(null,"986"),"data")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

import kabam.rotmg.language.model.StringMap;
import kabam.rotmg.text.model.TextKey;
import kabam.rotmg.text.view.stringBuilder.StringBuilder;

class LineData
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public var key:String;
   
   public var tokens:Object;
   
   public var openingHTMLTags:String = "";
   
   public var closingHTMLTags:String = "";
   
   function LineData()
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function setKey(param1:String) : LineData
   {
      trait method Qname(PackageNamespace(""),"setKey")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"String")
      returns Qname(PrivateNamespace(null,"10"),"LineData")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_1
      setproperty Qname(PackageNamespace(""),"key")
      getlocal_0
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function setTokens(param1:Object) : LineData
   {
      trait method Qname(PackageNamespace(""),"setTokens")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"Object")
      returns Qname(PrivateNamespace(null,"10"),"LineData")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_1
      setproperty Qname(PackageNamespace(""),"tokens")
      getlocal_0
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function setOpeningTags(param1:String) : LineData
   {
      trait method Qname(PackageNamespace(""),"setOpeningTags")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"String")
      returns Qname(PrivateNamespace(null,"10"),"LineData")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_1
      setproperty Qname(PackageNamespace(""),"openingHTMLTags")
      getlocal_0
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function setClosingTags(param1:String) : LineData
   {
      trait method Qname(PackageNamespace(""),"setClosingTags")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"String")
      returns Qname(PrivateNamespace(null,"10"),"LineData")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_1
      setproperty Qname(PackageNamespace(""),"closingHTMLTags")
      getlocal_0
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function getString(param1:StringMap) : String
   {
      trait method Qname(PackageNamespace(""),"getString")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("kabam.rotmg.language.model"),"StringMap")
      returns Qname(PackageNamespace(""),"String")
      
      body
      maxstack 5
      localcount 9
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      pushnull
      coerce_s
      setlocal_3
      pushnull
      coerce_s
      setlocal 4
      pushnull
      coerce Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"StringBuilder")
      setlocal 5
      pushnull
      coerce_s
      setlocal 6
      getlocal_0
      getproperty Qname(PackageNamespace(""),"openingHTMLTags")
      coerce_s
      setlocal_2
      getlocal_1
      getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"key")
      callproperty Qname(PackageNamespace(""),"stripCurlyBrackets") 1
      callproperty Qname(Namespace("kabam.rotmg.language.model:StringMap"),"getValue") 1
      dup
      setlocal 7
      coerce_s
      setlocal_3
      getlocal 7
      kill 7
      pushnull
      ifne ofs003d
      getlocal_0
      getproperty Qname(PackageNamespace(""),"key")
      coerce_s
      setlocal_3
      ofs003d:getlocal_2
      getlocal_3
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat") 1
      coerce_s
      setlocal_2
      pushbyte 0
      setlocal 7
      getlocal_0
      getproperty Qname(PackageNamespace(""),"tokens")
      coerce_a
      setlocal 8
      jump ofs0119
      ofs0055:label
      getlocal 8
      getlocal 7
      nextname
      coerce_s
      setlocal 4
      getlocal_0
      getproperty Qname(PackageNamespace(""),"tokens")
      getlocal 4
      getproperty MultinameL([PrivateNamespace(null,"1929"),PackageNamespace(""),PrivateNamespace(null,"10"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("AppendingLineBuilder.as$1245:LineData"),StaticProtectedNs("AppendingLineBuilder.as$1245:LineData")])
      getlex Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"StringBuilder")
      istypelate
      iffalse ofs00a6
      findpropstrict Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"StringBuilder")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"tokens")
      getlocal 4
      getproperty MultinameL([PrivateNamespace(null,"1929"),PackageNamespace(""),PrivateNamespace(null,"10"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("AppendingLineBuilder.as$1245:LineData"),StaticProtectedNs("AppendingLineBuilder.as$1245:LineData")])
      callproperty Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"StringBuilder") 1
      coerce Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"StringBuilder")
      dup
      setlocal 5
      getlocal_1
      callpropvoid Qname(Namespace("kabam.rotmg.text.view.stringBuilder:StringBuilder"),"setStringMap") 1
      getlocal_2
      pushstring "{"
      getlocal 4
      add
      pushstring "}"
      add
      getlocal 5
      callproperty Qname(Namespace("kabam.rotmg.text.view.stringBuilder:StringBuilder"),"getString") 0
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
      coerce_s
      setlocal_2
      jump ofs0119
      ofs00a6:getlocal_0
      getproperty Qname(PackageNamespace(""),"tokens")
      getlocal 4
      getproperty MultinameL([PrivateNamespace(null,"1929"),PackageNamespace(""),PrivateNamespace(null,"10"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("AppendingLineBuilder.as$1245:LineData"),StaticProtectedNs("AppendingLineBuilder.as$1245:LineData")])
      coerce_s
      dup
      setlocal 6
      getproperty Qname(PackageNamespace(""),"length")
      pushbyte 0
      greaterthan
      dup
      iffalse ofs00ce
      pop
      getlocal 6
      pushbyte 0
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
      pushstring "{"
      equals
      ofs00ce:dup
      iffalse ofs00e6
      pop
      getlocal 6
      getlocal 6
      getproperty Qname(PackageNamespace(""),"length")
      decrement
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
      pushstring "}"
      equals
      ofs00e6:iffalse ofs0103
      getlocal_1
      getlocal 6
      pushbyte 1
      getlocal 6
      getproperty Qname(PackageNamespace(""),"length")
      pushbyte 2
      subtract
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 2
      callproperty Qname(Namespace("kabam.rotmg.language.model:StringMap"),"getValue") 1
      coerce_s
      setlocal 6
      ofs0103:getlocal_2
      pushstring "{"
      getlocal 4
      add
      pushstring "}"
      add
      getlocal 6
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
      coerce_s
      setlocal_2
      ofs0119:hasnext2 8 7
      iftrue ofs0055
      kill 8
      kill 7
      getlocal_2
      getlex Qname(PackageNamespace(""),"RegExp")
      pushstring "\\\\n"
      pushstring "g"
      construct 2
      pushstring "\n"
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
      coerce_s
      setlocal_2
      getlocal_2
      getlocal_0
      getproperty Qname(PackageNamespace(""),"closingHTMLTags")
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat") 1
      coerce_s
      setlocal_2
      getlocal_2
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

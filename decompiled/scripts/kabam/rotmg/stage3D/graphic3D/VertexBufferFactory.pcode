package kabam.rotmg.stage3D.graphic3D
{
   import flash.utils.Dictionary;
   import kabam.rotmg.stage3D.proxies.Context3DProxy;
   import kabam.rotmg.stage3D.proxies.VertexBuffer3DProxy;
   import org.swiftsuspenders.Injector;
   import org.swiftsuspenders.dependencyproviders.DependencyProvider;
   
   public class VertexBufferFactory implements DependencyProvider
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var vertexBuffer:VertexBuffer3DProxy;
      
      public function VertexBufferFactory(param1:Context3DProxy)
      {
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.stage3D.proxies"),"Context3DProxy")
         returns null
         
         body
         maxstack 22
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlex Multiname("Vector",[PrivateNamespace(null,"479"),PrivateNamespace(null,"1520"),PackageNamespace(""),PackageNamespace("kabam.rotmg.stage3D.graphic3D"),PackageInternalNs("kabam.rotmg.stage3D.graphic3D"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.stage3D.graphic3D:VertexBufferFactory"),StaticProtectedNs("kabam.rotmg.stage3D.graphic3D:VertexBufferFactory"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"Number")
         applytype 1
         getglobalscope
         pushdouble -0.5
         pushdouble 0.5
         pushbyte 0
         dup
         dup
         pushdouble 0.5
         pushdouble 0.5
         pushbyte 0
         pushbyte 1
         pushbyte 0
         pushdouble -0.5
         pushdouble -0.5
         pushbyte 0
         dup
         pushbyte 1
         pushdouble 0.5
         pushdouble -0.5
         pushbyte 0
         pushbyte 1
         dup
         newarray 20
         call 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Number")>)
         setlocal_2
         getlocal_0
         getlocal_1
         pushbyte 4
         pushbyte 5
         callproperty Qname(PackageNamespace(""),"createVertexBuffer") 2
         initproperty Qname(PrivateNamespace(null,"479"),"vertexBuffer")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"479"),"vertexBuffer")
         getlocal_2
         pushbyte 0
         pushbyte 4
         callpropvoid Qname(PackageNamespace(""),"uploadFromVector") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function apply(param1:Class, param2:Injector, param3:Dictionary) : Object
      {
         trait method Qname(PackageNamespace(""),"apply")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Class")
         param Qname(PackageNamespace("org.swiftsuspenders"),"Injector")
         param Qname(PackageNamespace("flash.utils"),"Dictionary")
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"479"),"vertexBuffer")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function destroy() : void
      {
         trait method Qname(PackageNamespace(""),"destroy")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

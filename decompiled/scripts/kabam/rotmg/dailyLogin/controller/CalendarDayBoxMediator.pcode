package kabam.rotmg.dailyLogin.controller
{
   import com.company.assembleegameclient.map.Map;
   import flash.events.MouseEvent;
   import kabam.lib.net.api.MessageProvider;
   import kabam.lib.net.impl.SocketServer;
   import kabam.rotmg.core.model.MapModel;
   import kabam.rotmg.dailyLogin.message.ClaimDailyRewardMessage;
   import kabam.rotmg.dailyLogin.model.DailyLoginModel;
   import kabam.rotmg.dailyLogin.view.CalendarDayBox;
   import kabam.rotmg.messaging.impl.GameServerConnection;
   import kabam.rotmg.ui.model.HUDModel;
   import robotlegs.bender.bundles.mvcs.Mediator;
   
   public class CalendarDayBoxMediator extends Mediator
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var view:CalendarDayBox;
      
      [Inject]
      public var socketServer:SocketServer;
      
      [Inject]
      public var messages:MessageProvider;
      
      [Inject]
      public var mapModel:MapModel;
      
      [Inject]
      public var hudModel:HUDModel;
      
      [Inject]
      public var model:DailyLoginModel;
      
      public function CalendarDayBoxMediator()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function initialize() : void
      {
         trait method Qname(PackageNamespace(""),"initialize")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getlex Qname(PackageNamespace("flash.events"),"MouseEvent")
         getproperty Qname(PackageNamespace(""),"CLICK")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"402"),"onClickHandler")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method Qname(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getlex Qname(PackageNamespace("flash.events"),"MouseEvent")
         getproperty Qname(PackageNamespace(""),"CLICK")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"402"),"onClickHandler")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         getlocal_0
         callsupervoid Qname(PackageNamespace(""),"destroy") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onClickHandler(param1:MouseEvent) : void
      {
         trait method Qname(PrivateNamespace(null,"402"),"onClickHandler")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"MouseEvent")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("kabam.rotmg.dailyLogin.message"),"ClaimDailyRewardMessage")
         setlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getlex Qname(PackageNamespace("flash.events"),"MouseEvent")
         getproperty Qname(PackageNamespace(""),"CLICK")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"402"),"onClickHandler")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"hudModel")
         getproperty Qname(PackageNamespace(""),"gameSprite")
         getproperty Qname(PackageNamespace(""),"map")
         getproperty Qname(PackageNamespace(""),"name_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"Map")
         getproperty Qname(PackageNamespace(""),"DAILY_QUEST_ROOM")
         equals
         dup
         iffalse ofs0042
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"day")
         getproperty Qname(PackageNamespace(""),"claimKey")
         pushstring ""
         equals
         not
         ofs0042:dup
         iffalse ofs0053
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"day")
         getproperty Qname(PackageNamespace(""),"isClaimed")
         not
         ofs0053:iffalse ofs00ba
         getlocal_0
         getproperty Qname(PackageNamespace(""),"messages")
         getlex Qname(PackageNamespace("kabam.rotmg.messaging.impl"),"GameServerConnection")
         getproperty Qname(PackageNamespace(""),"CLAIM_LOGIN_REWARD_MSG")
         callproperty Qname(Namespace("kabam.lib.net.api:MessageProvider"),"require") 1
         getlex Qname(PackageNamespace("kabam.rotmg.dailyLogin.message"),"ClaimDailyRewardMessage")
         astypelate
         coerce Qname(PackageNamespace("kabam.rotmg.dailyLogin.message"),"ClaimDailyRewardMessage")
         setlocal_2
         getlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"day")
         getproperty Qname(PackageNamespace(""),"claimKey")
         setproperty Qname(PackageNamespace(""),"claimKey")
         getlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         callproperty Qname(PackageNamespace(""),"getDay") 0
         getproperty Qname(PackageNamespace(""),"calendarType")
         setproperty Qname(PackageNamespace(""),"type")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"socketServer")
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"sendMessage") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         callpropvoid Qname(PackageNamespace(""),"markAsClaimed") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"model")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         callproperty Qname(PackageNamespace(""),"getDay") 0
         getproperty Qname(PackageNamespace(""),"dayNumber")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         callproperty Qname(PackageNamespace(""),"getDay") 0
         getproperty Qname(PackageNamespace(""),"calendarType")
         callpropvoid Qname(PackageNamespace(""),"markAsClaimed") 2
         ofs00ba:returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.dailyLogin.config
{
   import flash.geom.ColorTransform;
   import flash.geom.Rectangle;
   
   public class CalendarSettings
   {
      
      public static const NUMBER_OF_COLUMNS:int = 7;
      
      public static const BOX_WIDTH:int = 70;
      
      public static const BOX_HEIGHT:int = 70;
      
      public static const ITEM_SIZE:int = 100;
      
      public static const BOX_MARGIN:int = 10;
      
      public static const BOX_BORDER:int = 2;
      
      public static const CLAIM_WARNING_BEFORE_DAYS:int = 3;
      
      public static const DAILY_LOGIN_MODAL_PADDING:int = 20;
      
      public static const DAILY_LOGIN_TABS_PADDING:int = 10;
      
      public static const DAILY_LOGIN_MODAL_HEIGHT_MARGIN:int = 100;
      
      public static const TABS_HEIGHT:int = 30;
      
      public static const TABS_FONT_SIZE:int = 16;
      
      public static const TABS_WIDTH:int = 200;
      
      public static const TABS_Y_POSITION:int = 70;
      
      public static const GREEN_COLOR_TRANSFORM:ColorTransform;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 6
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         pushbyte 7
         initproperty Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         findproperty Qname(PackageNamespace(""),"BOX_WIDTH")
         pushbyte 70
         initproperty Qname(PackageNamespace(""),"BOX_WIDTH")
         findproperty Qname(PackageNamespace(""),"BOX_HEIGHT")
         pushbyte 70
         initproperty Qname(PackageNamespace(""),"BOX_HEIGHT")
         findproperty Qname(PackageNamespace(""),"ITEM_SIZE")
         pushbyte 100
         initproperty Qname(PackageNamespace(""),"ITEM_SIZE")
         findproperty Qname(PackageNamespace(""),"BOX_MARGIN")
         pushbyte 10
         initproperty Qname(PackageNamespace(""),"BOX_MARGIN")
         findproperty Qname(PackageNamespace(""),"BOX_BORDER")
         pushbyte 2
         initproperty Qname(PackageNamespace(""),"BOX_BORDER")
         findproperty Qname(PackageNamespace(""),"CLAIM_WARNING_BEFORE_DAYS")
         pushbyte 3
         initproperty Qname(PackageNamespace(""),"CLAIM_WARNING_BEFORE_DAYS")
         findproperty Qname(PackageNamespace(""),"DAILY_LOGIN_MODAL_PADDING")
         pushbyte 20
         initproperty Qname(PackageNamespace(""),"DAILY_LOGIN_MODAL_PADDING")
         findproperty Qname(PackageNamespace(""),"DAILY_LOGIN_TABS_PADDING")
         pushbyte 10
         initproperty Qname(PackageNamespace(""),"DAILY_LOGIN_TABS_PADDING")
         findproperty Qname(PackageNamespace(""),"DAILY_LOGIN_MODAL_HEIGHT_MARGIN")
         pushbyte 100
         initproperty Qname(PackageNamespace(""),"DAILY_LOGIN_MODAL_HEIGHT_MARGIN")
         findproperty Qname(PackageNamespace(""),"TABS_HEIGHT")
         pushbyte 30
         initproperty Qname(PackageNamespace(""),"TABS_HEIGHT")
         findproperty Qname(PackageNamespace(""),"TABS_FONT_SIZE")
         pushbyte 16
         initproperty Qname(PackageNamespace(""),"TABS_FONT_SIZE")
         findproperty Qname(PackageNamespace(""),"TABS_WIDTH")
         pushshort 200
         initproperty Qname(PackageNamespace(""),"TABS_WIDTH")
         findproperty Qname(PackageNamespace(""),"TABS_Y_POSITION")
         pushbyte 70
         initproperty Qname(PackageNamespace(""),"TABS_Y_POSITION")
         findproperty Qname(PackageNamespace(""),"GREEN_COLOR_TRANSFORM")
         findpropstrict Qname(PackageNamespace("flash.geom"),"ColorTransform")
         pushbyte 0
         pushshort 198
         pushshort 255
         divide
         pushbyte 6
         pushshort 255
         divide
         constructprop Qname(PackageNamespace("flash.geom"),"ColorTransform") 3
         initproperty Qname(PackageNamespace(""),"GREEN_COLOR_TRANSFORM")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function CalendarSettings()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getCalendarModalRectangle(param1:int, param2:Boolean) : Rectangle
      {
         trait method Qname(PackageNamespace(""),"getCalendarModalRectangle")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 7
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_1
         getlex Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         divide
         callproperty Qname(PackageNamespace(""),"ceil") 1
         convert_i
         setlocal_3
         findpropstrict Qname(PackageNamespace("flash.geom"),"Rectangle")
         pushbyte 0
         dup
         pushbyte 2
         getlex Qname(PackageNamespace(""),"DAILY_LOGIN_MODAL_PADDING")
         multiply
         pushbyte 2
         getlex Qname(PackageNamespace(""),"DAILY_LOGIN_TABS_PADDING")
         multiply
         add
         getlex Qname(PackageNamespace(""),"BOX_WIDTH")
         getlex Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         multiply
         add
         getlex Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         decrement
         getlex Qname(PackageNamespace(""),"BOX_MARGIN")
         multiply
         add
         getlex Qname(PackageNamespace(""),"TABS_HEIGHT")
         pushbyte 2
         getlex Qname(PackageNamespace(""),"DAILY_LOGIN_TABS_PADDING")
         multiply
         add
         pushbyte 2
         getlex Qname(PackageNamespace(""),"DAILY_LOGIN_MODAL_PADDING")
         multiply
         add
         getlex Qname(PackageNamespace(""),"BOX_HEIGHT")
         getlocal_3
         multiply
         add
         getlocal_3
         decrement
         getlex Qname(PackageNamespace(""),"BOX_MARGIN")
         multiply
         add
         getlex Qname(PackageNamespace(""),"DAILY_LOGIN_MODAL_HEIGHT_MARGIN")
         add
         getlocal_2
         iffalse ofs0070
         pushbyte 20
         coerce_a
         jump ofs0073
         ofs0070:pushbyte 0
         coerce_a
         ofs0073:add
         constructprop Qname(PackageNamespace("flash.geom"),"Rectangle") 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getTabsRectangle(param1:int) : Rectangle
      {
         trait method Qname(PackageNamespace(""),"getTabsRectangle")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 7
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_1
         getlex Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         divide
         callproperty Qname(PackageNamespace(""),"ceil") 1
         convert_i
         setlocal_2
         findpropstrict Qname(PackageNamespace("flash.geom"),"Rectangle")
         pushbyte 0
         dup
         getlex Qname(PackageNamespace(""),"BOX_WIDTH")
         getlex Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         multiply
         getlex Qname(PackageNamespace(""),"NUMBER_OF_COLUMNS")
         decrement
         getlex Qname(PackageNamespace(""),"BOX_MARGIN")
         multiply
         add
         pushbyte 2
         getlex Qname(PackageNamespace(""),"DAILY_LOGIN_TABS_PADDING")
         multiply
         add
         getlex Qname(PackageNamespace(""),"BOX_HEIGHT")
         getlocal_2
         multiply
         getlocal_2
         decrement
         getlex Qname(PackageNamespace(""),"BOX_MARGIN")
         multiply
         add
         pushbyte 2
         getlex Qname(PackageNamespace(""),"DAILY_LOGIN_TABS_PADDING")
         multiply
         add
         constructprop Qname(PackageNamespace("flash.geom"),"Rectangle") 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

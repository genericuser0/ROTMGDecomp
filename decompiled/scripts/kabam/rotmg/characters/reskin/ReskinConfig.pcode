package kabam.rotmg.characters.reskin
{
   import kabam.lib.net.api.MessageMap;
   import kabam.rotmg.characters.reskin.control.AddReskinConsoleActionCommand;
   import kabam.rotmg.characters.reskin.control.AddReskinConsoleActionSignal;
   import kabam.rotmg.characters.reskin.control.OpenReskinDialogCommand;
   import kabam.rotmg.characters.reskin.control.OpenReskinDialogSignal;
   import kabam.rotmg.characters.reskin.control.ReskinCharacterCommand;
   import kabam.rotmg.characters.reskin.control.ReskinCharacterSignal;
   import kabam.rotmg.characters.reskin.control.ReskinHandler;
   import kabam.rotmg.characters.reskin.view.ReskinCharacterMediator;
   import kabam.rotmg.characters.reskin.view.ReskinCharacterView;
   import kabam.rotmg.characters.reskin.view.ReskinPanel;
   import kabam.rotmg.characters.reskin.view.ReskinPanelMediator;
   import kabam.rotmg.messaging.impl.GameServerConnection;
   import kabam.rotmg.messaging.impl.outgoing.Reskin;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;
   import robotlegs.bender.extensions.signalCommandMap.api.ISignalCommandMap;
   import robotlegs.bender.framework.api.IConfig;
   import robotlegs.bender.framework.api.IContext;
   
   public class ReskinConfig implements IConfig
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var context:IContext;
      
      [Inject]
      public var injector:Injector;
      
      [Inject]
      public var mediatorMap:IMediatorMap;
      
      [Inject]
      public var commandMap:ISignalCommandMap;
      
      [Inject]
      public var messageMap:MessageMap;
      
      public function ReskinConfig()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function configure() : void
      {
         trait method Qname(PackageNamespace(""),"configure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.view"),"ReskinCharacterView")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.view"),"ReskinCharacterMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mediatorMap")
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.view"),"ReskinPanel")
         callproperty Qname(Namespace("robotlegs.bender.extensions.mediatorMap.api:IMediatorMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.view"),"ReskinPanelMediator")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.mediatorMap.dsl:IMediatorMapper"),"toMediator") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"AddReskinConsoleActionSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"AddReskinConsoleActionCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"OpenReskinDialogSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"OpenReskinDialogCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"commandMap")
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"ReskinCharacterSignal")
         callproperty Qname(Namespace("robotlegs.bender.extensions.signalCommandMap.api:ISignalCommandMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"ReskinCharacterCommand")
         callpropvoid Qname(Namespace("robotlegs.bender.extensions.commandCenter.dsl:ICommandMapper"),"toCommand") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"messageMap")
         getlex Qname(PackageNamespace("kabam.rotmg.messaging.impl"),"GameServerConnection")
         getproperty Qname(PackageNamespace(""),"RESKIN")
         callproperty Qname(Namespace("kabam.lib.net.api:MessageMap"),"map") 1
         getlex Qname(PackageNamespace("kabam.rotmg.messaging.impl.outgoing"),"Reskin")
         callproperty Qname(Namespace("kabam.lib.net.api:MessageMapping"),"toMessage") 1
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"ReskinHandler")
         callpropvoid Qname(Namespace("kabam.lib.net.api:MessageMapping"),"toHandler") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"context")
         getproperty Qname(Namespace("robotlegs.bender.framework.api:IContext"),"lifecycle")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"387"),"onInit")
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILifecycle"),"afterInitializing") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onInit() : void
      {
         trait method Qname(PrivateNamespace(null,"387"),"onInit")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"injector")
         getlex Qname(PackageNamespace("kabam.rotmg.characters.reskin.control"),"AddReskinConsoleActionSignal")
         callproperty Qname(PackageNamespace(""),"getInstance") 1
         callpropvoid Multiname("dispatch",[PrivateNamespace(null,"387"),PackageNamespace(""),PrivateNamespace(null,"1455"),PackageNamespace("kabam.rotmg.characters.reskin"),PackageInternalNs("kabam.rotmg.characters.reskin"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.characters.reskin:ReskinConfig"),StaticProtectedNs("kabam.rotmg.characters.reskin:ReskinConfig")]) 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package kabam.rotmg.core.model
{
   import com.company.assembleegameclient.appengine.SavedCharacter;
   import com.company.assembleegameclient.appengine.SavedCharactersList;
   import com.company.assembleegameclient.appengine.SavedNewsItem;
   import com.company.assembleegameclient.parameters.Parameters;
   import kabam.rotmg.account.core.Account;
   import kabam.rotmg.account.kongregate.KongregateAccount;
   import kabam.rotmg.servers.api.LatLong;
   import org.osflash.signals.Signal;
   
   public class PlayerModel
   {
      
      public static const CHARACTER_SLOT_PRICES:Array;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 4
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"CHARACTER_SLOT_PRICES")
         pushshort 600
         pushshort 800
         pushshort 1000
         newarray 3
         initproperty Qname(PackageNamespace(""),"CHARACTER_SLOT_PRICES")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public const creditsChanged:Signal;
      
      public const fameChanged:Signal;
      
      public const tokensChanged:Signal;
      
      public var charList:SavedCharactersList;
      
      public var isInvalidated:Boolean;
      
      private var _currentCharId:int;
      
      private var isAgeVerified:Boolean;
      
      private var _isNameChosen:Boolean;
      
      private var _isLogOutLogIn:Boolean;
      
      private var _hasShownUnitySignUp:Boolean;
      
      [Inject]
      public var account:Account;
      
      public function PlayerModel()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         getlex Qname(PackageNamespace(""),"int")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 1
         initproperty Qname(PackageNamespace(""),"creditsChanged")
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         getlex Qname(PackageNamespace(""),"int")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 1
         initproperty Qname(PackageNamespace(""),"fameChanged")
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         getlex Qname(PackageNamespace(""),"int")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 1
         initproperty Qname(PackageNamespace(""),"tokensChanged")
         getlocal_0
         constructsuper 0
         getlocal_0
         pushtrue
         initproperty Qname(PackageNamespace(""),"isInvalidated")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set currentCharId(param1:int) : void
      {
         trait setter Qname(PackageNamespace(""),"currentCharId")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"512"),"_currentCharId")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get currentCharId() : int
      {
         trait getter Qname(PackageNamespace(""),"currentCharId")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"512"),"_currentCharId")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getHasPlayerDied() : Boolean
      {
         trait method Qname(PackageNamespace(""),"getHasPlayerDied")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"hasPlayerDied")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasPlayerDied(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setHasPlayerDied")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"hasPlayerDied")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getIsAgeVerified() : Boolean
      {
         trait method Qname(PackageNamespace(""),"getIsAgeVerified")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"512"),"isAgeVerified")
         convert_b
         dup
         iftrue ofs0015
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"account")
         getlex Qname(PackageNamespace("kabam.rotmg.account.kongregate"),"KongregateAccount")
         istypelate
         ofs0015:dup
         iftrue ofs0023
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"isAgeVerified")
         convert_b
         ofs0023:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setIsAgeVerified(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setIsAgeVerified")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         pushtrue
         initproperty Qname(PrivateNamespace(null,"512"),"isAgeVerified")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isNewPlayer() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isNewPlayer")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("com.company.assembleegameclient.parameters"),"Parameters")
         getproperty Qname(PackageNamespace(""),"data_")
         getproperty Multiname("needsTutorial",[PrivateNamespace(null,"512"),PackageNamespace(""),PrivateNamespace(null,"1540"),PackageNamespace("kabam.rotmg.core.model"),PackageInternalNs("kabam.rotmg.core.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.core.model:PlayerModel"),StaticProtectedNs("kabam.rotmg.core.model:PlayerModel")])
         convert_b
         dup
         iffalse ofs001d
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"nextCharId_")
         pushbyte 1
         equals
         ofs001d:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMaxCharacters() : int
      {
         trait method Qname(PackageNamespace(""),"getMaxCharacters")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"maxNumChars_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setMaxCharacters(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setMaxCharacters")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"maxNumChars_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getCredits() : int
      {
         trait method Qname(PackageNamespace(""),"getCredits")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"credits_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getSalesForceData() : String
      {
         trait method Qname(PackageNamespace(""),"getSalesForceData")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"salesForceData_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function changeCredits(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"changeCredits")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"credits_")
         getlocal_1
         add
         setproperty Qname(PackageNamespace(""),"credits_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"creditsChanged")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"credits_")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setCredits(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setCredits")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"credits_")
         getlocal_1
         ifeq ofs001f
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"credits_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"creditsChanged")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         ofs001f:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getFame() : int
      {
         trait method Qname(PackageNamespace(""),"getFame")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"fame_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setFame(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setFame")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"fame_")
         getlocal_1
         ifeq ofs001f
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"fame_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"fameChanged")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         ofs001f:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getTokens() : int
      {
         trait method Qname(PackageNamespace(""),"getTokens")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"tokens_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTokens(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setTokens")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"tokens_")
         getlocal_1
         ifeq ofs001f
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"tokens_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"tokensChanged")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         ofs001f:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getCharacterCount() : int
      {
         trait method Qname(PackageNamespace(""),"getCharacterCount")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"numChars_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getCharById(param1:int) : SavedCharacter
      {
         trait method Qname(PackageNamespace(""),"getCharById")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharacter")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"getCharById") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function deleteCharacter(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"deleteCharacter")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"getCharById") 1
         coerce Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharacter")
         setlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"savedChars_")
         getlocal_2
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         convert_i
         setlocal_3
         getlocal_3
         pushbyte -1
         ifeq ofs004c
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"savedChars_")
         getlocal_3
         pushbyte 1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"splice") 2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         dup
         setlocal 4
         getproperty Qname(PackageNamespace(""),"numChars_")
         decrement_i
         setlocal 5
         getlocal 4
         getlocal 5
         setproperty Qname(PackageNamespace(""),"numChars_")
         kill 5
         kill 4
         ofs004c:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getAccountId() : String
      {
         trait method Qname(PackageNamespace(""),"getAccountId")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"accountId_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasAccount() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasAccount")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"accountId_")
         pushstring ""
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getNumStars() : int
      {
         trait method Qname(PackageNamespace(""),"getNumStars")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"numStars_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getGuildName() : String
      {
         trait method Qname(PackageNamespace(""),"getGuildName")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"guildName_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getGuildRank() : int
      {
         trait method Qname(PackageNamespace(""),"getGuildRank")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"guildRank_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getNextCharSlotPrice() : int
      {
         trait method Qname(PackageNamespace(""),"getNextCharSlotPrice")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"Math")
         getlex Qname(PackageNamespace(""),"CHARACTER_SLOT_PRICES")
         getproperty Qname(PackageNamespace(""),"length")
         decrement
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"maxNumChars_")
         decrement
         callproperty Qname(PackageNamespace(""),"min") 2
         convert_i
         setlocal_1
         getlex Qname(PackageNamespace(""),"CHARACTER_SLOT_PRICES")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"512"),PackageNamespace(""),PrivateNamespace(null,"1540"),PackageNamespace("kabam.rotmg.core.model"),PackageInternalNs("kabam.rotmg.core.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.core.model:PlayerModel"),StaticProtectedNs("kabam.rotmg.core.model:PlayerModel")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTotalFame() : int
      {
         trait method Qname(PackageNamespace(""),"getTotalFame")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"totalFame_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getNextCharId() : int
      {
         trait method Qname(PackageNamespace(""),"getNextCharId")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"nextCharId_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getCharacterById(param1:int) : SavedCharacter
      {
         trait method Qname(PackageNamespace(""),"getCharacterById")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharacter")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharacter")
         setlocal_2
         pushbyte 0
         setlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"savedChars_")
         coerce_a
         setlocal 4
         jump ofs002d
         ofs0018:label
         getlocal 4
         getlocal_3
         nextvalue
         coerce Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharacter")
         setlocal_2
         getlocal_2
         callproperty Qname(PackageNamespace(""),"charId") 0
         getlocal_1
         ifne ofs002d
         getlocal_2
         returnvalue
         ofs002d:hasnext2 4 3
         iftrue ofs0018
         kill 4
         kill 3
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getCharacterByIndex(param1:int) : SavedCharacter
      {
         trait method Qname(PackageNamespace(""),"getCharacterByIndex")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharacter")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"savedChars_")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"512"),PackageNamespace(""),PrivateNamespace(null,"1540"),PackageNamespace("kabam.rotmg.core.model"),PackageInternalNs("kabam.rotmg.core.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.core.model:PlayerModel"),StaticProtectedNs("kabam.rotmg.core.model:PlayerModel")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isAdmin() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isAdmin")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"isAdmin_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function mapEditor() : Boolean
      {
         trait method Qname(PackageNamespace(""),"mapEditor")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"canMapEdit_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getNews() : Vector.<SavedNewsItem>
      {
         trait method Qname(PackageNamespace(""),"getNews")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedNewsItem")>)
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"news_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMyPos() : LatLong
      {
         trait method Qname(PackageNamespace(""),"getMyPos")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.servers.api"),"LatLong")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"myPos_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setClassAvailability(param1:int, param2:String) : void
      {
         trait method Qname(PackageNamespace(""),"setClassAvailability")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"classAvailability")
         getlocal_1
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"512"),PackageNamespace(""),PrivateNamespace(null,"1540"),PackageNamespace("kabam.rotmg.core.model"),PackageInternalNs("kabam.rotmg.core.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.core.model:PlayerModel"),StaticProtectedNs("kabam.rotmg.core.model:PlayerModel")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getName() : String
      {
         trait method Qname(PackageNamespace(""),"getName")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"name_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getConverted() : Boolean
      {
         trait method Qname(PackageNamespace(""),"getConverted")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"converted_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setName(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"setName")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"name_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get isNameChosen() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"isNameChosen")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"512"),"_isNameChosen")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getNewUnlocks(param1:int, param2:int) : Array
      {
         trait method Qname(PackageNamespace(""),"getNewUnlocks")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"newUnlocks") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasAvailableCharSlot() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasAvailableCharSlot")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         callproperty Qname(PackageNamespace(""),"hasAvailableCharSlot") 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getAvailableCharSlots() : int
      {
         trait method Qname(PackageNamespace(""),"getAvailableCharSlots")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         callproperty Qname(PackageNamespace(""),"availableCharSlots") 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getSavedCharacters() : Vector.<SavedCharacter>
      {
         trait method Qname(PackageNamespace(""),"getSavedCharacters")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharacter")>)
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"savedChars_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getCharStats() : Object
      {
         trait method Qname(PackageNamespace(""),"getCharStats")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"charStats_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isClassAvailability(param1:String, param2:String) : Boolean
      {
         trait method Qname(PackageNamespace(""),"isClassAvailability")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"classAvailability")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"512"),PackageNamespace(""),PrivateNamespace(null,"1540"),PackageNamespace("kabam.rotmg.core.model"),PackageInternalNs("kabam.rotmg.core.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.core.model:PlayerModel"),StaticProtectedNs("kabam.rotmg.core.model:PlayerModel")])
         coerce_s
         setlocal_3
         getlocal_3
         getlocal_2
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isLevelRequirementsMet(param1:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"isLevelRequirementsMet")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"levelRequirementsMet") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getBestFame(param1:int) : int
      {
         trait method Qname(PackageNamespace(""),"getBestFame")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"bestFame") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getBestLevel(param1:int) : int
      {
         trait method Qname(PackageNamespace(""),"getBestLevel")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"bestLevel") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getBestCharFame() : int
      {
         trait method Qname(PackageNamespace(""),"getBestCharFame")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"bestCharFame_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setCharacterList(param1:SavedCharactersList) : void
      {
         trait method Qname(PackageNamespace(""),"setCharacterList")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.appengine"),"SavedCharactersList")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"charList")
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         getproperty Qname(PackageNamespace(""),"nameChosen_")
         initproperty Qname(PrivateNamespace(null,"512"),"_isNameChosen")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isNewToEditing() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isNewToEditing")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         convert_b
         dup
         iffalse ofs0016
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charList")
         callproperty Qname(PackageNamespace(""),"isFirstTimeLogin") 0
         not
         ofs0016:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set isNameChosen(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"isNameChosen")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"512"),"_isNameChosen")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function name() : void
      {
         trait method Qname(PackageNamespace(""),"name")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get isLogOutLogIn() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"isLogOutLogIn")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"512"),"_isLogOutLogIn")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set isLogOutLogIn(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"isLogOutLogIn")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"512"),"_isLogOutLogIn")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get hasShownUnitySignUp() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"hasShownUnitySignUp")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"512"),"_hasShownUnitySignUp")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set hasShownUnitySignUp(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"hasShownUnitySignUp")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"512"),"_hasShownUnitySignUp")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

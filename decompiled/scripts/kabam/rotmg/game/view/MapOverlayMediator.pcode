package kabam.rotmg.game.view
{
   import com.company.assembleegameclient.map.mapoverlay.MapOverlay;
   import com.company.assembleegameclient.map.mapoverlay.SpeechBalloon;
   import kabam.rotmg.account.core.Account;
   import kabam.rotmg.game.model.AddSpeechBalloonVO;
   import kabam.rotmg.game.model.ChatFilter;
   import kabam.rotmg.game.signals.AddSpeechBalloonSignal;
   import robotlegs.bender.bundles.mvcs.Mediator;
   
   public class MapOverlayMediator extends Mediator
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var view:MapOverlay;
      
      [Inject]
      public var addSpeechBalloon:AddSpeechBalloonSignal;
      
      [Inject]
      public var chatFilter:ChatFilter;
      
      [Inject]
      public var account:Account;
      
      public function MapOverlayMediator()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function initialize() : void
      {
         trait method Qname(PackageNamespace(""),"initialize")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"addSpeechBalloon")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"357"),"onAddSpeechBalloon")
         callpropvoid Qname(PackageNamespace(""),"add") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method Qname(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"addSpeechBalloon")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"357"),"onAddSpeechBalloon")
         callpropvoid Qname(PackageNamespace(""),"remove") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onAddSpeechBalloon(param1:AddSpeechBalloonVO) : void
      {
         trait method Qname(PrivateNamespace(null,"357"),"onAddSpeechBalloon")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("kabam.rotmg.game.model"),"AddSpeechBalloonVO")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 14
         localcount 4
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"account")
         callproperty Qname(Namespace("kabam.rotmg.account.core:Account"),"isRegistered") 0
         convert_b
         dup
         iftrue ofs0021
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"chatFilter")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"go")
         getproperty Qname(PackageNamespace(""),"name_")
         callproperty Qname(PackageNamespace(""),"guestChatFilter") 1
         convert_b
         ofs0021:iffalse ofs002e
         getlocal_1
         getproperty Qname(PackageNamespace(""),"text")
         coerce_s
         jump ofs0032
         ofs002e:pushstring ". . ."
         ofs0032:coerce_s
         setlocal_2
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.map.mapoverlay"),"SpeechBalloon")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"go")
         getlocal_2
         getlocal_1
         getproperty Qname(PackageNamespace(""),"name")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"isTrade")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"isGuild")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"background")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"backgroundAlpha")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"outline")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"outlineAlpha")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"textColor")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"lifetime")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"bold")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"hideable")
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.map.mapoverlay"),"SpeechBalloon") 13
         coerce Qname(PackageNamespace("com.company.assembleegameclient.map.mapoverlay"),"SpeechBalloon")
         setlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"addSpeechBalloon") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

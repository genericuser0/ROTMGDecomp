package kabam.rotmg.ui.view
{
   import com.company.assembleegameclient.screens.CharacterSelectionAndNewsScreen;
   import com.company.assembleegameclient.screens.ServersScreen;
   import kabam.rotmg.account.securityQuestions.data.SecurityQuestionsModel;
   import kabam.rotmg.account.securityQuestions.view.SecurityQuestionsInfoDialog;
   import kabam.rotmg.core.signals.SetScreenSignal;
   import kabam.rotmg.dialogs.control.OpenDialogSignal;
   import kabam.rotmg.servers.api.Server;
   import kabam.rotmg.servers.api.ServerModel;
   import robotlegs.bender.bundles.mvcs.Mediator;
   
   public class ServersMediator extends Mediator
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var view:ServersScreen;
      
      [Inject]
      public var servers:ServerModel;
      
      [Inject]
      public var setScreen:SetScreenSignal;
      
      [Inject]
      public var openDialog:OpenDialogSignal;
      
      [Inject]
      public var securityQuestionsModel:SecurityQuestionsModel;
      
      public function ServersMediator()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function initialize() : void
      {
         trait method Qname(PackageNamespace(""),"initialize")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"gotoTitle")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"220"),"onGotoTitle")
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"isChallenger")
         iffalse ofs0027
         getlex Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")
         getproperty Qname(PackageNamespace(""),"CHALLENGER_SERVER")
         convert_i
         jump ofs002e
         ofs0027:getlex Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")
         getproperty Qname(PackageNamespace(""),"NORMAL_SERVER")
         convert_i
         ofs002e:convert_i
         setlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"servers")
         getlocal_1
         callpropvoid Qname(Namespace("kabam.rotmg.servers.api:ServerModel"),"setAvailableServers") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"servers")
         callproperty Qname(Namespace("kabam.rotmg.servers.api:ServerModel"),"getAvailableServers") 0
         callpropvoid Qname(PackageNamespace(""),"initialize") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"securityQuestionsModel")
         getproperty Qname(PackageNamespace(""),"showSecurityQuestionsOnStartup")
         iffalse ofs0063
         getlocal_0
         getproperty Qname(PackageNamespace(""),"openDialog")
         findpropstrict Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.view"),"SecurityQuestionsInfoDialog")
         constructprop Qname(PackageNamespace("kabam.rotmg.account.securityQuestions.view"),"SecurityQuestionsInfoDialog") 0
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         ofs0063:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method Qname(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"gotoTitle")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"220"),"onGotoTitle")
         callpropvoid Qname(PackageNamespace(""),"remove") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onGotoTitle() : void
      {
         trait method Qname(PrivateNamespace(null,"220"),"onGotoTitle")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"setScreen")
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.screens"),"CharacterSelectionAndNewsScreen")
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.screens"),"CharacterSelectionAndNewsScreen") 0
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

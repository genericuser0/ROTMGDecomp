package kabam.rotmg.ui.view
{
   import com.company.assembleegameclient.mapeditor.MapEditor;
   import com.company.assembleegameclient.ui.dialogs.ConfirmDialog;
   import flash.events.MouseEvent;
   import kabam.rotmg.core.model.PlayerModel;
   import kabam.rotmg.dialogs.control.OpenDialogSignal;
   import kabam.rotmg.game.signals.GameClosedSignal;
   import kabam.rotmg.servers.api.ServerModel;
   import robotlegs.bender.bundles.mvcs.Mediator;
   
   public class MapEditorMediator extends Mediator
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var view:MapEditor;
      
      [Inject]
      public var model:PlayerModel;
      
      [Inject]
      public var servers:ServerModel;
      
      [Inject]
      public var gameClosed:GameClosedSignal;
      
      [Inject]
      public var openDialog:OpenDialogSignal;
      
      public function MapEditorMediator()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function initialize() : void
      {
         trait method Qname(PackageNamespace(""),"initialize")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"model")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"servers")
         callproperty Qname(Namespace("kabam.rotmg.servers.api:ServerModel"),"getServer") 0
         callpropvoid Qname(PackageNamespace(""),"initialize") 2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"editingScreen_")
         getproperty Qname(PackageNamespace(""),"returnButton_")
         getlex Qname(PackageNamespace("flash.events"),"MouseEvent")
         getproperty Qname(PackageNamespace(""),"CLICK")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"241"),"onReturnPhase1")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method Qname(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"editingScreen_")
         getproperty Qname(PackageNamespace(""),"returnButton_")
         getlex Qname(PackageNamespace("flash.events"),"MouseEvent")
         getproperty Qname(PackageNamespace(""),"CLICK")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"241"),"onReturnPhase1")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onReturnPhase1(param1:MouseEvent) : void
      {
         trait method Qname(PrivateNamespace(null,"241"),"onReturnPhase1")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"MouseEvent")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.ui.dialogs"),"ConfirmDialog")
         pushstring "Go Back"
         pushstring "Are you sure you want to return to the title screen? This will erase your map data."
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"241"),"onReturn")
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.ui.dialogs"),"ConfirmDialog") 3
         coerce Qname(PackageNamespace("com.company.assembleegameclient.ui.dialogs"),"ConfirmDialog")
         setlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"openDialog")
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onReturn() : void
      {
         trait method Qname(PrivateNamespace(null,"241"),"onReturn")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"gameClosed")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

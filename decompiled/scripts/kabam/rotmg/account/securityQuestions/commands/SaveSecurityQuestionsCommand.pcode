package kabam.rotmg.account.securityQuestions.commands
{
   import kabam.lib.tasks.BranchingTask;
   import kabam.lib.tasks.DispatchSignalTask;
   import kabam.lib.tasks.Task;
   import kabam.lib.tasks.TaskMonitor;
   import kabam.lib.tasks.TaskSequence;
   import kabam.rotmg.account.securityQuestions.data.SecurityQuestionsModel;
   import kabam.rotmg.account.securityQuestions.tasks.SaveSecurityQuestionsTask;
   import kabam.rotmg.core.service.TrackingData;
   import kabam.rotmg.core.signals.TaskErrorSignal;
   import kabam.rotmg.core.signals.TrackEventSignal;
   import kabam.rotmg.dialogs.control.CloseDialogsSignal;
   
   public class SaveSecurityQuestionsCommand
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var task:SaveSecurityQuestionsTask;
      
      [Inject]
      public var monitor:TaskMonitor;
      
      [Inject]
      public var taskError:TaskErrorSignal;
      
      [Inject]
      public var closeDialogs:CloseDialogsSignal;
      
      [Inject]
      public var track:TrackEventSignal;
      
      [Inject]
      public var securityQuestionsModel:SecurityQuestionsModel;
      
      public function SaveSecurityQuestionsCommand()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function execute() : void
      {
         trait method Qname(PackageNamespace(""),"execute")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("kabam.lib.tasks"),"BranchingTask")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"task")
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"436"),"makeSuccess") 0
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"436"),"makeFailure") 0
         constructprop Qname(PackageNamespace("kabam.lib.tasks"),"BranchingTask") 3
         coerce Qname(PackageNamespace("kabam.lib.tasks"),"BranchingTask")
         setlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"monitor")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"start") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function makeSuccess() : Task
      {
         trait method Qname(PrivateNamespace(null,"436"),"makeSuccess")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.lib.tasks"),"Task")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("kabam.lib.tasks"),"TaskSequence")
         constructprop Qname(PackageNamespace("kabam.lib.tasks"),"TaskSequence") 0
         coerce Qname(PackageNamespace("kabam.lib.tasks"),"TaskSequence")
         setlocal_1
         getlocal_1
         findpropstrict Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"closeDialogs")
         constructprop Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask") 1
         callpropvoid Qname(PackageNamespace(""),"add") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"securityQuestionsModel")
         pushfalse
         setproperty Qname(PackageNamespace(""),"showSecurityQuestionsOnStartup")
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function makeFailure() : DispatchSignalTask
      {
         trait method Qname(PrivateNamespace(null,"436"),"makeFailure")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"taskError")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"task")
         constructprop Qname(PackageNamespace("kabam.lib.tasks"),"DispatchSignalTask") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function getTrackingData() : TrackingData
      {
         trait method Qname(PrivateNamespace(null,"436"),"getTrackingData")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.core.service"),"TrackingData")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("kabam.rotmg.core.service"),"TrackingData")
         constructprop Qname(PackageNamespace("kabam.rotmg.core.service"),"TrackingData") 0
         coerce Qname(PackageNamespace("kabam.rotmg.core.service"),"TrackingData")
         setlocal_1
         getlocal_1
         pushstring "account"
         setproperty Qname(PackageNamespace(""),"category")
         getlocal_1
         pushstring "saveSecurityQuestions"
         setproperty Qname(PackageNamespace(""),"action")
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

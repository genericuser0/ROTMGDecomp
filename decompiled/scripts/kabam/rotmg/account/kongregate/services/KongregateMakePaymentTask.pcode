package kabam.rotmg.account.kongregate.services
{
   import com.company.assembleegameclient.util.offer.Offer;
   import kabam.lib.tasks.BaseTask;
   import kabam.rotmg.account.core.Account;
   import kabam.rotmg.account.core.PaymentData;
   import kabam.rotmg.account.core.services.MakePaymentTask;
   import kabam.rotmg.account.kongregate.view.KongregateApi;
   
   public class KongregateMakePaymentTask extends BaseTask implements MakePaymentTask
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var payment:PaymentData;
      
      [Inject]
      public var account:Account;
      
      [Inject]
      public var api:KongregateApi;
      
      public function KongregateMakePaymentTask()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function startTask() : void
      {
         trait method Qname(ProtectedNamespace("kabam.rotmg.account.kongregate.services:KongregateMakePaymentTask"),"startTask")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"payment")
         getproperty Qname(PackageNamespace(""),"offer")
         coerce Qname(PackageNamespace("com.company.assembleegameclient.util.offer"),"Offer")
         setlocal_1
         pushstring "identifier"
         getlocal_1
         getproperty Qname(PackageNamespace(""),"id_")
         pushstring "data"
         getlocal_1
         getproperty Qname(PackageNamespace(""),"data_")
         newobject 2
         coerce Qname(PackageNamespace(""),"Object")
         setlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"api")
         getproperty Qname(Namespace("kabam.rotmg.account.kongregate.view:KongregateApi"),"purchaseResponse")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"859"),"onPurchaseResult")
         callpropvoid Qname(PackageNamespace(""),"addOnce") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"api")
         getlocal_2
         callpropvoid Qname(Namespace("kabam.rotmg.account.kongregate.view:KongregateApi"),"purchaseItems") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onPurchaseResult(param1:Object) : void
      {
         trait method Qname(PrivateNamespace(null,"859"),"onPurchaseResult")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         pushtrue
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

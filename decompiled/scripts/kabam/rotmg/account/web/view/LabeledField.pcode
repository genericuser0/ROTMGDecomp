package kabam.rotmg.account.web.view
{
   import com.company.ui.BaseSimpleText;
   import flash.filters.DropShadowFilter;
   import kabam.rotmg.text.view.TextFieldDisplayConcrete;
   import kabam.rotmg.text.view.stringBuilder.LineBuilder;
   import org.osflash.signals.Signal;
   
   public class LabeledField extends FormField
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var nameText_:TextFieldDisplayConcrete;
      
      public var inputText_:BaseSimpleText;
      
      public var isHighlighted:Boolean;
      
      public function LabeledField(param1:String, param2:Boolean, param3:uint = 238, param4:uint = 30)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         optional 238
         optional 30
         returns null
         
         body
         maxstack 7
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         findpropstrict Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete")
         constructprop Qname(PackageNamespace("kabam.rotmg.text.view"),"TextFieldDisplayConcrete") 0
         pushbyte 18
         callproperty Qname(PackageNamespace(""),"setSize") 1
         getlex Qname(StaticProtectedNs("kabam.rotmg.account.web.view:FormField"),"TEXT_COLOR")
         callproperty Qname(PackageNamespace(""),"setColor") 1
         initproperty Qname(PackageNamespace(""),"nameText_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"nameText_")
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"setBold") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"nameText_")
         findpropstrict Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"LineBuilder")
         constructprop Qname(PackageNamespace("kabam.rotmg.text.view.stringBuilder"),"LineBuilder") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"setParams") 1
         callpropvoid Qname(PackageNamespace(""),"setStringBuilder") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"nameText_")
         findpropstrict Qname(PackageNamespace("flash.filters"),"DropShadowFilter")
         pushbyte 0
         dup
         dup
         constructprop Qname(PackageNamespace("flash.filters"),"DropShadowFilter") 3
         newarray 1
         setproperty Qname(PackageNamespace(""),"filters")
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"nameText_")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.company.ui"),"BaseSimpleText")
         pushbyte 20
         getlex Qname(StaticProtectedNs("kabam.rotmg.account.web.view:FormField"),"TEXT_COLOR")
         pushtrue
         getlocal_3
         getlocal 4
         constructprop Qname(PackageNamespace("com.company.ui"),"BaseSimpleText") 5
         initproperty Qname(PackageNamespace(""),"inputText_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         pushbyte 30
         setproperty Qname(PackageNamespace(""),"y")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         pushbyte 6
         setproperty Qname(PackageNamespace(""),"x")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         pushfalse
         setproperty Qname(PackageNamespace(""),"border")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         getlocal_2
         setproperty Qname(PackageNamespace(""),"displayAsPassword")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         callpropvoid Qname(PackageNamespace(""),"updateMetrics") 0
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         getlocal_0
         pushfalse
         callpropvoid Qname(PackageNamespace(""),"setErrorHighlight") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function text() : String
      {
         trait method Qname(PackageNamespace(""),"text")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         getproperty Qname(PackageNamespace(""),"text")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function getHeight() : Number
      {
         trait method Qname(PackageNamespace(""),"getHeight")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         pushbyte 68
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function textChanged() : Signal
      {
         trait method Qname(PackageNamespace(""),"textChanged")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("org.osflash.signals"),"Signal")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"nameText_")
         getproperty Qname(PackageNamespace(""),"textChanged")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setErrorHighlight(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setErrorHighlight")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"isHighlighted")
         findpropstrict Qname(ProtectedNamespace("kabam.rotmg.account.web.view:FormField"),"drawSimpleTextBackground")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"inputText_")
         pushbyte 0
         dup
         getlocal_1
         callpropvoid Qname(ProtectedNamespace("kabam.rotmg.account.web.view:FormField"),"drawSimpleTextBackground") 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

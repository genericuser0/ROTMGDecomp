package kabam.rotmg.constants
{
   public class ActivationType
   {
      
      public static const UNLOCK_PORTAL:String = "UnlockPortal";
      
      public static const SHOOT:String = "Shoot";
      
      public static const DECOY:String = "Decoy";
      
      public static const DAZE_BLAST:String = "DazeBlast";
      
      public static const BULLET_NOVA:String = "BulletNova";
      
      public static const REMOVE_NEG_COND_SELF:String = "RemoveNegativeConditionsSelf";
      
      public static const INCREMENT_STAT:String = "IncrementStat";
      
      public static const HEAL:String = "Heal";
      
      public static const HEAL_NOVA:String = "HealNova";
      
      public static const MAGIC:String = "Magic";
      
      public static const MAGIC_NOVA:String = "MagicNova";
      
      public static const STAT_BOOST_SELF:String = "StatBoostSelf";
      
      public static const STAT_BOOST_AURA:String = "StatBoostAura";
      
      public static const COND_EFFECT_SELF:String = "ConditionEffectSelf";
      
      public static const CLEAR_COND_EFFECT_SELF:String = "ClearConditionEffectSelf";
      
      public static const COND_EFFECT_AURA:String = "ConditionEffectAura";
      
      public static const GRANT_SUPPORTER_POINTS:String = "GrantSupporterPoints";
      
      public static const CLEAR_COND_EFFECT_AURA:String = "ClearConditionEffectAura";
      
      public static const POISON_GRENADE:String = "PoisonGrenade";
      
      public static const VAMPIRE_BLAST:String = "VampireBlast";
      
      public static const TRAP:String = "Trap";
      
      public static const STASIS_BLAST:String = "StasisBlast";
      
      public static const PET:String = "Pet";
      
      public static const PERMA_PET:String = "PermaPet";
      
      public static const TELEPORT:String = "Teleport";
      
      public static const LIGHTNING:String = "Lightning";
      
      public static const CREATE:String = "Create";
      
      public static const REMOVE_NEG_COND:String = "RemoveNegativeConditions";
      
      public static const SHURIKEN_ABILITY:String = "ShurikenAbility";
      
      public static const DYE:String = "Dye";
      
      public static const SMALL_DIG:String = "Small_Dig";
      
      public static const FILL:String = "Fill";
      
      public static const GENERIC_ACTIVATE:String = "GenericActivate";
      
      public static const OBJECT_TOSS:String = "ObjectToss";
      
      public static const TELEPORT_LIMIT:String = "TeleportLimit";
      
      public static const BULLET_CREATE:String = "BulletCreate";
      
      public static const BOOST_RANGE:String = "BoostRange";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"UNLOCK_PORTAL")
         pushstring "UnlockPortal"
         initproperty Qname(PackageNamespace(""),"UNLOCK_PORTAL")
         findproperty Qname(PackageNamespace(""),"SHOOT")
         pushstring "Shoot"
         initproperty Qname(PackageNamespace(""),"SHOOT")
         findproperty Qname(PackageNamespace(""),"DECOY")
         pushstring "Decoy"
         initproperty Qname(PackageNamespace(""),"DECOY")
         findproperty Qname(PackageNamespace(""),"DAZE_BLAST")
         pushstring "DazeBlast"
         initproperty Qname(PackageNamespace(""),"DAZE_BLAST")
         findproperty Qname(PackageNamespace(""),"BULLET_NOVA")
         pushstring "BulletNova"
         initproperty Qname(PackageNamespace(""),"BULLET_NOVA")
         findproperty Qname(PackageNamespace(""),"REMOVE_NEG_COND_SELF")
         pushstring "RemoveNegativeConditionsSelf"
         initproperty Qname(PackageNamespace(""),"REMOVE_NEG_COND_SELF")
         findproperty Qname(PackageNamespace(""),"INCREMENT_STAT")
         pushstring "IncrementStat"
         initproperty Qname(PackageNamespace(""),"INCREMENT_STAT")
         findproperty Qname(PackageNamespace(""),"HEAL")
         pushstring "Heal"
         initproperty Qname(PackageNamespace(""),"HEAL")
         findproperty Qname(PackageNamespace(""),"HEAL_NOVA")
         pushstring "HealNova"
         initproperty Qname(PackageNamespace(""),"HEAL_NOVA")
         findproperty Qname(PackageNamespace(""),"MAGIC")
         pushstring "Magic"
         initproperty Qname(PackageNamespace(""),"MAGIC")
         findproperty Qname(PackageNamespace(""),"MAGIC_NOVA")
         pushstring "MagicNova"
         initproperty Qname(PackageNamespace(""),"MAGIC_NOVA")
         findproperty Qname(PackageNamespace(""),"STAT_BOOST_SELF")
         pushstring "StatBoostSelf"
         initproperty Qname(PackageNamespace(""),"STAT_BOOST_SELF")
         findproperty Qname(PackageNamespace(""),"STAT_BOOST_AURA")
         pushstring "StatBoostAura"
         initproperty Qname(PackageNamespace(""),"STAT_BOOST_AURA")
         findproperty Qname(PackageNamespace(""),"COND_EFFECT_SELF")
         pushstring "ConditionEffectSelf"
         initproperty Qname(PackageNamespace(""),"COND_EFFECT_SELF")
         findproperty Qname(PackageNamespace(""),"CLEAR_COND_EFFECT_SELF")
         pushstring "ClearConditionEffectSelf"
         initproperty Qname(PackageNamespace(""),"CLEAR_COND_EFFECT_SELF")
         findproperty Qname(PackageNamespace(""),"COND_EFFECT_AURA")
         pushstring "ConditionEffectAura"
         initproperty Qname(PackageNamespace(""),"COND_EFFECT_AURA")
         findproperty Qname(PackageNamespace(""),"GRANT_SUPPORTER_POINTS")
         pushstring "GrantSupporterPoints"
         initproperty Qname(PackageNamespace(""),"GRANT_SUPPORTER_POINTS")
         findproperty Qname(PackageNamespace(""),"CLEAR_COND_EFFECT_AURA")
         pushstring "ClearConditionEffectAura"
         initproperty Qname(PackageNamespace(""),"CLEAR_COND_EFFECT_AURA")
         findproperty Qname(PackageNamespace(""),"POISON_GRENADE")
         pushstring "PoisonGrenade"
         initproperty Qname(PackageNamespace(""),"POISON_GRENADE")
         findproperty Qname(PackageNamespace(""),"VAMPIRE_BLAST")
         pushstring "VampireBlast"
         initproperty Qname(PackageNamespace(""),"VAMPIRE_BLAST")
         findproperty Qname(PackageNamespace(""),"TRAP")
         pushstring "Trap"
         initproperty Qname(PackageNamespace(""),"TRAP")
         findproperty Qname(PackageNamespace(""),"STASIS_BLAST")
         pushstring "StasisBlast"
         initproperty Qname(PackageNamespace(""),"STASIS_BLAST")
         findproperty Qname(PackageNamespace(""),"PET")
         pushstring "Pet"
         initproperty Qname(PackageNamespace(""),"PET")
         findproperty Qname(PackageNamespace(""),"PERMA_PET")
         pushstring "PermaPet"
         initproperty Qname(PackageNamespace(""),"PERMA_PET")
         findproperty Qname(PackageNamespace(""),"TELEPORT")
         pushstring "Teleport"
         initproperty Qname(PackageNamespace(""),"TELEPORT")
         findproperty Qname(PackageNamespace(""),"LIGHTNING")
         pushstring "Lightning"
         initproperty Qname(PackageNamespace(""),"LIGHTNING")
         findproperty Qname(PackageNamespace(""),"CREATE")
         pushstring "Create"
         initproperty Qname(PackageNamespace(""),"CREATE")
         findproperty Qname(PackageNamespace(""),"REMOVE_NEG_COND")
         pushstring "RemoveNegativeConditions"
         initproperty Qname(PackageNamespace(""),"REMOVE_NEG_COND")
         findproperty Qname(PackageNamespace(""),"SHURIKEN_ABILITY")
         pushstring "ShurikenAbility"
         initproperty Qname(PackageNamespace(""),"SHURIKEN_ABILITY")
         findproperty Qname(PackageNamespace(""),"DYE")
         pushstring "Dye"
         initproperty Qname(PackageNamespace(""),"DYE")
         findproperty Qname(PackageNamespace(""),"SMALL_DIG")
         pushstring "Small_Dig"
         initproperty Qname(PackageNamespace(""),"SMALL_DIG")
         findproperty Qname(PackageNamespace(""),"FILL")
         pushstring "Fill"
         initproperty Qname(PackageNamespace(""),"FILL")
         findproperty Qname(PackageNamespace(""),"GENERIC_ACTIVATE")
         pushstring "GenericActivate"
         initproperty Qname(PackageNamespace(""),"GENERIC_ACTIVATE")
         findproperty Qname(PackageNamespace(""),"OBJECT_TOSS")
         pushstring "ObjectToss"
         initproperty Qname(PackageNamespace(""),"OBJECT_TOSS")
         findproperty Qname(PackageNamespace(""),"TELEPORT_LIMIT")
         pushstring "TeleportLimit"
         initproperty Qname(PackageNamespace(""),"TELEPORT_LIMIT")
         findproperty Qname(PackageNamespace(""),"BULLET_CREATE")
         pushstring "BulletCreate"
         initproperty Qname(PackageNamespace(""),"BULLET_CREATE")
         findproperty Qname(PackageNamespace(""),"BOOST_RANGE")
         pushstring "BoostRange"
         initproperty Qname(PackageNamespace(""),"BOOST_RANGE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ActivationType()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

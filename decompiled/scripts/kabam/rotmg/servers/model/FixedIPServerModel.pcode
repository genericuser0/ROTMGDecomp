package kabam.rotmg.servers.model
{
   import com.company.assembleegameclient.parameters.Parameters;
   import kabam.rotmg.servers.api.Server;
   import kabam.rotmg.servers.api.ServerModel;
   
   public class FixedIPServerModel implements ServerModel
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var localhost:Server;
      
      public function FixedIPServerModel()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         findpropstrict Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")
         constructprop Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server") 0
         pushstring "localhost"
         callproperty Qname(PackageNamespace(""),"setName") 1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.parameters"),"Parameters")
         getproperty Qname(PackageNamespace(""),"PORT")
         callproperty Qname(PackageNamespace(""),"setPort") 1
         initproperty Qname(PrivateNamespace(null,"67"),"localhost")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setIP(param1:String) : FixedIPServerModel
      {
         trait method Qname(PackageNamespace(""),"setIP")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("kabam.rotmg.servers.model"),"FixedIPServerModel")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"67"),"localhost")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setAddress") 1
         getlocal_0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getServers() : Vector.<Server>
      {
         trait method Qname(PackageNamespace(""),"getServers")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")>)
         
         body
         maxstack 4
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"67"),PackageNamespace(""),PackageNamespace("kabam.rotmg.servers.model"),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1323"),PackageInternalNs("kabam.rotmg.servers.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.servers.model:FixedIPServerModel"),StaticProtectedNs("kabam.rotmg.servers.model:FixedIPServerModel")])
         getlex Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")
         applytype 1
         pushbyte 1
         construct 1
         dup
         pushbyte 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"67"),"localhost")
         setproperty MultinameL([PackageNamespace("")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getServer() : Server
      {
         trait method Qname(PackageNamespace(""),"getServer")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"67"),"localhost")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isServerAvailable() : Boolean
      {
         trait method Qname(PackageNamespace(""),"isServerAvailable")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setServers(param1:Vector.<Server>) : void
      {
         trait method Qname(PackageNamespace(""),"setServers")
         dispid 0
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")>)
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setAvailableServers(param1:int) : void
      {
         trait method Qname(PackageNamespace(""),"setAvailableServers")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getAvailableServers() : Vector.<Server>
      {
         trait method Qname(PackageNamespace(""),"getAvailableServers")
         dispid 0
         method
         name null
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")>)
         
         body
         maxstack 4
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Multiname("Vector",[PackageNamespace("__AS3__.vec")])
         getproperty Multiname("Vector",[PrivateNamespace(null,"67"),PackageNamespace(""),PackageNamespace("kabam.rotmg.servers.model"),PackageNamespace("__AS3__.vec"),PrivateNamespace(null,"1323"),PackageInternalNs("kabam.rotmg.servers.model"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("kabam.rotmg.servers.model:FixedIPServerModel"),StaticProtectedNs("kabam.rotmg.servers.model:FixedIPServerModel")])
         getlex Qname(PackageNamespace("kabam.rotmg.servers.api"),"Server")
         applytype 1
         pushbyte 1
         construct 1
         dup
         pushbyte 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"67"),"localhost")
         setproperty MultinameL([PackageNamespace("")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

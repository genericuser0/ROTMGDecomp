package kabam.display.Loader
{
   import flash.display.DisplayObject;
   import flash.display.Loader;
   import flash.net.URLRequest;
   import flash.system.LoaderContext;
   import kabam.display.LoaderInfo.LoaderInfoProxy;
   import kabam.display.LoaderInfo.LoaderInfoProxyConcrete;
   
   public class LoaderProxyConcrete extends LoaderProxy
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var loader:Loader;
      
      private var _contentLoaderInfo:LoaderInfoProxy;
      
      public function LoaderProxyConcrete()
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"addChild")
         findpropstrict Qname(PackageNamespace("flash.display"),"Loader")
         constructprop Qname(PackageNamespace("flash.display"),"Loader") 0
         callproperty Qname(PackageNamespace(""),"addChild") 1
         getlex Qname(PackageNamespace("flash.display"),"Loader")
         astypelate
         initproperty Qname(PrivateNamespace(null,"584"),"loader")
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get content() : DisplayObject
      {
         trait getter Qname(PackageNamespace(""),"content")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"584"),"loader")
         getproperty Qname(PackageNamespace(""),"content")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function get contentLoaderInfo() : LoaderInfoProxy
      {
         trait getter Qname(PackageNamespace(""),"contentLoaderInfo")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("kabam.display.LoaderInfo"),"LoaderInfoProxy")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"584"),"_contentLoaderInfo")
         pushnull
         ifne ofs0024
         getlocal_0
         findpropstrict Qname(PackageNamespace("kabam.display.LoaderInfo"),"LoaderInfoProxyConcrete")
         constructprop Qname(PackageNamespace("kabam.display.LoaderInfo"),"LoaderInfoProxyConcrete") 0
         initproperty Qname(PrivateNamespace(null,"584"),"_contentLoaderInfo")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"584"),"_contentLoaderInfo")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"584"),"loader")
         getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
         setproperty Qname(Namespace("kabam.display.LoaderInfo:LoaderInfoProxy"),"loaderInfo")
         ofs0024:getlocal_0
         getproperty Qname(PrivateNamespace(null,"584"),"_contentLoaderInfo")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function load(param1:URLRequest, param2:LoaderContext = null) : void
      {
         trait method Qname(PackageNamespace(""),"load")
         flag OVERRIDE
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.net"),"URLRequest")
         param Qname(PackageNamespace("flash.system"),"LoaderContext")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"584"),"loader")
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"load") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function unload() : void
      {
         trait method Qname(PackageNamespace(""),"unload")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"584"),"loader")
         callpropvoid Qname(PackageNamespace(""),"unload") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.junkbyte.console
{
   import com.junkbyte.console.core.CommandLine;
   import com.junkbyte.console.core.ConsoleTools;
   import com.junkbyte.console.core.Graphing;
   import com.junkbyte.console.core.KeyBinder;
   import com.junkbyte.console.core.LogReferences;
   import com.junkbyte.console.core.Logs;
   import com.junkbyte.console.core.MemoryMonitor;
   import com.junkbyte.console.core.Remoting;
   import com.junkbyte.console.view.PanelsManager;
   import com.junkbyte.console.view.RollerPanel;
   import com.junkbyte.console.vos.Log;
   import flash.display.DisplayObjectContainer;
   import flash.display.LoaderInfo;
   import flash.display.Sprite;
   import flash.events.ErrorEvent;
   import flash.events.Event;
   import flash.events.IEventDispatcher;
   import flash.events.KeyboardEvent;
   import flash.geom.Rectangle;
   import flash.net.SharedObject;
   import flash.system.Capabilities;
   import flash.utils.getTimer;
   
   public class Console extends Sprite
   {
      
      public static const VERSION:Number = 2.6;
      
      public static const VERSION_STAGE:String = "";
      
      public static const BUILD:int = 611;
      
      public static const BUILD_DATE:String = "2012/02/22 00:11";
      
      public static const LOG:uint = 1;
      
      public static const INFO:uint = 3;
      
      public static const DEBUG:uint = 6;
      
      public static const WARN:uint = 8;
      
      public static const ERROR:uint = 9;
      
      public static const FATAL:uint = 10;
      
      public static const GLOBAL_CHANNEL:String = " * ";
      
      public static const DEFAULT_CHANNEL:String = "-";
      
      public static const CONSOLE_CHANNEL:String = "C";
      
      public static const FILTER_CHANNEL:String = "~";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"VERSION")
         pushdouble 2.6
         initproperty Qname(PackageNamespace(""),"VERSION")
         findproperty Qname(PackageNamespace(""),"VERSION_STAGE")
         pushstring ""
         initproperty Qname(PackageNamespace(""),"VERSION_STAGE")
         findproperty Qname(PackageNamespace(""),"BUILD")
         pushshort 611
         initproperty Qname(PackageNamespace(""),"BUILD")
         findproperty Qname(PackageNamespace(""),"BUILD_DATE")
         pushstring "2012/02/22 00:11"
         initproperty Qname(PackageNamespace(""),"BUILD_DATE")
         findproperty Qname(PackageNamespace(""),"LOG")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"LOG")
         findproperty Qname(PackageNamespace(""),"INFO")
         pushbyte 3
         initproperty Qname(PackageNamespace(""),"INFO")
         findproperty Qname(PackageNamespace(""),"DEBUG")
         pushbyte 6
         initproperty Qname(PackageNamespace(""),"DEBUG")
         findproperty Qname(PackageNamespace(""),"WARN")
         pushbyte 8
         initproperty Qname(PackageNamespace(""),"WARN")
         findproperty Qname(PackageNamespace(""),"ERROR")
         pushbyte 9
         initproperty Qname(PackageNamespace(""),"ERROR")
         findproperty Qname(PackageNamespace(""),"FATAL")
         pushbyte 10
         initproperty Qname(PackageNamespace(""),"FATAL")
         findproperty Qname(PackageNamespace(""),"GLOBAL_CHANNEL")
         pushstring " * "
         initproperty Qname(PackageNamespace(""),"GLOBAL_CHANNEL")
         findproperty Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         pushstring "-"
         initproperty Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         findproperty Qname(PackageNamespace(""),"CONSOLE_CHANNEL")
         pushstring "C"
         initproperty Qname(PackageNamespace(""),"CONSOLE_CHANNEL")
         findproperty Qname(PackageNamespace(""),"FILTER_CHANNEL")
         pushstring "~"
         initproperty Qname(PackageNamespace(""),"FILTER_CHANNEL")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _config:ConsoleConfig;
      
      private var _panels:PanelsManager;
      
      private var _cl:CommandLine;
      
      private var _kb:KeyBinder;
      
      private var _refs:LogReferences;
      
      private var _mm:MemoryMonitor;
      
      private var _graphing:Graphing;
      
      private var _remoter:Remoting;
      
      private var _tools:ConsoleTools;
      
      private var _topTries:int = 50;
      
      private var _paused:Boolean;
      
      private var _rollerKey:KeyBind;
      
      private var _logs:Logs;
      
      private var _so:SharedObject;
      
      private var _soData:Object;
      
      public function Console(param1:String = "", param2:ConsoleConfig = null)
      {
         method
         name null
         flag HAS_OPTIONAL
         flag NEED_ACTIVATION
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig")
         optional ""
         optional null
         returns null
         
         body
         maxstack 4
         localcount 5
         initscopedepth 10
         maxscopedepth 15
         try from ofs00d2 to ofs00f7 target ofs00fb type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"e")
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_3
         pushscope
         getscopeobject 1
         getlocal_1
         setslot 1
         getscopeobject 1
         getlocal_2
         setslot 2
         getlocal_0
         newobject 0
         initproperty Qname(PrivateNamespace(null,"1098"),"_soData")
         getlocal_0
         constructsuper 0
         findproperty Qname(PackageNamespace(""),"name")
         pushstring "Console"
         initproperty Qname(PackageNamespace(""),"name")
         getscopeobject 1
         getslot 2
         pushnull
         ifne ofs0039
         getscopeobject 1
         findpropstrict Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig")
         constructprop Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig") 0
         coerce Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig")
         setslot 2
         ofs0039:getlocal_0
         getscopeobject 1
         getslot 2
         initproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getscopeobject 1
         getslot 1
         iffalse ofs0054
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getscopeobject 1
         getslot 1
         setproperty Qname(PackageNamespace(""),"keystrokePassword")
         ofs0054:getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_remoter")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"Logs")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"Logs") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_logs")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_refs")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"CommandLine")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"CommandLine") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_cl")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"ConsoleTools")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"ConsoleTools") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_tools")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"Graphing")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"Graphing") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"MemoryMonitor")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"MemoryMonitor") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_mm")
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.core"),"KeyBinder")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.core"),"KeyBinder") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_kb")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"cl")
         pushstring "remotingSocket"
         newfunction 17409
         pushstring "Connect to socket remote. /remotingSocket ip port"
         callpropvoid Qname(PackageNamespace(""),"addCLCmd") 3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"sharedObjectName")
         iffalse ofs010c
         ofs00d2:getlocal_0
         getlex Qname(PackageNamespace("flash.net"),"SharedObject")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"sharedObjectName")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"sharedObjectPath")
         callproperty Qname(PackageNamespace(""),"getLocal") 2
         initproperty Qname(PrivateNamespace(null,"1098"),"_so")
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_so")
         getproperty Qname(PackageNamespace(""),"data")
         initproperty Qname(PrivateNamespace(null,"1098"),"_soData")
         ofs00f7:jump ofs010c
         ofs00fb:getlocal_0
         pushscope
         getlocal_3
         pushscope
         newcatch 0
         dup
         setlocal 4
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 4
         ofs010c:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"style")
         callpropvoid Qname(PackageNamespace(""),"updateStyleSheet") 0
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.view"),"PanelsManager")
         getlocal_0
         constructprop Qname(PackageNamespace("com.junkbyte.console.view"),"PanelsManager") 1
         initproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getscopeobject 1
         getslot 1
         iffalse ofs0130
         getlocal_0
         pushfalse
         initproperty Qname(PackageNamespace(""),"visible")
         ofs0130:getlocal_0
         pushstring "<b>Console v"
         getlex Qname(PackageNamespace(""),"VERSION")
         add
         getlex Qname(PackageNamespace(""),"VERSION_STAGE")
         add
         pushstring "</b> build "
         add
         getlex Qname(PackageNamespace(""),"BUILD")
         add
         pushstring ". "
         add
         getlex Qname(PackageNamespace("flash.system"),"Capabilities")
         getproperty Qname(PackageNamespace(""),"playerType")
         add
         pushstring " "
         add
         getlex Qname(PackageNamespace("flash.system"),"Capabilities")
         getproperty Qname(PackageNamespace(""),"version")
         add
         pushstring "."
         add
         pushbyte -2
         callpropvoid Qname(PackageNamespace(""),"report") 2
         findpropstrict Qname(PackageNamespace(""),"addEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ENTER_FRAME")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_onEnterFrame")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         findpropstrict Qname(PackageNamespace(""),"addEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ADDED_TO_STAGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"stageAddedHandle")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function MakeChannelName(param1:*) : String
      {
         trait method Qname(PackageNamespace(""),"MakeChannelName")
         flag FINAL
         dispid 3
         method
         name null
         param null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlex Qname(PackageNamespace(""),"String")
         istypelate
         iffalse ofs000f
         getlocal_1
         getlex Qname(PackageNamespace(""),"String")
         astypelate
         returnvalue
         ofs000f:getlocal_1
         iffalse ofs001e
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"ShortClassName") 1
         returnvalue
         ofs001e:getlex Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function stageAddedHandle(param1:Event = null) : void
      {
         trait method Qname(PrivateNamespace(null,"1098"),"stageAddedHandle")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.events"),"Event")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_cl")
         getproperty Qname(PackageNamespace(""),"base")
         pushnull
         ifne ofs0018
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_cl")
         getlex Qname(PackageNamespace(""),"parent")
         setproperty Qname(PackageNamespace(""),"base")
         ofs0018:getlex Qname(PackageNamespace(""),"loaderInfo")
         iffalse ofs0027
         getlocal_0
         getlex Qname(PackageNamespace(""),"loaderInfo")
         callpropvoid Qname(PackageNamespace(""),"listenUncaughtErrors") 1
         ofs0027:findpropstrict Qname(PackageNamespace(""),"removeEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ADDED_TO_STAGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"stageAddedHandle")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         findpropstrict Qname(PackageNamespace(""),"addEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"REMOVED_FROM_STAGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"stageRemovedHandle")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         getlex Qname(PackageNamespace(""),"stage")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"MOUSE_LEAVE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"onStageMouseLeave")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
         getlex Qname(PackageNamespace(""),"stage")
         getlex Qname(PackageNamespace("flash.events"),"KeyboardEvent")
         getproperty Qname(PackageNamespace(""),"KEY_DOWN")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_kb")
         getproperty Qname(PackageNamespace(""),"keyDownHandler")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
         getlex Qname(PackageNamespace(""),"stage")
         getlex Qname(PackageNamespace("flash.events"),"KeyboardEvent")
         getproperty Qname(PackageNamespace(""),"KEY_UP")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_kb")
         getproperty Qname(PackageNamespace(""),"keyUpHandler")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function stageRemovedHandle(param1:Event = null) : void
      {
         trait method Qname(PrivateNamespace(null,"1098"),"stageRemovedHandle")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.events"),"Event")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_cl")
         pushnull
         setproperty Qname(PackageNamespace(""),"base")
         findpropstrict Qname(PackageNamespace(""),"removeEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"REMOVED_FROM_STAGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"stageRemovedHandle")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         findpropstrict Qname(PackageNamespace(""),"addEventListener")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"ADDED_TO_STAGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"stageAddedHandle")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         getlex Qname(PackageNamespace(""),"stage")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"MOUSE_LEAVE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"onStageMouseLeave")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         getlex Qname(PackageNamespace(""),"stage")
         getlex Qname(PackageNamespace("flash.events"),"KeyboardEvent")
         getproperty Qname(PackageNamespace(""),"KEY_DOWN")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_kb")
         getproperty Qname(PackageNamespace(""),"keyDownHandler")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         getlex Qname(PackageNamespace(""),"stage")
         getlex Qname(PackageNamespace("flash.events"),"KeyboardEvent")
         getproperty Qname(PackageNamespace(""),"KEY_UP")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_kb")
         getproperty Qname(PackageNamespace(""),"keyUpHandler")
         callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onStageMouseLeave(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1098"),"onStageMouseLeave")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         pushnull
         callpropvoid Qname(PackageNamespace(""),"tooltip") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function listenUncaughtErrors(param1:LoaderInfo) : void
      {
         trait method Qname(PackageNamespace(""),"listenUncaughtErrors")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.display"),"LoaderInfo")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 9
         maxscopedepth 12
         try from ofs0007 to ofs0029 target ofs002d type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"err")
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.events"),"IEventDispatcher")
         setlocal_2
         ofs0007:getlocal_1
         pushstring "uncaughtErrorEvents"
         getproperty MultinameL([PrivateNamespace(null,"1098"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"2031"),PackageNamespace("com.junkbyte.console"),PackageInternalNs("com.junkbyte.console"),ProtectedNamespace("com.junkbyte.console:Console"),StaticProtectedNs("com.junkbyte.console:Console"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce Qname(PackageNamespace("flash.events"),"IEventDispatcher")
         setlocal_2
         getlocal_2
         iffalse ofs0029
         getlocal_2
         pushstring "uncaughtError"
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"uncaughtErrorHandle")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid Qname(Namespace("flash.events:IEventDispatcher"),"addEventListener") 5
         ofs0029:jump ofs003b
         ofs002d:getlocal_0
         pushscope
         newcatch 0
         dup
         setlocal_3
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 3
         ofs003b:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function uncaughtErrorHandle(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1098"),"uncaughtErrorHandle")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_3
         getlocal_1
         pushstring "error"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"hasOwnProperty") 1
         iffalse ofs001f
         getlocal_1
         pushstring "error"
         getproperty MultinameL([PrivateNamespace(null,"1098"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"2031"),PackageNamespace("com.junkbyte.console"),PackageInternalNs("com.junkbyte.console"),ProtectedNamespace("com.junkbyte.console:Console"),StaticProtectedNs("com.junkbyte.console:Console"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         coerce_a
         jump ofs0021
         ofs001f:getlocal_1
         coerce_a
         ofs0021:coerce_a
         setlocal_2
         getlocal_2
         getlex Qname(PackageNamespace(""),"Error")
         istypelate
         iffalse ofs003b
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_refs")
         getlocal_2
         callproperty Qname(PackageNamespace(""),"makeString") 1
         coerce_s
         setlocal_3
         jump ofs0051
         ofs003b:getlocal_2
         getlex Qname(PackageNamespace("flash.events"),"ErrorEvent")
         istypelate
         iffalse ofs0051
         findpropstrict Qname(PackageNamespace("flash.events"),"ErrorEvent")
         getlocal_2
         callproperty Qname(PackageNamespace("flash.events"),"ErrorEvent") 1
         getproperty Qname(PackageNamespace(""),"text")
         coerce_s
         setlocal_3
         ofs0051:getlocal_3
         iftrue ofs005e
         findpropstrict Qname(PackageNamespace(""),"String")
         getlocal_2
         callproperty Qname(PackageNamespace(""),"String") 1
         coerce_s
         setlocal_3
         ofs005e:getlocal_0
         getlocal_3
         getlex Qname(PackageNamespace(""),"FATAL")
         pushfalse
         callpropvoid Qname(PackageNamespace(""),"report") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addGraph(param1:String, param2:Object, param3:String, param4:Number = -1, param5:String = null, param6:Rectangle = null, param7:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"addGraph")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace("flash.geom"),"Rectangle")
         param Qname(PackageNamespace(""),"Boolean")
         optional -1
         optional null
         optional null
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 8
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         getlocal 5
         getlocal 6
         getlocal 7
         callpropvoid Qname(PackageNamespace(""),"add") 7
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function fixGraphRange(param1:String, param2:Number = NaN, param3:Number = NaN) : void
      {
         trait method Qname(PackageNamespace(""),"fixGraphRange")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         optional NaN
         optional NaN
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"fixRange") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function removeGraph(param1:String, param2:Object = null, param3:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"removeGraph")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional null
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"remove") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function bindKey(param1:KeyBind, param2:Function, param3:Array = null) : void
      {
         trait method Qname(PackageNamespace(""),"bindKey")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.junkbyte.console"),"KeyBind")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"Array")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_1
         iffalse ofs0012
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_kb")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"bindKey") 3
         ofs0012:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addMenu(param1:String, param2:Function, param3:Array = null, param4:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"addMenu")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"String")
         optional null
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"addMenu") 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get displayRoller() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"displayRoller")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"displayRoller")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set displayRoller(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"displayRoller")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"displayRoller")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setRollerCaptureKey(param1:String, param2:Boolean = false, param3:Boolean = false, param4:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"setRollerCaptureKey")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         optional false
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_rollerKey")
         iffalse ofs0019
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_rollerKey")
         pushnull
         callpropvoid Qname(PackageNamespace(""),"bindKey") 2
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"1098"),"_rollerKey")
         ofs0019:getlocal_1
         convert_b
         dup
         iffalse ofs0028
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 1
         equals
         ofs0028:iffalse ofs0049
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.junkbyte.console"),"KeyBind")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         constructprop Qname(PackageNamespace("com.junkbyte.console"),"KeyBind") 4
         initproperty Qname(PrivateNamespace(null,"1098"),"_rollerKey")
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_rollerKey")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"onRollerCaptureKey")
         callpropvoid Qname(PackageNamespace(""),"bindKey") 2
         ofs0049:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get rollerCaptureKey() : KeyBind
      {
         trait getter Qname(PackageNamespace(""),"rollerCaptureKey")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console"),"KeyBind")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_rollerKey")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function onRollerCaptureKey() : void
      {
         trait method Qname(PrivateNamespace(null,"1098"),"onRollerCaptureKey")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"displayRoller")
         iffalse ofs0031
         getlocal_0
         pushstring "Display Roller Capture:<br/>"
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.view"),"RollerPanel")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getlex Qname(PackageNamespace("com.junkbyte.console.view"),"RollerPanel")
         getproperty Qname(PackageNamespace(""),"NAME")
         callproperty Qname(PackageNamespace(""),"getPanel") 1
         callproperty Qname(PackageNamespace("com.junkbyte.console.view"),"RollerPanel") 1
         pushtrue
         callproperty Qname(PackageNamespace(""),"getMapString") 1
         add
         pushbyte -1
         callpropvoid Qname(PackageNamespace(""),"report") 2
         ofs0031:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get fpsMonitor() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"fpsMonitor")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getproperty Qname(PackageNamespace(""),"fpsMonitor")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set fpsMonitor(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"fpsMonitor")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"fpsMonitor")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get memoryMonitor() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"memoryMonitor")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getproperty Qname(PackageNamespace(""),"memoryMonitor")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set memoryMonitor(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"memoryMonitor")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"memoryMonitor")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function watch(param1:Object, param2:String = null) : String
      {
         trait method Qname(PackageNamespace(""),"watch")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_mm")
         getlocal_1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"watch") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function unwatch(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"unwatch")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_mm")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"unwatch") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function gc() : void
      {
         trait method Qname(PackageNamespace(""),"gc")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_mm")
         callpropvoid Qname(PackageNamespace(""),"gc") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function store(param1:String, param2:Object, param3:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"store")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_cl")
         getlocal_1
         getlocal_2
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"store") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function map(param1:DisplayObjectContainer, param2:uint = 0) : void
      {
         trait method Qname(PackageNamespace(""),"map")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_tools")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         callpropvoid Qname(PackageNamespace(""),"map") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function mapch(param1:*, param2:DisplayObjectContainer, param3:uint = 0) : void
      {
         trait method Qname(PackageNamespace(""),"mapch")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace("flash.display"),"DisplayObjectContainer")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_tools")
         getlocal_2
         getlocal_3
         findpropstrict Qname(PackageNamespace(""),"MakeChannelName")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"MakeChannelName") 1
         callpropvoid Qname(PackageNamespace(""),"map") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function inspect(param1:Object, param2:Boolean = true) : void
      {
         trait method Qname(PackageNamespace(""),"inspect")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Boolean")
         optional true
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_refs")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         callpropvoid Qname(PackageNamespace(""),"inspect") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function inspectch(param1:*, param2:Object, param3:Boolean = true) : void
      {
         trait method Qname(PackageNamespace(""),"inspectch")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"Boolean")
         optional true
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_refs")
         getlocal_2
         getlocal_3
         findpropstrict Qname(PackageNamespace(""),"MakeChannelName")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"MakeChannelName") 1
         callpropvoid Qname(PackageNamespace(""),"inspect") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function explode(param1:Object, param2:int = 3) : void
      {
         trait method Qname(PackageNamespace(""),"explode")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"int")
         optional 3
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Array")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_tools")
         getlocal_1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"explode") 2
         constructprop Qname(PackageNamespace(""),"Array") 1
         pushbyte 1
         pushnull
         pushfalse
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"addLine") 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function explodech(param1:*, param2:Object, param3:int = 3) : void
      {
         trait method Qname(PackageNamespace(""),"explodech")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"int")
         optional 3
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Array")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_tools")
         getlocal_2
         getlocal_3
         callproperty Qname(PackageNamespace(""),"explode") 2
         constructprop Qname(PackageNamespace(""),"Array") 1
         pushbyte 1
         getlocal_1
         pushfalse
         pushtrue
         callpropvoid Qname(PackageNamespace(""),"addLine") 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get paused() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"paused")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_paused")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set paused(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"paused")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_paused")
         getlocal_1
         ifne ofs000c
         returnvoid
         ofs000c:getlocal_1
         iffalse ofs0020
         getlocal_0
         pushstring "Paused"
         pushbyte 10
         callpropvoid Qname(PackageNamespace(""),"report") 2
         jump ofs002b
         ofs0020:getlocal_0
         pushstring "Resumed"
         pushbyte -1
         callpropvoid Qname(PackageNamespace(""),"report") 2
         ofs002b:getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1098"),"_paused")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setPaused") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get width() : Number
      {
         trait getter Qname(PackageNamespace(""),"width")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"width")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set width(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"width")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"width")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function set height(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"height")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"height")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get height() : Number
      {
         trait getter Qname(PackageNamespace(""),"height")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"height")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function get x() : Number
      {
         trait getter Qname(PackageNamespace(""),"x")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"x")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set x(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"x")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function set y(param1:Number) : void
      {
         trait setter Qname(PackageNamespace(""),"y")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get y() : Number
      {
         trait getter Qname(PackageNamespace(""),"y")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"y")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set visible(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"visible")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         setsuper Qname(PackageNamespace(""),"visible")
         getlocal_1
         iffalse ofs0017
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         pushtrue
         setproperty Qname(PackageNamespace(""),"visible")
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function _onEnterFrame(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1098"),"_onEnterFrame")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 4
         findpropstrict Qname(PackageNamespace("flash.utils"),"getTimer")
         callproperty Qname(PackageNamespace("flash.utils"),"getTimer") 0
         convert_i
         setlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_logs")
         getlocal_2
         callproperty Qname(PackageNamespace(""),"update") 1
         convert_b
         setlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_refs")
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"update") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_mm")
         callpropvoid Qname(PackageNamespace(""),"update") 0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"remoter")
         getproperty Qname(PackageNamespace(""),"remoting")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getproperty Qname(PackageNamespace(""),"RECIEVER")
         ifeq ofs0062
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         getlex Qname(PackageNamespace(""),"stage")
         iffalse ofs0057
         getlex Qname(PackageNamespace(""),"stage")
         getproperty Qname(PackageNamespace(""),"frameRate")
         convert_d
         jump ofs005a
         ofs0057:pushbyte 0
         convert_d
         ofs005a:callproperty Qname(PackageNamespace(""),"update") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 4
         ofs0062:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_remoter")
         callpropvoid Qname(PackageNamespace(""),"update") 0
         getlex Qname(PackageNamespace(""),"visible")
         convert_b
         dup
         iffalse ofs0078
         pop
         getlex Qname(PackageNamespace(""),"parent")
         convert_b
         ofs0078:iffalse ofs00fc
         getlocal_0
         getproperty Qname(PackageNamespace(""),"config")
         getproperty Qname(PackageNamespace(""),"alwaysOnTop")
         convert_b
         dup
         iffalse ofs009c
         pop
         getlex Qname(PackageNamespace(""),"parent")
         getlex Qname(PackageNamespace(""),"parent")
         getproperty Qname(PackageNamespace(""),"numChildren")
         decrement
         callproperty Qname(PackageNamespace(""),"getChildAt") 1
         getlocal_0
         equals
         not
         ofs009c:dup
         iffalse ofs00a9
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_topTries")
         pushbyte 0
         greaterthan
         ofs00a9:iffalse ofs00df
         getlocal_0
         dup
         setlocal 5
         getproperty Qname(PrivateNamespace(null,"1098"),"_topTries")
         decrement_i
         setlocal 6
         getlocal 5
         getlocal 6
         setproperty Qname(PrivateNamespace(null,"1098"),"_topTries")
         kill 6
         kill 5
         getlex Qname(PackageNamespace(""),"parent")
         getlocal_0
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         getlocal_0
         pushstring "Moved console on top (alwaysOnTop enabled), "
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_topTries")
         add
         pushstring " attempts left."
         add
         pushbyte -1
         callpropvoid Qname(PackageNamespace(""),"report") 2
         ofs00df:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_paused")
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"update") 2
         getlocal 4
         iffalse ofs00fc
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"updateGraphs") 1
         ofs00fc:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get remoting() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"remoting")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_remoter")
         getproperty Qname(PackageNamespace(""),"remoting")
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getproperty Qname(PackageNamespace(""),"SENDER")
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set remoting(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"remoting")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_remoter")
         getlocal_1
         iffalse ofs0017
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getproperty Qname(PackageNamespace(""),"SENDER")
         convert_u
         jump ofs001f
         ofs0017:getlex Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         getproperty Qname(PackageNamespace(""),"NONE")
         convert_u
         ofs001f:setproperty Qname(PackageNamespace(""),"remoting")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function remotingSocket(param1:String, param2:int) : void
      {
         trait method Qname(PackageNamespace(""),"remotingSocket")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_remoter")
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"remotingSocket") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setViewingChannels(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"setViewingChannels")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"setViewingChannels")
         getlocal_0
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setIgnoredChannels(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"setIgnoredChannels")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"setIgnoredChannels")
         getlocal_0
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"apply") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set minimumPriority(param1:uint) : void
      {
         trait setter Qname(PackageNamespace(""),"minimumPriority")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"priority")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function report(param1:*, param2:int = 0, param3:Boolean = true, param4:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"report")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"String")
         optional 0
         optional true
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal 4
         iftrue ofs0016
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"reportChannel")
         coerce_s
         setlocal 4
         ofs0016:getlocal_0
         getlocal_1
         newarray 1
         getlocal_2
         getlocal 4
         pushfalse
         getlocal_3
         pushbyte 0
         callpropvoid Qname(PackageNamespace(""),"addLine") 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addLine(param1:Array, param2:int = 0, param3:* = null, param4:Boolean = false, param5:Boolean = false, param6:int = -1) : void
      {
         trait method Qname(PackageNamespace(""),"addLine")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"int")
         param null
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"int")
         optional 0
         optional null
         optional false
         optional false
         optional -1
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 10
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         pushstring ""
         setlocal 7
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         convert_i
         setlocal 8
         pushbyte 0
         setlocal 9
         jump ofs0043
         ofs0015:label
         getlocal 7
         getlocal 9
         iffalse ofs0027
         pushstring " "
         coerce_a
         jump ofs002a
         ofs0027:pushstring ""
         coerce_a
         ofs002a:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_refs")
         getlocal_1
         getlocal 9
         getproperty MultinameL([PrivateNamespace(null,"1098"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"2031"),PackageNamespace("com.junkbyte.console"),PackageInternalNs("com.junkbyte.console"),ProtectedNamespace("com.junkbyte.console:Console"),StaticProtectedNs("com.junkbyte.console:Console"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         pushnull
         getlocal 5
         callproperty Qname(PackageNamespace(""),"makeString") 3
         add
         add
         coerce_s
         setlocal 7
         inclocal_i 9
         ofs0043:getlocal 9
         getlocal 8
         iflt ofs0015
         getlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"autoStackPriority")
         greaterequals
         dup
         iffalse ofs005f
         pop
         getlocal 6
         pushbyte 0
         lessthan
         ofs005f:iffalse ofs006d
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"defaultStackDepth")
         convert_i
         setlocal 6
         ofs006d:getlocal 5
         not
         dup
         iffalse ofs007b
         pop
         getlocal 6
         pushbyte 0
         greaterthan
         ofs007b:iffalse ofs0090
         getlocal 7
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_tools")
         getlocal 6
         getlocal_2
         callproperty Qname(PackageNamespace(""),"getStack") 2
         add
         coerce_s
         setlocal 7
         ofs0090:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_logs")
         findpropstrict Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         getlocal 7
         findpropstrict Qname(PackageNamespace(""),"MakeChannelName")
         getlocal_3
         callproperty Qname(PackageNamespace(""),"MakeChannelName") 1
         getlocal_2
         getlocal 4
         getlocal 5
         constructprop Qname(PackageNamespace("com.junkbyte.console.vos"),"Log") 5
         callpropvoid Qname(PackageNamespace(""),"add") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set commandLine(param1:Boolean) : void
      {
         trait setter Qname(PackageNamespace(""),"commandLine")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"commandLine")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get commandLine() : Boolean
      {
         trait getter Qname(PackageNamespace(""),"commandLine")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         getproperty Qname(PackageNamespace(""),"commandLine")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function addSlashCommand(param1:String, param2:Function, param3:String = "", param4:Boolean = true, param5:String = ";") : void
      {
         trait method Qname(PackageNamespace(""),"addSlashCommand")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"String")
         optional ""
         optional true
         optional ";"
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_cl")
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 4
         getlocal 5
         callpropvoid Qname(PackageNamespace(""),"addSlashCommand") 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function add(param1:*, param2:int = 2, param3:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"add")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         optional 2
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         newarray 1
         getlocal_2
         getlex Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"addLine") 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function stack(param1:*, param2:int = -1, param3:int = 5) : void
      {
         trait method Qname(PackageNamespace(""),"stack")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         optional -1
         optional 5
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         newarray 1
         getlocal_3
         getlex Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         pushfalse
         pushfalse
         getlocal_2
         pushbyte 0
         greaterequals
         iffalse ofs001b
         getlocal_2
         convert_i
         jump ofs0023
         ofs001b:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"defaultStackDepth")
         convert_i
         ofs0023:callpropvoid Qname(PackageNamespace(""),"addLine") 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function stackch(param1:*, param2:*, param3:int = -1, param4:int = 5) : void
      {
         trait method Qname(PackageNamespace(""),"stackch")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         optional -1
         optional 5
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         newarray 1
         getlocal 4
         getlocal_1
         pushfalse
         pushfalse
         getlocal_3
         pushbyte 0
         greaterequals
         iffalse ofs0019
         getlocal_3
         convert_i
         jump ofs0021
         ofs0019:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         getproperty Qname(PackageNamespace(""),"defaultStackDepth")
         convert_i
         ofs0021:callpropvoid Qname(PackageNamespace(""),"addLine") 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function log(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"log")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlex Qname(PackageNamespace(""),"LOG")
         callpropvoid Qname(PackageNamespace(""),"addLine") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function info(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"info")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlex Qname(PackageNamespace(""),"INFO")
         callpropvoid Qname(PackageNamespace(""),"addLine") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function debug(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"debug")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlex Qname(PackageNamespace(""),"DEBUG")
         callpropvoid Qname(PackageNamespace(""),"addLine") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function warn(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"warn")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlex Qname(PackageNamespace(""),"WARN")
         callpropvoid Qname(PackageNamespace(""),"addLine") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function error(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"error")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlex Qname(PackageNamespace(""),"ERROR")
         callpropvoid Qname(PackageNamespace(""),"addLine") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function fatal(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"fatal")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlex Qname(PackageNamespace(""),"FATAL")
         callpropvoid Qname(PackageNamespace(""),"addLine") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ch(param1:*, param2:*, param3:int = 2, param4:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"ch")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         optional 2
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         newarray 1
         getlocal_3
         getlocal_1
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"addLine") 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function logch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"logch")
         dispid 0
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         getlex Qname(PackageNamespace(""),"LOG")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addLine") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function infoch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"infoch")
         dispid 0
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         getlex Qname(PackageNamespace(""),"INFO")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addLine") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function debugch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"debugch")
         dispid 0
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         getlex Qname(PackageNamespace(""),"DEBUG")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addLine") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function warnch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"warnch")
         dispid 0
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         getlex Qname(PackageNamespace(""),"WARN")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addLine") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function errorch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"errorch")
         dispid 0
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         getlex Qname(PackageNamespace(""),"ERROR")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addLine") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function fatalch(param1:*, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"fatalch")
         dispid 0
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         getlex Qname(PackageNamespace(""),"FATAL")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addLine") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addCh(param1:*, param2:Array, param3:int = 2, param4:Boolean = false) : void
      {
         trait method Qname(PackageNamespace(""),"addCh")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param null
         param Qname(PackageNamespace(""),"Array")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Boolean")
         optional 2
         optional false
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         getlocal_3
         getlocal_1
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"addLine") 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHTML(... rest) : void
      {
         trait method Qname(PackageNamespace(""),"addHTML")
         dispid 0
         method
         name null
         flag NEED_REST
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         pushbyte 2
         getlex Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         pushfalse
         getlocal_0
         getlocal_1
         callproperty Qname(PrivateNamespace(null,"1098"),"testHTML") 1
         callpropvoid Qname(PackageNamespace(""),"addLine") 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHTMLch(param1:*, param2:int, ... rest) : void
      {
         trait method Qname(PackageNamespace(""),"addHTMLch")
         dispid 0
         method
         name null
         flag NEED_REST
         param null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_3
         getlocal_2
         getlocal_1
         pushfalse
         getlocal_0
         getlocal_3
         callproperty Qname(PrivateNamespace(null,"1098"),"testHTML") 1
         callpropvoid Qname(PackageNamespace(""),"addLine") 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function testHTML(param1:Array) : Boolean
      {
         trait method Qname(PrivateNamespace(null,"1098"),"testHTML")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 10
         maxscopedepth 15
         try from ofs000b to ofs0026 target ofs002a type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"err")
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_2
         pushscope
         getscopeobject 1
         getlocal_1
         setslot 1
         ofs000b:findpropstrict Qname(PackageNamespace(""),"XML")
         pushstring "<p>"
         getscopeobject 1
         getslot 1
         pushstring ""
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         add
         pushstring "</p>"
         add
         constructprop Qname(PackageNamespace(""),"XML") 1
         pop
         ofs0026:jump ofs003c
         ofs002a:getlocal_0
         pushscope
         getlocal_2
         pushscope
         newcatch 0
         dup
         setlocal_3
         dup
         pushscope
         swap
         setslot 1
         pushfalse
         returnvalue
         popscope
         kill 3
         ofs003c:pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function clear(param1:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"clear")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_logs")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"clear") 1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_paused")
         iftrue ofs001f
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         getproperty Qname(PackageNamespace(""),"mainPanel")
         callpropvoid Qname(PackageNamespace(""),"updateToBottom") 0
         ofs001f:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         callpropvoid Qname(PackageNamespace(""),"updateMenu") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getAllLog(param1:String = "\r\n") : String
      {
         trait method Qname(PackageNamespace(""),"getAllLog")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional "\r\n"
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_logs")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"getLogsAsString") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get config() : ConsoleConfig
      {
         trait getter Qname(PackageNamespace(""),"config")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console"),"ConsoleConfig")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_config")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get panels() : PanelsManager
      {
         trait getter Qname(PackageNamespace(""),"panels")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console.view"),"PanelsManager")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_panels")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get cl() : CommandLine
      {
         trait getter Qname(PackageNamespace(""),"cl")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console.core"),"CommandLine")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_cl")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get remoter() : Remoting
      {
         trait getter Qname(PackageNamespace(""),"remoter")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console.core"),"Remoting")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_remoter")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get graphing() : Graphing
      {
         trait getter Qname(PackageNamespace(""),"graphing")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console.core"),"Graphing")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_graphing")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get refs() : LogReferences
      {
         trait getter Qname(PackageNamespace(""),"refs")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_refs")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get logs() : Logs
      {
         trait getter Qname(PackageNamespace(""),"logs")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console.core"),"Logs")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_logs")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get mapper() : ConsoleTools
      {
         trait getter Qname(PackageNamespace(""),"mapper")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.junkbyte.console.core"),"ConsoleTools")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_tools")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get so() : Object
      {
         trait getter Qname(PackageNamespace(""),"so")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_soData")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function updateSO(param1:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"updateSO")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_so")
         iffalse ofs0025
         getlocal_1
         iffalse ofs001d
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_so")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"setDirty") 1
         jump ofs0025
         ofs001d:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1098"),"_so")
         callpropvoid Qname(PackageNamespace(""),"clear") 0
         ofs0025:returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

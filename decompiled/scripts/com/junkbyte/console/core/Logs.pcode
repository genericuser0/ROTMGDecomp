package com.junkbyte.console.core
{
   import com.junkbyte.console.Console;
   import com.junkbyte.console.vos.Log;
   import flash.events.Event;
   import flash.utils.ByteArray;
   
   public class Logs extends ConsoleCore
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _channels:Object;
      
      private var _repeating:uint;
      
      private var _lastRepeat:Log;
      
      private var _newRepeat:Log;
      
      private var _hasNewLog:Boolean;
      
      private var _timer:uint;
      
      public var first:Log;
      
      public var last:Log;
      
      private var _length:uint;
      
      private var _lines:uint;
      
      public function Logs(param1:Console)
      {
         method
         name null
         flag NEED_ACTIVATION
         param Qname(PackageNamespace("com.junkbyte.console"),"Console")
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 9
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_2
         pushscope
         getscopeobject 1
         getlocal_1
         setslot 1
         getlocal_0
         getscopeobject 1
         getslot 1
         constructsuper 1
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Object")
         constructprop Qname(PackageNamespace(""),"Object") 0
         initproperty Qname(PrivateNamespace(null,"1168"),"_channels")
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"CONNECT")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"onRemoteConnection")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         pushstring "log"
         newfunction 18639
         callpropvoid Qname(PackageNamespace(""),"registerCallback") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onRemoteConnection(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"1168"),"onRemoteConnection")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"first")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal_2
         jump ofs001d
         ofs000e:label
         getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"1168"),"send2Remote") 1
         getlocal_2
         getproperty Qname(PackageNamespace(""),"next")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal_2
         ofs001d:getlocal_2
         iftrue ofs000e
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function send2Remote(param1:Log) : void
      {
         trait method Qname(PrivateNamespace(null,"1168"),"send2Remote")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         getproperty Qname(PackageNamespace(""),"canSend")
         iffalse ofs002d
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         getlocal_1
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"toBytes") 1
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"remoter")
         pushstring "log"
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"send") 2
         ofs002d:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function update(param1:uint) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1168"),"_timer")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_repeating")
         pushbyte 0
         ifngt ofs0024
         getlocal_0
         dup
         setlocal_3
         getproperty Qname(PrivateNamespace(null,"1168"),"_repeating")
         decrement
         setlocal 4
         getlocal_3
         getlocal 4
         setproperty Qname(PrivateNamespace(null,"1168"),"_repeating")
         kill 4
         kill 3
         ofs0024:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_newRepeat")
         iffalse ofs0053
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         iffalse ofs003d
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         callpropvoid Qname(PrivateNamespace(null,"1168"),"remove") 1
         ofs003d:getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_newRepeat")
         initproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"1168"),"_newRepeat")
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         callpropvoid Qname(PrivateNamespace(null,"1168"),"push") 1
         ofs0053:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_hasNewLog")
         convert_b
         setlocal_2
         getlocal_0
         pushfalse
         initproperty Qname(PrivateNamespace(null,"1168"),"_hasNewLog")
         getlocal_2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function add(param1:Log) : void
      {
         trait method Qname(PackageNamespace(""),"add")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         dup
         setlocal_2
         getproperty Qname(PrivateNamespace(null,"1168"),"_lines")
         increment
         setlocal_3
         getlocal_2
         getlocal_3
         setproperty Qname(PrivateNamespace(null,"1168"),"_lines")
         kill 3
         kill 2
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_lines")
         setproperty Qname(PackageNamespace(""),"line")
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_timer")
         setproperty Qname(PackageNamespace(""),"time")
         getlocal_0
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1168"),"registerLog") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function registerLog(param1:Log) : void
      {
         trait method Qname(PrivateNamespace(null,"1168"),"registerLog")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         pushtrue
         initproperty Qname(PrivateNamespace(null,"1168"),"_hasNewLog")
         getlocal_0
         getlocal_1
         getproperty Qname(PackageNamespace(""),"ch")
         callpropvoid Qname(PackageNamespace(""),"addChannel") 1
         getlocal_1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"line")
         pushstring " "
         add
         setproperty Qname(PackageNamespace(""),"lineStr")
         getlocal_1
         pushstring "[<a href=\"event:channel_"
         getlocal_1
         getproperty Qname(PackageNamespace(""),"ch")
         add
         pushstring "\">"
         add
         getlocal_1
         getproperty Qname(PackageNamespace(""),"ch")
         add
         pushstring "</a>] "
         add
         setproperty Qname(PackageNamespace(""),"chStr")
         getlocal_1
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"time")
         callproperty Qname(PackageNamespace(""),"timeStampFormatter") 1
         pushstring " "
         add
         setproperty Qname(PackageNamespace(""),"timeStr")
         getlocal_0
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1168"),"send2Remote") 1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"repeat")
         iffalse ofs0091
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_repeating")
         pushbyte 0
         greaterthan
         dup
         iffalse ofs006d
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         convert_b
         ofs006d:iffalse ofs0082
         getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         getproperty Qname(PackageNamespace(""),"line")
         setproperty Qname(PackageNamespace(""),"line")
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1168"),"_newRepeat")
         returnvoid
         ofs0082:getlocal_0
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"maxRepeats")
         initproperty Qname(PrivateNamespace(null,"1168"),"_repeating")
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         ofs0091:getlocal_0
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1168"),"push") 1
         jump ofs00a5
         ofs009b:label
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"first")
         callpropvoid Qname(PrivateNamespace(null,"1168"),"remove") 1
         ofs00a5:getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_length")
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"maxLines")
         greaterthan
         dup
         iffalse ofs00bf
         pop
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"maxLines")
         pushbyte 0
         greaterthan
         ofs00bf:iftrue ofs009b
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"tracing")
         convert_b
         dup
         iffalse ofs00d9
         pop
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getproperty Qname(PackageNamespace(""),"traceCall")
         pushnull
         equals
         not
         ofs00d9:iffalse ofs00f1
         getlex Qname(ProtectedNamespace("com.junkbyte.console.core:ConsoleCore"),"config")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"ch")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"plainText") 0
         getlocal_1
         getproperty Qname(PackageNamespace(""),"priority")
         callpropvoid Qname(PackageNamespace(""),"traceCall") 3
         ofs00f1:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function clear(param1:String = null) : void
      {
         trait method Qname(PackageNamespace(""),"clear")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         optional null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal_2
         getlocal_1
         iffalse ofs0043
         getlocal_0
         getproperty Qname(PackageNamespace(""),"first")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal_2
         jump ofs0030
         ofs0018:label
         getlocal_2
         getproperty Qname(PackageNamespace(""),"ch")
         getlocal_1
         ifne ofs0028
         getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"1168"),"remove") 1
         ofs0028:getlocal_2
         getproperty Qname(PackageNamespace(""),"next")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal_2
         ofs0030:getlocal_2
         iftrue ofs0018
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_channels")
         getlocal_1
         deleteproperty MultinameL([PrivateNamespace(null,"1168"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),PrivateNamespace(null,"2102"),PackageNamespace("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.junkbyte.console.core:Logs"),StaticProtectedNs("com.junkbyte.console.core:Logs"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         pop
         jump ofs005c
         ofs0043:getlocal_0
         pushnull
         initproperty Qname(PackageNamespace(""),"first")
         getlocal_0
         pushnull
         initproperty Qname(PackageNamespace(""),"last")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"1168"),"_length")
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Object")
         constructprop Qname(PackageNamespace(""),"Object") 0
         initproperty Qname(PrivateNamespace(null,"1168"),"_channels")
         ofs005c:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getLogsAsString(param1:String, param2:Boolean = true, param3:Function = null) : String
      {
         trait method Qname(PackageNamespace(""),"getLogsAsString")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         param Qname(PackageNamespace(""),"Function")
         optional true
         optional null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushstring ""
         setlocal 4
         getlocal_0
         getproperty Qname(PackageNamespace(""),"first")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal 5
         jump ofs0060
         ofs0013:label
         getlocal_3
         pushnull
         equals
         dup
         iftrue ofs0024
         pop
         getlocal_3
         getglobalscope
         getlocal 5
         call 1
         convert_b
         ofs0024:iffalse ofs0056
         getlocal_0
         getproperty Qname(PackageNamespace(""),"first")
         getlocal 5
         ifeq ofs0039
         getlocal 4
         getlocal_1
         add
         coerce_s
         setlocal 4
         ofs0039:getlocal 4
         getlocal_2
         iffalse ofs004b
         getlocal 5
         callproperty Qname(PackageNamespace(""),"toString") 0
         coerce_a
         jump ofs0052
         ofs004b:getlocal 5
         callproperty Qname(PackageNamespace(""),"plainText") 0
         coerce_a
         ofs0052:add
         coerce_s
         setlocal 4
         ofs0056:getlocal 5
         getproperty Qname(PackageNamespace(""),"next")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal 5
         ofs0060:getlocal 5
         iftrue ofs0013
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getChannels() : Array
      {
         trait method Qname(PackageNamespace(""),"getChannels")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_3
         findpropstrict Qname(PackageNamespace(""),"Array")
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"GLOBAL_CHANNEL")
         constructprop Qname(PackageNamespace(""),"Array") 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_1
         getlocal_0
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"DEFAULT_CHANNEL")
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1168"),"addIfexist") 2
         getlocal_0
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"FILTER_CHANNEL")
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1168"),"addIfexist") 2
         getlocal_0
         getlex Qname(PackageNamespace("com.junkbyte.console.core"),"LogReferences")
         getproperty Qname(PackageNamespace(""),"INSPECTING_CHANNEL")
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1168"),"addIfexist") 2
         getlocal_0
         getlex Qname(PackageNamespace("com.junkbyte.console"),"Console")
         getproperty Qname(PackageNamespace(""),"CONSOLE_CHANNEL")
         getlocal_1
         callpropvoid Qname(PrivateNamespace(null,"1168"),"addIfexist") 2
         findpropstrict Qname(PackageNamespace(""),"Array")
         constructprop Qname(PackageNamespace(""),"Array") 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_2
         pushbyte 0
         setlocal 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_channels")
         coerce_a
         setlocal 5
         jump ofs007b
         ofs005f:label
         getlocal 5
         getlocal 4
         nextname
         coerce_s
         setlocal_3
         getlocal_1
         getlocal_3
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         pushbyte 0
         ifnlt ofs007b
         getlocal_2
         getlocal_3
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs007b:hasnext2 5 4
         iftrue ofs005f
         kill 5
         kill 4
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace(""),"Array")
         getproperty Qname(PackageNamespace(""),"CASEINSENSITIVE")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"sort") 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function addIfexist(param1:String, param2:Array) : void
      {
         trait method Qname(PrivateNamespace(null,"1168"),"addIfexist")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Array")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_channels")
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"hasOwnProperty") 1
         iffalse ofs0017
         getlocal_2
         getlocal_1
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function cleanChannels() : void
      {
         trait method Qname(PackageNamespace(""),"cleanChannels")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"Object")
         constructprop Qname(PackageNamespace(""),"Object") 0
         initproperty Qname(PrivateNamespace(null,"1168"),"_channels")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"first")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal_1
         jump ofs0029
         ofs0017:label
         getlocal_0
         getlocal_1
         getproperty Qname(PackageNamespace(""),"ch")
         callpropvoid Qname(PackageNamespace(""),"addChannel") 1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"next")
         coerce Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         setlocal_1
         ofs0029:getlocal_1
         iftrue ofs0017
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addChannel(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"addChannel")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_channels")
         getlocal_1
         pushnull
         setproperty MultinameL([PrivateNamespace(null,"1168"),PackageNamespace(""),PackageInternalNs("com.junkbyte.console.core"),PrivateNamespace(null,"2102"),PackageNamespace("com.junkbyte.console.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.junkbyte.console.core:Logs"),StaticProtectedNs("com.junkbyte.console.core:Logs"),StaticProtectedNs("com.junkbyte.console.core:ConsoleCore"),StaticProtectedNs("flash.events:EventDispatcher")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function push(param1:Log) : void
      {
         trait method Qname(PrivateNamespace(null,"1168"),"push")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"last")
         pushnull
         ifne ofs0014
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"first")
         jump ofs0024
         ofs0014:getlocal_0
         getproperty Qname(PackageNamespace(""),"last")
         getlocal_1
         setproperty Qname(PackageNamespace(""),"next")
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"last")
         setproperty Qname(PackageNamespace(""),"prev")
         ofs0024:getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"last")
         getlocal_0
         dup
         setlocal_2
         getproperty Qname(PrivateNamespace(null,"1168"),"_length")
         increment
         setlocal_3
         getlocal_2
         getlocal_3
         setproperty Qname(PrivateNamespace(null,"1168"),"_length")
         kill 3
         kill 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function remove(param1:Log) : void
      {
         trait method Qname(PrivateNamespace(null,"1168"),"remove")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.junkbyte.console.vos"),"Log")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"first")
         getlocal_1
         ifne ofs0013
         getlocal_0
         getlocal_1
         getproperty Qname(PackageNamespace(""),"next")
         initproperty Qname(PackageNamespace(""),"first")
         ofs0013:getlocal_0
         getproperty Qname(PackageNamespace(""),"last")
         getlocal_1
         ifne ofs0024
         getlocal_0
         getlocal_1
         getproperty Qname(PackageNamespace(""),"prev")
         initproperty Qname(PackageNamespace(""),"last")
         ofs0024:getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         ifne ofs0032
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"1168"),"_lastRepeat")
         ofs0032:getlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1168"),"_newRepeat")
         ifne ofs0040
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"1168"),"_newRepeat")
         ofs0040:getlocal_1
         getproperty Qname(PackageNamespace(""),"next")
         pushnull
         ifeq ofs0054
         getlocal_1
         getproperty Qname(PackageNamespace(""),"next")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"prev")
         setproperty Qname(PackageNamespace(""),"prev")
         ofs0054:getlocal_1
         getproperty Qname(PackageNamespace(""),"prev")
         pushnull
         ifeq ofs0068
         getlocal_1
         getproperty Qname(PackageNamespace(""),"prev")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"next")
         setproperty Qname(PackageNamespace(""),"next")
         ofs0068:getlocal_0
         dup
         setlocal_2
         getproperty Qname(PrivateNamespace(null,"1168"),"_length")
         decrement
         setlocal_3
         getlocal_2
         getlocal_3
         setproperty Qname(PrivateNamespace(null,"1168"),"_length")
         kill 3
         kill 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

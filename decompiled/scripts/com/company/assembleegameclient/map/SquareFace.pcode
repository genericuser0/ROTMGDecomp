package com.company.assembleegameclient.map
{
   import com.company.assembleegameclient.engine3d.Face3D;
   import com.company.assembleegameclient.parameters.Parameters;
   import flash.display.BitmapData;
   import flash.display.IGraphicsData;
   import kabam.rotmg.stage3D.GraphicsFillExtra;
   
   public class SquareFace
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var animate_:int;
      
      public var face_:Face3D;
      
      public var xOffset_:Number = 0;
      
      public var yOffset_:Number = 0;
      
      public var animateDx_:Number = 0;
      
      public var animateDy_:Number = 0;
      
      public function SquareFace(param1:BitmapData, param2:Vector.<Number>, param3:Number, param4:Number, param5:int, param6:Number, param7:Number)
      {
         method
         name null
         param Qname(PackageNamespace("flash.display"),"BitmapData")
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Number")>)
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns null
         
         body
         maxstack 5
         localcount 8
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.engine3d"),"Face3D")
         getlocal_1
         getlocal_2
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         getproperty Qname(PackageNamespace(""),"UVT")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"concat") 0
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.engine3d"),"Face3D") 3
         initproperty Qname(PackageNamespace(""),"face_")
         getlocal_0
         getlocal_3
         initproperty Qname(PackageNamespace(""),"xOffset_")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"yOffset_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"xOffset_")
         pushbyte 0
         equals
         not
         dup
         iftrue ofs003f
         pop
         getlocal_0
         getproperty Qname(PackageNamespace(""),"yOffset_")
         pushbyte 0
         equals
         not
         ofs003f:iffalse ofs004e
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getproperty Qname(PackageNamespace(""),"bitmapFill_")
         pushtrue
         setproperty Qname(PackageNamespace(""),"repeat")
         ofs004e:getlocal_0
         getlocal 5
         initproperty Qname(PackageNamespace(""),"animate_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"animate_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"AnimateProperties")
         getproperty Qname(PackageNamespace(""),"NO_ANIMATE")
         ifeq ofs006e
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getproperty Qname(PackageNamespace(""),"bitmapFill_")
         pushtrue
         setproperty Qname(PackageNamespace(""),"repeat")
         ofs006e:getlocal_0
         getlocal 6
         initproperty Qname(PackageNamespace(""),"animateDx_")
         getlocal_0
         getlocal 7
         initproperty Qname(PackageNamespace(""),"animateDy_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function dispose() : void
      {
         trait method Qname(PackageNamespace(""),"dispose")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         callpropvoid Qname(PackageNamespace(""),"dispose") 0
         getlocal_0
         pushnull
         initproperty Qname(PackageNamespace(""),"face_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function draw(param1:Vector.<IGraphicsData>, param2:Camera, param3:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"draw")
         dispid 0
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"IGraphicsData")>)
         param Qname(PackageNamespace("com.company.assembleegameclient.map"),"Camera")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 13
         localcount 7
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 4
         pushnan
         setlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"animate_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"AnimateProperties")
         getproperty Qname(PackageNamespace(""),"NO_ANIMATE")
         ifeq ofs00d0
         jump ofs0084
         ofs001b:label
         getlocal_0
         getproperty Qname(PackageNamespace(""),"xOffset_")
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"animateDx_")
         getlocal_3
         multiply
         pushshort 1000
         divide
         callproperty Qname(PackageNamespace(""),"sin") 1
         add
         convert_d
         setlocal 4
         getlocal_0
         getproperty Qname(PackageNamespace(""),"yOffset_")
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"animateDy_")
         getlocal_3
         multiply
         pushshort 1000
         divide
         callproperty Qname(PackageNamespace(""),"sin") 1
         add
         convert_d
         setlocal 5
         jump ofs00cc
         ofs0056:label
         getlocal_0
         getproperty Qname(PackageNamespace(""),"xOffset_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"animateDx_")
         getlocal_3
         multiply
         pushshort 1000
         divide
         add
         convert_d
         setlocal 4
         getlocal_0
         getproperty Qname(PackageNamespace(""),"yOffset_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"animateDy_")
         getlocal_3
         multiply
         pushshort 1000
         divide
         add
         convert_d
         setlocal 5
         jump ofs00cc
         ofs007f:label
         jump ofs00cc
         ofs0084:getlocal_0
         getproperty Qname(PackageNamespace(""),"animate_")
         setlocal 6
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"AnimateProperties")
         getproperty Qname(PackageNamespace(""),"WAVE_ANIMATE")
         getlocal 6
         ifstrictne ofs009d
         pushbyte 0
         jump ofs00bc
         ofs009d:getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"AnimateProperties")
         getproperty Qname(PackageNamespace(""),"FLOW_ANIMATE")
         getlocal 6
         ifstrictne ofs00b0
         pushbyte 1
         jump ofs00bc
         ofs00b0:jump ofs00ba
         pushbyte 2
         jump ofs00ba
         ofs00ba:pushbyte 2
         ofs00bc:kill 6
         lookupswitch ofs007f 2 ofs001b ofs0056 ofs007f
         ofs00cc:jump ofs00de
         ofs00d0:getlocal_0
         getproperty Qname(PackageNamespace(""),"xOffset_")
         convert_d
         setlocal 4
         getlocal_0
         getproperty Qname(PackageNamespace(""),"yOffset_")
         convert_d
         setlocal 5
         ofs00de:getlex Qname(PackageNamespace("com.company.assembleegameclient.parameters"),"Parameters")
         callproperty Qname(PackageNamespace(""),"isGpuRender") 0
         iffalse ofs010c
         getlex Qname(PackageNamespace("kabam.rotmg.stage3D"),"GraphicsFillExtra")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getproperty Qname(PackageNamespace(""),"bitmapFill_")
         getlocal 4
         getlocal 5
         callpropvoid Qname(PackageNamespace(""),"setOffsetUV") 3
         pushbyte 0
         dup
         setlocal 6
         convert_d
         setlocal 5
         getlocal 6
         kill 6
         convert_d
         setlocal 4
         ofs010c:getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getproperty Qname(PackageNamespace(""),"uvt_")
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"length")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getproperty Qname(PackageNamespace(""),"uvt_")
         pushbyte 0
         getlocal 4
         add
         pushbyte 0
         getlocal 5
         add
         pushbyte 0
         pushbyte 1
         getlocal 4
         add
         pushbyte 0
         getlocal 5
         add
         pushbyte 0
         pushbyte 1
         getlocal 4
         add
         pushbyte 1
         getlocal 5
         add
         pushbyte 0
         dup
         getlocal 4
         add
         pushbyte 1
         getlocal 5
         add
         pushbyte 0
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 12
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getproperty Qname(PackageNamespace(""),"uvt_")
         callpropvoid Qname(PackageNamespace(""),"setUVT") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"face_")
         getlocal_1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"draw") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

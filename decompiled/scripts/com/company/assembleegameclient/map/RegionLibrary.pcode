package com.company.assembleegameclient.map
{
   import flash.utils.Dictionary;
   
   public class RegionLibrary
   {
      
      public static const xmlLibrary_:Dictionary;
      
      public static var idToType_:Dictionary;
      
      public static const ENTRY_REGION_TYPE:uint = 1;
      
      public static const EXIT_REGION_TYPE:uint = 48;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"xmlLibrary_")
         findpropstrict Qname(PackageNamespace("flash.utils"),"Dictionary")
         constructprop Qname(PackageNamespace("flash.utils"),"Dictionary") 0
         initproperty Qname(PackageNamespace(""),"xmlLibrary_")
         findproperty Qname(PackageNamespace(""),"idToType_")
         findpropstrict Qname(PackageNamespace("flash.utils"),"Dictionary")
         constructprop Qname(PackageNamespace("flash.utils"),"Dictionary") 0
         setproperty Qname(PackageNamespace(""),"idToType_")
         findproperty Qname(PackageNamespace(""),"ENTRY_REGION_TYPE")
         pushbyte 1
         initproperty Qname(PackageNamespace(""),"ENTRY_REGION_TYPE")
         findproperty Qname(PackageNamespace(""),"EXIT_REGION_TYPE")
         pushbyte 48
         initproperty Qname(PackageNamespace(""),"EXIT_REGION_TYPE")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function RegionLibrary()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function parseFromXML(param1:XML) : void
      {
         trait method Qname(PackageNamespace(""),"parseFromXML")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"XML")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_2
         pushbyte 0
         setlocal_3
         pushbyte 0
         setlocal 4
         getlocal_1
         getproperty Multiname("Region",[PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         coerce_a
         setlocal 5
         jump ofs004b
         ofs0019:label
         getlocal 5
         getlocal 4
         nextvalue
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_2
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_2
         getproperty MultinameA("type",[PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         callproperty Qname(PackageNamespace(""),"int") 1
         convert_i
         setlocal_3
         getlex Qname(PackageNamespace(""),"xmlLibrary_")
         getlocal_3
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         getlex Qname(PackageNamespace(""),"idToType_")
         findpropstrict Qname(PackageNamespace(""),"String")
         getlocal_2
         getproperty MultinameA("id",[PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         callproperty Qname(PackageNamespace(""),"String") 1
         getlocal_3
         setproperty MultinameL([PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         ofs004b:hasnext2 5 4
         iftrue ofs0019
         kill 5
         kill 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getIdFromType(param1:int) : String
      {
         trait method Qname(PackageNamespace(""),"getIdFromType")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"xmlLibrary_")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_2
         getlocal_2
         pushnull
         ifne ofs0016
         pushnull
         returnvalue
         ofs0016:findpropstrict Qname(PackageNamespace(""),"String")
         getlocal_2
         getproperty MultinameA("id",[PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         callproperty Qname(PackageNamespace(""),"String") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getColor(param1:int) : uint
      {
         trait method Qname(PackageNamespace(""),"getColor")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"xmlLibrary_")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_2
         getlocal_2
         pushnull
         ifne ofs0017
         pushbyte 0
         returnvalue
         ofs0017:findpropstrict Qname(PackageNamespace(""),"uint")
         getlocal_2
         getproperty Multiname("Color",[PrivateNamespace(null,"1465"),PackageNamespace(""),PrivateNamespace(null,"1466"),PackageNamespace("com.company.assembleegameclient.map"),PackageInternalNs("com.company.assembleegameclient.map"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.map:RegionLibrary"),StaticProtectedNs("com.company.assembleegameclient.map:RegionLibrary")])
         callproperty Qname(PackageNamespace(""),"uint") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.company.assembleegameclient.objects
{
   import com.company.assembleegameclient.map.Camera;
   import com.company.assembleegameclient.map.Square#93;
   import flash.display.IGraphicsData;
   
   public class SpiderWeb extends GameObject
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var wallFound_:Boolean = false;
      
      public function SpiderWeb(param1:XML)
      {
         method
         name null
         param Qname(PackageNamespace(""),"XML")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         constructsuper 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function draw(param1:Vector.<IGraphicsData>, param2:Camera, param3:int) : void
      {
         trait method Qname(PackageNamespace(""),"draw")
         flag OVERRIDE
         dispid 0
         method
         name null
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"IGraphicsData")>)
         param Qname(PackageNamespace("com.company.assembleegameclient.map"),"Camera")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"769"),"wallFound_")
         iftrue ofs0013
         getlocal_0
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"769"),"findWall") 0
         initproperty Qname(PrivateNamespace(null,"769"),"wallFound_")
         ofs0013:getlocal_0
         getproperty Qname(PrivateNamespace(null,"769"),"wallFound_")
         iffalse ofs0023
         getlocal_0
         getlocal_1
         getlocal_2
         getlocal_3
         callsupervoid Qname(PackageNamespace(""),"draw") 3
         ofs0023:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function findWall() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"769"),"findWall")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         setlocal_1
         getlex Qname(PackageNamespace(""),"map_")
         getlex Qname(PackageNamespace(""),"x_")
         decrement
         getlex Qname(PackageNamespace(""),"y_")
         callproperty Qname(PackageNamespace(""),"lookupSquare") 2
         coerce Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         setlocal_1
         getlocal_1
         pushnull
         equals
         not
         dup
         iffalse ofs002b
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"obj_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Wall")
         istypelate
         ofs002b:iffalse ofs0031
         pushtrue
         returnvalue
         ofs0031:getlex Qname(PackageNamespace(""),"map_")
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         decrement
         callproperty Qname(PackageNamespace(""),"lookupSquare") 2
         coerce Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         setlocal_1
         getlocal_1
         pushnull
         equals
         not
         dup
         iffalse ofs0055
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"obj_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Wall")
         istypelate
         ofs0055:iffalse ofs006c
         getlex Qname(PackageNamespace(""),"obj3D_")
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         pushbyte 0
         pushbyte 90
         callpropvoid Qname(PackageNamespace(""),"setPosition") 4
         pushtrue
         returnvalue
         ofs006c:getlex Qname(PackageNamespace(""),"map_")
         getlex Qname(PackageNamespace(""),"x_")
         pushbyte 1
         add
         getlex Qname(PackageNamespace(""),"y_")
         callproperty Qname(PackageNamespace(""),"lookupSquare") 2
         coerce Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         setlocal_1
         getlocal_1
         pushnull
         equals
         not
         dup
         iffalse ofs0092
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"obj_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Wall")
         istypelate
         ofs0092:iffalse ofs00aa
         getlex Qname(PackageNamespace(""),"obj3D_")
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         pushbyte 0
         pushshort 180
         callpropvoid Qname(PackageNamespace(""),"setPosition") 4
         pushtrue
         returnvalue
         ofs00aa:getlex Qname(PackageNamespace(""),"map_")
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         pushbyte 1
         add
         callproperty Qname(PackageNamespace(""),"lookupSquare") 2
         coerce Qname(PackageNamespace("com.company.assembleegameclient.map"),"Square")
         setlocal_1
         getlocal_1
         pushnull
         equals
         not
         dup
         iffalse ofs00d0
         pop
         getlocal_1
         getproperty Qname(PackageNamespace(""),"obj_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Wall")
         istypelate
         ofs00d0:iffalse ofs00e8
         getlex Qname(PackageNamespace(""),"obj3D_")
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         pushbyte 0
         pushshort 270
         callpropvoid Qname(PackageNamespace(""),"setPosition") 4
         pushtrue
         returnvalue
         ofs00e8:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

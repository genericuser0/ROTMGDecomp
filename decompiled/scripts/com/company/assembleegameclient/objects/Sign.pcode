package com.company.assembleegameclient.objects
{
   import com.company.assembleegameclient.map.Camera;
   import com.company.assembleegameclient.util.TextureRedrawer;
   import flash.display.BitmapData;
   import flash.text.TextField;
   import flash.text.TextFieldAutoSize;
   import flash.text.TextFormat;
   import flash.text.TextFormatAlign;
   import kabam.rotmg.core.StaticInjectorContext;
   import kabam.rotmg.language.model.StringMap;
   import kabam.rotmg.text.model.FontModel;
   
   public class Sign extends GameObject
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var stringMap:StringMap;
      
      private var fontModel:FontModel;
      
      public function Sign(param1:XML)
      {
         method
         name null
         param Qname(PackageNamespace(""),"XML")
         returns null
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         constructsuper 1
         findproperty Qname(PackageNamespace(""),"texture_")
         pushnull
         initproperty Qname(PackageNamespace(""),"texture_")
         getlocal_0
         getlex Qname(PackageNamespace("kabam.rotmg.core"),"StaticInjectorContext")
         callproperty Qname(PackageNamespace(""),"getInjector") 0
         getlex Qname(PackageNamespace("kabam.rotmg.language.model"),"StringMap")
         callproperty Qname(PackageNamespace(""),"getInstance") 1
         initproperty Qname(PrivateNamespace(null,"773"),"stringMap")
         getlocal_0
         getlex Qname(PackageNamespace("kabam.rotmg.core"),"StaticInjectorContext")
         callproperty Qname(PackageNamespace(""),"getInjector") 0
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"FontModel")
         callproperty Qname(PackageNamespace(""),"getInstance") 1
         initproperty Qname(PrivateNamespace(null,"773"),"fontModel")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function getTexture(param1:Camera, param2:int) : BitmapData
      {
         trait method Qname(ProtectedNamespace("com.company.assembleegameclient.objects:Sign"),"getTexture")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.map"),"Camera")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace("flash.display"),"BitmapData")
         
         body
         maxstack 6
         localcount 7
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"texture_")
         pushnull
         ifeq ofs000e
         getlex Qname(PackageNamespace(""),"texture_")
         returnvalue
         ofs000e:findpropstrict Qname(PackageNamespace("flash.text"),"TextField")
         constructprop Qname(PackageNamespace("flash.text"),"TextField") 0
         coerce Qname(PackageNamespace("flash.text"),"TextField")
         setlocal_3
         getlocal_3
         pushtrue
         setproperty Qname(PackageNamespace(""),"multiline")
         getlocal_3
         pushfalse
         setproperty Qname(PackageNamespace(""),"wordWrap")
         getlocal_3
         getlex Qname(PackageNamespace("flash.text"),"TextFieldAutoSize")
         getproperty Qname(PackageNamespace(""),"LEFT")
         setproperty Qname(PackageNamespace(""),"autoSize")
         getlocal_3
         pushint 16777215
         setproperty Qname(PackageNamespace(""),"textColor")
         getlocal_3
         pushtrue
         setproperty Qname(PackageNamespace(""),"embedFonts")
         findpropstrict Qname(PackageNamespace("flash.text"),"TextFormat")
         constructprop Qname(PackageNamespace("flash.text"),"TextFormat") 0
         coerce Qname(PackageNamespace("flash.text"),"TextFormat")
         dup
         setlocal 4
         getlex Qname(PackageNamespace("flash.text"),"TextFormatAlign")
         getproperty Qname(PackageNamespace(""),"CENTER")
         setproperty Qname(PackageNamespace(""),"align")
         getlocal 4
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"773"),"fontModel")
         callproperty Qname(PackageNamespace(""),"getFont") 0
         callproperty Qname(PackageNamespace(""),"getName") 0
         setproperty Qname(PackageNamespace(""),"font")
         getlocal 4
         pushbyte 24
         setproperty Qname(PackageNamespace(""),"size")
         getlocal 4
         pushint 16777215
         setproperty Qname(PackageNamespace(""),"color")
         getlocal 4
         pushtrue
         setproperty Qname(PackageNamespace(""),"bold")
         getlocal_3
         getlocal 4
         setproperty Qname(PackageNamespace(""),"defaultTextFormat")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"773"),"stringMap")
         getlocal_0
         getlex Qname(PackageNamespace(""),"name_")
         callproperty Qname(PrivateNamespace(null,"773"),"stripCurlyBrackets") 1
         callproperty Qname(Namespace("kabam.rotmg.language.model:StringMap"),"getValue") 1
         coerce_s
         dup
         setlocal 5
         pushnull
         ifne ofs00b0
         getlex Qname(PackageNamespace(""),"name_")
         pushnull
         ifeq ofs00a9
         getlex Qname(PackageNamespace(""),"name_")
         coerce_s
         jump ofs00ad
         ofs00a9:pushstring "null"
         ofs00ad:coerce_s
         setlocal 5
         ofs00b0:getlocal_3
         getlocal 5
         pushstring "|"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"split") 1
         pushstring "\n"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         setproperty Qname(PackageNamespace(""),"text")
         findpropstrict Qname(PackageNamespace(""),"BitmapDataSpy")
         getlocal_3
         getproperty Qname(PackageNamespace(""),"width")
         getlocal_3
         getproperty Qname(PackageNamespace(""),"height")
         pushtrue
         pushbyte 0
         constructprop Qname(PackageNamespace(""),"BitmapDataSpy") 4
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         dup
         setlocal 6
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"draw") 1
         findproperty Qname(PackageNamespace(""),"texture_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"TextureRedrawer")
         getlocal 6
         getlex Qname(PackageNamespace(""),"size_")
         pushfalse
         pushbyte 0
         callproperty Qname(PackageNamespace(""),"redraw") 4
         initproperty Qname(PackageNamespace(""),"texture_")
         getlex Qname(PackageNamespace(""),"texture_")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function stripCurlyBrackets(param1:String) : String
      {
         trait method Qname(PrivateNamespace(null,"773"),"stripCurlyBrackets")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         equals
         not
         dup
         iffalse ofs0019
         pop
         getlocal_1
         pushbyte 0
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
         pushstring "{"
         equals
         ofs0019:dup
         iffalse ofs002f
         pop
         getlocal_1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         decrement
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charAt") 1
         pushstring "}"
         equals
         ofs002f:convert_b
         setlocal_2
         getlocal_2
         iffalse ofs004a
         getlocal_1
         pushbyte 1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 2
         subtract
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 2
         coerce_s
         jump ofs004c
         ofs004a:getlocal_1
         coerce_s
         ofs004c:returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

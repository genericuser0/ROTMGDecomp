package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.assembleegameclient.util.ColorUtil;
   
   public class CircleEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var go_:GameObject;
      
      public var color_:uint;
      
      public var rise_:Number;
      
      public var rad_:Number;
      
      public var maxRad_:Number;
      
      public var lastUpdate_:int = -1;
      
      public var bInitialized_:Boolean = false;
      
      public var amount_:int;
      
      public var maxLife_:int;
      
      public var speed_:Number;
      
      public var parts_:Vector.<CircleParticle>;
      
      public function CircleEffect(param1:GameObject, param2:EffectProperties)
      {
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"EffectProperties")
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlex Multiname("Vector",[PrivateNamespace(null,"945"),PrivateNamespace(null,"944"),PackageNamespace(""),PackageNamespace("com.company.assembleegameclient.objects.particles"),PackageInternalNs("com.company.assembleegameclient.objects.particles"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.objects.particles:CircleEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:CircleEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:ParticleEffect"),StaticProtectedNs("com.company.assembleegameclient.objects:GameObject"),StaticProtectedNs("com.company.assembleegameclient.objects:BasicObject"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PrivateNamespace(null,"944"),"CircleParticle")
         applytype 1
         construct 0
         initproperty Qname(PackageNamespace(""),"parts_")
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"go_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"color")
         initproperty Qname(PackageNamespace(""),"color_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"rise")
         initproperty Qname(PackageNamespace(""),"rise_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"minRadius")
         initproperty Qname(PackageNamespace(""),"rad_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"maxRadius")
         initproperty Qname(PackageNamespace(""),"maxRad_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"amount")
         initproperty Qname(PackageNamespace(""),"amount_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"life")
         pushshort 1000
         multiply
         initproperty Qname(PackageNamespace(""),"maxLife_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"speed")
         initproperty Qname(PackageNamespace(""),"speed_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 6
         localcount 10
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PrivateNamespace(null,"944"),"CircleParticle")
         setlocal_3
         pushbyte 0
         setlocal 4
         pushnull
         coerce Qname(PrivateNamespace(null,"944"),"CircleParticle")
         setlocal 5
         pushnan
         setlocal 6
         pushnan
         setlocal 7
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"map_")
         pushnull
         ifne ofs0025
         pushfalse
         returnvalue
         ofs0025:getlocal_0
         getproperty Qname(PackageNamespace(""),"lastUpdate_")
         pushbyte 0
         ifnlt ofs0042
         getlocal_0
         getlex Qname(PackageNamespace(""),"Math")
         pushbyte 0
         getlocal_1
         pushshort 400
         subtract
         callproperty Qname(PackageNamespace(""),"max") 2
         initproperty Qname(PackageNamespace(""),"lastUpdate_")
         ofs0042:findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"x_")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"y_")
         initproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"bInitialized_")
         iftrue ofs00fe
         pushbyte 0
         setlocal 4
         jump ofs00ef
         ofs006c:label
         findpropstrict Qname(PrivateNamespace(null,"944"),"CircleParticle")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"ColorUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color_")
         callproperty Qname(PackageNamespace(""),"randomSmart") 1
         constructprop Qname(PrivateNamespace(null,"944"),"CircleParticle") 1
         coerce Qname(PrivateNamespace(null,"944"),"CircleParticle")
         dup
         setlocal 5
         getlex Qname(PackageNamespace(""),"x_")
         setproperty Qname(PackageNamespace(""),"cX_")
         getlocal 5
         getlex Qname(PackageNamespace(""),"y_")
         setproperty Qname(PackageNamespace(""),"cY_")
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         convert_d
         dup
         setlocal 6
         getlocal_0
         getproperty Qname(PackageNamespace(""),"amount_")
         divide
         convert_d
         setlocal 7
         getlocal 5
         getlocal_1
         setproperty Qname(PackageNamespace(""),"startTime_")
         getlocal 5
         getlocal 7
         getlocal 4
         multiply
         setproperty Qname(PackageNamespace(""),"angle_")
         getlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"rad_")
         setproperty Qname(PackageNamespace(""),"rad_")
         getlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"speed_")
         setproperty Qname(PackageNamespace(""),"speed_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"parts_")
         getlocal 5
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 5
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         getlocal 5
         callpropvoid Qname(PackageNamespace(""),"move") 0
         inclocal_i 4
         ofs00ef:getlocal 4
         getlocal_0
         getproperty Qname(PackageNamespace(""),"amount_")
         iflt ofs006c
         getlocal_0
         pushtrue
         initproperty Qname(PackageNamespace(""),"bInitialized_")
         ofs00fe:pushbyte 0
         setlocal 8
         getlocal_0
         getproperty Qname(PackageNamespace(""),"parts_")
         coerce_a
         setlocal 9
         jump ofs011f
         ofs010d:label
         getlocal 9
         getlocal 8
         nextvalue
         coerce Qname(PrivateNamespace(null,"944"),"CircleParticle")
         setlocal_3
         getlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"rad_")
         setproperty Qname(PackageNamespace(""),"rad_")
         ofs011f:hasnext2 9 8
         iftrue ofs010d
         kill 9
         kill 8
         getlocal_0
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"rad_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"rise_")
         getlocal_2
         pushshort 1000
         divide
         multiply
         add
         getlocal_0
         getproperty Qname(PackageNamespace(""),"maxRad_")
         callproperty Qname(PackageNamespace(""),"min") 2
         initproperty Qname(PackageNamespace(""),"rad_")
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"maxLife_")
         getlocal_2
         subtract
         initproperty Qname(PackageNamespace(""),"maxLife_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"maxLife_")
         pushbyte 0
         ifnle ofs0164
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"945"),"endEffect") 0
         pushfalse
         returnvalue
         ofs0164:getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"lastUpdate_")
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function endEffect() : void
      {
         trait method Qname(PrivateNamespace(null,"945"),"endEffect")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PrivateNamespace(null,"944"),"CircleParticle")
         setlocal_1
         pushbyte 0
         setlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"parts_")
         coerce_a
         setlocal_3
         jump ofs0021
         ofs0014:label
         getlocal_3
         getlocal_2
         nextvalue
         coerce Qname(PrivateNamespace(null,"944"),"CircleParticle")
         setlocal_1
         getlocal_1
         pushfalse
         setproperty Qname(PackageNamespace(""),"alive_")
         ofs0021:hasnext2 3 2
         iftrue ofs0014
         kill 3
         kill 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function removeFromMap() : void
      {
         trait method Qname(PackageNamespace(""),"removeFromMap")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callpropvoid Qname(PrivateNamespace(null,"945"),"endEffect") 0
         getlocal_0
         callsupervoid Qname(PackageNamespace(""),"removeFromMap") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

import com.company.assembleegameclient.objects.particles.Particle;
import com.company.assembleegameclient.util.FreeList;

class CircleParticle extends Particle
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public var startTime_:int;
   
   public var speed_:Number;
   
   public var cX_:Number;
   
   public var cY_:Number;
   
   public var angle_:Number;
   
   public var rad_:Number;
   
   public var alive_:Boolean = true;
   
   function CircleParticle(param1:uint = 0)
   {
      method
      name null
      flag HAS_OPTIONAL
      param Qname(PackageNamespace(""),"uint")
      optional 0
      returns null
      
      body
      maxstack 6
      localcount 3
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlex Qname(PackageNamespace(""),"Math")
      callproperty Qname(PackageNamespace(""),"random") 0
      convert_d
      setlocal_2
      getlocal_0
      getlocal_1
      pushdouble 0.2
      getlex Qname(PackageNamespace(""),"Math")
      callproperty Qname(PackageNamespace(""),"random") 0
      pushdouble 0.2
      multiply
      add
      pushbyte 100
      getlocal_2
      pushbyte 20
      multiply
      add
      constructsuper 3
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   override public function removeFromMap() : void
   {
      trait method Qname(PackageNamespace(""),"removeFromMap")
      flag OVERRIDE
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 1
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      callsupervoid Qname(PackageNamespace(""),"removeFromMap") 0
      getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"FreeList")
      getlocal_0
      callpropvoid Qname(PackageNamespace(""),"deleteObject") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function move() : void
   {
      trait method Qname(PackageNamespace(""),"move")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 5
      localcount 1
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      findproperty Qname(PackageNamespace(""),"x_")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"cX_")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"rad_")
      getlex Qname(PackageNamespace(""),"Math")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"angle_")
      callproperty Qname(PackageNamespace(""),"cos") 1
      multiply
      add
      initproperty Qname(PackageNamespace(""),"x_")
      findproperty Qname(PackageNamespace(""),"y_")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"cY_")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"rad_")
      getlex Qname(PackageNamespace(""),"Math")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"angle_")
      callproperty Qname(PackageNamespace(""),"sin") 1
      multiply
      add
      initproperty Qname(PackageNamespace(""),"y_")
      getlocal_0
      getlocal_0
      getproperty Qname(PackageNamespace(""),"angle_")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"speed_")
      add
      initproperty Qname(PackageNamespace(""),"angle_")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   override public function update(param1:int, param2:int) : Boolean
   {
      trait method Qname(PackageNamespace(""),"update")
      flag OVERRIDE
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 3
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      callpropvoid Qname(PackageNamespace(""),"move") 0
      getlocal_0
      getproperty Qname(PackageNamespace(""),"alive_")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

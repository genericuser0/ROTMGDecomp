package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.assembleegameclient.util.FreeList;
   
   public class VortexEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var go_:GameObject;
      
      public var color_:uint;
      
      public var rad_:Number;
      
      public var lastUpdate_:int = -1;
      
      public function VortexEffect(param1:GameObject, param2:EffectProperties)
      {
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"EffectProperties")
         returns null
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"go_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"color")
         initproperty Qname(PackageNamespace(""),"color_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"color")
         initproperty Qname(PackageNamespace(""),"color_")
         getlocal_0
         getlocal_2
         getproperty Qname(PackageNamespace(""),"minRadius")
         initproperty Qname(PackageNamespace(""),"rad_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         setlocal 4
         pushnull
         coerce Qname(PrivateNamespace(null,"942"),"VortexParticle")
         setlocal 5
         pushnan
         setlocal 6
         pushnan
         setlocal 7
         pushnan
         setlocal 8
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"map_")
         pushnull
         ifne ofs0023
         pushfalse
         returnvalue
         ofs0023:getlocal_0
         getproperty Qname(PackageNamespace(""),"lastUpdate_")
         pushbyte 0
         ifnlt ofs0040
         getlocal_0
         getlex Qname(PackageNamespace(""),"Math")
         pushbyte 0
         getlocal_1
         pushshort 400
         subtract
         callproperty Qname(PackageNamespace(""),"max") 2
         initproperty Qname(PackageNamespace(""),"lastUpdate_")
         ofs0040:findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"x_")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"y_")
         initproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"lastUpdate_")
         pushbyte 50
         divide
         convert_i
         setlocal_3
         jump ofs00eb
         ofs0067:label
         getlocal_3
         pushbyte 50
         multiply
         convert_i
         setlocal 4
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"FreeList")
         getlex Qname(PrivateNamespace(null,"942"),"VortexParticle")
         callproperty Qname(PackageNamespace(""),"newObject") 1
         getlex Qname(PrivateNamespace(null,"942"),"VortexParticle")
         astypelate
         coerce Qname(PrivateNamespace(null,"942"),"VortexParticle")
         dup
         setlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color_")
         callpropvoid Qname(PackageNamespace(""),"setColor") 1
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         convert_d
         setlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 6
         callproperty Qname(PackageNamespace(""),"cos") 1
         pushbyte 6
         multiply
         convert_d
         setlocal 7
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 6
         callproperty Qname(PackageNamespace(""),"sin") 1
         pushbyte 6
         multiply
         convert_d
         setlocal 8
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 5
         getlex Qname(PackageNamespace(""),"x_")
         getlocal 7
         add
         getlex Qname(PackageNamespace(""),"y_")
         getlocal 8
         add
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         getlocal 5
         getlocal 4
         getlocal_1
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"restart") 4
         inclocal_i 3
         ofs00eb:getlocal_3
         getlocal_1
         pushbyte 50
         divide
         iflt ofs0067
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"lastUpdate_")
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

import com.company.assembleegameclient.objects.particles.Particle;
import com.company.assembleegameclient.util.FreeList;
import flash.geom.Vector3D;

class VortexParticle extends Particle
{
   
   private static const G:Number = 4;
   
   {
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      findproperty Qname(PrivateNamespace(null,"943"),"G")
      pushbyte 4
      initproperty Qname(PrivateNamespace(null,"943"),"G")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public var startTime_:int;
   
   protected var moveVec_:Vector3D;
   
   private var A:Number;
   
   private var mSize:Number;
   
   private var centerX_:Number;
   
   private var centerY_:Number;
   
   private var initAccelX:Number;
   
   private var initAccelY:Number;
   
   private var fSize:Number = 0;
   
   function VortexParticle(param1:uint = 2556008)
   {
      method
      name null
      flag HAS_OPTIONAL
      param Qname(PackageNamespace(""),"uint")
      optional 2556008
      returns null
      
      body
      maxstack 4
      localcount 2
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
      constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 0
      initproperty Qname(ProtectedNamespace("VortexEffect.as$1187:VortexParticle"),"moveVec_")
      getlocal_0
      pushdouble 2.5
      pushdouble 0.5
      getlex Qname(PackageNamespace(""),"Math")
      callproperty Qname(PackageNamespace(""),"random") 0
      multiply
      add
      initproperty Qname(PrivateNamespace(null,"943"),"A")
      getlocal_0
      pushdouble 3.5
      pushbyte 2
      getlex Qname(PackageNamespace(""),"Math")
      callproperty Qname(PackageNamespace(""),"random") 0
      multiply
      add
      initproperty Qname(PrivateNamespace(null,"943"),"mSize")
      getlocal_0
      getlocal_1
      pushbyte 1
      pushbyte 0
      constructsuper 3
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function restart(param1:int, param2:int, param3:Number, param4:Number) : void
   {
      trait method Qname(PackageNamespace(""),"restart")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"Number")
      param Qname(PackageNamespace(""),"Number")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 4
      localcount 6
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_3
      initproperty Qname(PrivateNamespace(null,"943"),"centerX_")
      getlocal_0
      getlocal 4
      initproperty Qname(PrivateNamespace(null,"943"),"centerY_")
      getlex Qname(PackageNamespace(""),"Math")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"centerX_")
      getlex Qname(PackageNamespace(""),"x_")
      subtract
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"centerY_")
      getlex Qname(PackageNamespace(""),"y_")
      subtract
      callproperty Qname(PackageNamespace(""),"atan2") 2
      getlex Qname(PackageNamespace(""),"Math")
      getproperty Qname(PackageNamespace(""),"PI")
      pushbyte 2
      divide
      add
      getlex Qname(PackageNamespace(""),"Math")
      getproperty Qname(PackageNamespace(""),"PI")
      pushbyte 6
      divide
      subtract
      convert_d
      setlocal 5
      getlocal_0
      getlex Qname(PackageNamespace(""),"Math")
      getlocal 5
      callproperty Qname(PackageNamespace(""),"sin") 1
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"A")
      multiply
      initproperty Qname(PrivateNamespace(null,"943"),"initAccelX")
      getlocal_0
      getlex Qname(PackageNamespace(""),"Math")
      getlocal 5
      callproperty Qname(PackageNamespace(""),"cos") 1
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"A")
      multiply
      initproperty Qname(PrivateNamespace(null,"943"),"initAccelY")
      findproperty Qname(PackageNamespace(""),"z_")
      pushbyte 1
      initproperty Qname(PackageNamespace(""),"z_")
      getlocal_0
      pushbyte 0
      initproperty Qname(PrivateNamespace(null,"943"),"fSize")
      findproperty Qname(PackageNamespace(""),"size_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"fSize")
      initproperty Qname(PackageNamespace(""),"size_")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   override public function removeFromMap() : void
   {
      trait method Qname(PackageNamespace(""),"removeFromMap")
      flag OVERRIDE
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 1
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      callsupervoid Qname(PackageNamespace(""),"removeFromMap") 0
      getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"FreeList")
      getlocal_0
      callpropvoid Qname(PackageNamespace(""),"deleteObject") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   override public function update(param1:int, param2:int) : Boolean
   {
      trait method Qname(PackageNamespace(""),"update")
      flag OVERRIDE
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 5
      localcount 7
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlex Qname(PackageNamespace(""),"Math")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"centerX_")
      getlex Qname(PackageNamespace(""),"x_")
      subtract
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"centerY_")
      getlex Qname(PackageNamespace(""),"y_")
      subtract
      callproperty Qname(PackageNamespace(""),"atan2") 2
      convert_d
      setlocal_3
      pushbyte 1
      convert_d
      setlocal 4
      getlex Qname(PackageNamespace(""),"Math")
      getlocal_3
      callproperty Qname(PackageNamespace(""),"sin") 1
      getlocal 4
      divide
      getlex Qname(PrivateNamespace(null,"943"),"G")
      multiply
      convert_d
      setlocal 5
      getlex Qname(PackageNamespace(""),"Math")
      getlocal_3
      callproperty Qname(PackageNamespace(""),"cos") 1
      getlocal 4
      divide
      getlex Qname(PrivateNamespace(null,"943"),"G")
      multiply
      convert_d
      setlocal 6
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"mSize")
      getlex Qname(PackageNamespace(""),"size_")
      ifngt ofs0064
      getlocal_0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"fSize")
      getlocal_2
      pushdouble 0.01
      multiply
      add
      initproperty Qname(PrivateNamespace(null,"943"),"fSize")
      ofs0064:findproperty Qname(PackageNamespace(""),"size_")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"fSize")
      initproperty Qname(PackageNamespace(""),"size_")
      findpropstrict Qname(PackageNamespace(""),"moveTo")
      getlex Qname(PackageNamespace(""),"x_")
      getlocal 5
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"initAccelX")
      add
      getlocal_2
      multiply
      pushdouble 6.0E-4
      multiply
      add
      getlex Qname(PackageNamespace(""),"y_")
      getlocal 6
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"943"),"initAccelY")
      add
      getlocal_2
      multiply
      pushdouble 6.0E-4
      multiply
      add
      callpropvoid Qname(PackageNamespace(""),"moveTo") 2
      findproperty Qname(PackageNamespace(""),"z_")
      getlex Qname(PackageNamespace(""),"z_")
      pushdouble -0.5
      getlocal_2
      multiply
      pushdouble 6.0E-4
      multiply
      add
      initproperty Qname(PackageNamespace(""),"z_")
      getlex Qname(PackageNamespace(""),"z_")
      pushdouble 0.0
      greaterthan
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

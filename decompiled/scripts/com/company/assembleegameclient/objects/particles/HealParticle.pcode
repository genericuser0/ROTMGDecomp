package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.util.MoreColorUtil;
   import flash.geom.Vector3D;
   
   public class HealParticle extends Particle
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var duration_:int;
      
      private var percentDone:Number;
      
      private var currentLife:int;
      
      public var go_:GameObject;
      
      public var angle_:Number;
      
      public var dist_:Number;
      
      protected var moveVec_:Vector3D;
      
      public var color1_:uint;
      
      public var color2_:uint;
      
      public function HealParticle(param1:uint, param2:Number, param3:int, param4:int, param5:Number, param6:GameObject, param7:Number, param8:Number, param9:uint)
      {
         method
         name null
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"uint")
         returns null
         
         body
         maxstack 4
         localcount 10
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
         constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 0
         initproperty Qname(ProtectedNamespace("com.company.assembleegameclient.objects.particles:HealParticle"),"moveVec_")
         getlocal_0
         getlocal_1
         getlocal_2
         getlocal_3
         constructsuper 3
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"color1_")
         getlocal_0
         getlocal 9
         initproperty Qname(PackageNamespace(""),"color2_")
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.company.assembleegameclient.objects.particles:HealParticle"),"moveVec_")
         getlocal 5
         setproperty Qname(PackageNamespace(""),"z")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"duration_")
         getlocal_0
         getlocal 6
         initproperty Qname(PackageNamespace(""),"go_")
         getlocal_0
         getlocal 7
         initproperty Qname(PackageNamespace(""),"angle_")
         getlocal_0
         getlocal 8
         initproperty Qname(PackageNamespace(""),"dist_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1104"),"currentLife")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"duration_")
         divide
         initproperty Qname(PrivateNamespace(null,"1104"),"percentDone")
         findpropstrict Qname(PackageNamespace(""),"setColor")
         getlex Qname(PackageNamespace("com.company.util"),"MoreColorUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color2_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color1_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1104"),"percentDone")
         callproperty Qname(PackageNamespace(""),"lerpColor") 3
         callpropvoid Qname(PackageNamespace(""),"setColor") 1
         findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dist_")
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"angle_")
         callproperty Qname(PackageNamespace(""),"cos") 1
         multiply
         add
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"go_")
         getproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"dist_")
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"angle_")
         callproperty Qname(PackageNamespace(""),"sin") 1
         multiply
         add
         initproperty Qname(PackageNamespace(""),"y_")
         findproperty Qname(PackageNamespace(""),"z_")
         getlex Qname(PackageNamespace(""),"z_")
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.company.assembleegameclient.objects.particles:HealParticle"),"moveVec_")
         getproperty Qname(PackageNamespace(""),"z")
         getlocal_2
         multiply
         pushdouble 0.008
         multiply
         add
         initproperty Qname(PackageNamespace(""),"z_")
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1104"),"currentLife")
         getlocal_2
         add
         initproperty Qname(PrivateNamespace(null,"1104"),"currentLife")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1104"),"percentDone")
         pushbyte 1
         lessthan
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

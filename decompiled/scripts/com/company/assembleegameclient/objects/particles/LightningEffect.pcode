package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.assembleegameclient.util.RandomUtil;
   import flash.geom.Point;
   import kabam.rotmg.messaging.impl.data.WorldPosData;
   
   public class LightningEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var start_:Point;
      
      public var end_:Point;
      
      public var color_:int;
      
      public var particleSize_:int;
      
      public var lifetimeMultiplier_:Number;
      
      public function LightningEffect(param1:GameObject, param2:WorldPosData, param3:int, param4:int, param5:Number = 1.0)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace("kabam.rotmg.messaging.impl.data"),"WorldPosData")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Number")
         optional 1.0
         returns null
         
         body
         maxstack 4
         localcount 6
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"x_")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"y_")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 2
         initproperty Qname(PackageNamespace(""),"start_")
         getlocal_0
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"x_")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"y_")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 2
         initproperty Qname(PackageNamespace(""),"end_")
         getlocal_0
         getlocal_3
         initproperty Qname(PackageNamespace(""),"color_")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"particleSize_")
         getlocal_0
         getlocal 5
         initproperty Qname(PackageNamespace(""),"lifetimeMultiplier_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function runNormalRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runNormalRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 7
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.geom"),"Point")
         setlocal 6
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         pushnan
         setlocal 8
         findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getproperty Qname(PackageNamespace(""),"x")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getproperty Qname(PackageNamespace(""),"y")
         initproperty Qname(PackageNamespace(""),"y_")
         getlex Qname(PackageNamespace("flash.geom"),"Point")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"end_")
         callproperty Qname(PackageNamespace(""),"distance") 2
         convert_d
         setlocal_3
         getlocal_3
         pushbyte 3
         multiply
         convert_i
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs00df
         ofs004b:label
         getlex Qname(PackageNamespace("flash.geom"),"Point")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"end_")
         getlocal 5
         getlocal 4
         divide
         callproperty Qname(PackageNamespace(""),"interpolate") 3
         coerce Qname(PackageNamespace("flash.geom"),"Point")
         setlocal 6
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"particleSize_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color_")
         pushshort 1000
         getlocal_0
         getproperty Qname(PackageNamespace(""),"lifetimeMultiplier_")
         multiply
         getlocal 5
         getlocal 4
         divide
         pushshort 900
         multiply
         getlocal_0
         getproperty Qname(PackageNamespace(""),"lifetimeMultiplier_")
         multiply
         subtract
         pushdouble 0.5
         pushbyte 0
         dup
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle") 6
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         getlocal 4
         getlocal 5
         subtract
         callproperty Qname(PackageNamespace(""),"min") 2
         convert_d
         setlocal 8
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 7
         getlocal 6
         getproperty Qname(PackageNamespace(""),"x")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         getlocal_3
         pushshort 200
         divide
         getlocal 8
         multiply
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         add
         getlocal 6
         getproperty Qname(PackageNamespace(""),"y")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         getlocal_3
         pushshort 200
         divide
         getlocal 8
         multiply
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         add
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 5
         ofs00df:getlocal 5
         getlocal 4
         iflt ofs004b
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function runEasyRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runEasyRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 7
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.geom"),"Point")
         setlocal 6
         pushnull
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         pushnan
         setlocal 8
         findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getproperty Qname(PackageNamespace(""),"x")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getproperty Qname(PackageNamespace(""),"y")
         initproperty Qname(PackageNamespace(""),"y_")
         getlex Qname(PackageNamespace("flash.geom"),"Point")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"end_")
         callproperty Qname(PackageNamespace(""),"distance") 2
         convert_d
         setlocal_3
         getlocal_3
         pushbyte 2
         multiply
         convert_i
         setlocal 4
         getlocal_0
         pushbyte 80
         initproperty Qname(PackageNamespace(""),"particleSize_")
         pushbyte 0
         setlocal 5
         jump ofs00e5
         ofs0051:label
         getlex Qname(PackageNamespace("flash.geom"),"Point")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"end_")
         getlocal 5
         getlocal 4
         divide
         callproperty Qname(PackageNamespace(""),"interpolate") 3
         coerce Qname(PackageNamespace("flash.geom"),"Point")
         setlocal 6
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"particleSize_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"color_")
         pushshort 750
         getlocal_0
         getproperty Qname(PackageNamespace(""),"lifetimeMultiplier_")
         multiply
         getlocal 5
         getlocal 4
         divide
         pushshort 675
         multiply
         getlocal_0
         getproperty Qname(PackageNamespace(""),"lifetimeMultiplier_")
         multiply
         subtract
         pushdouble 0.5
         pushbyte 0
         dup
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"SparkParticle") 6
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.particles"),"Particle")
         setlocal 7
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         getlocal 4
         getlocal 5
         subtract
         callproperty Qname(PackageNamespace(""),"min") 2
         convert_d
         setlocal 8
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 7
         getlocal 6
         getproperty Qname(PackageNamespace(""),"x")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         getlocal_3
         pushshort 200
         divide
         getlocal 8
         multiply
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         add
         getlocal 6
         getproperty Qname(PackageNamespace(""),"y")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.util"),"RandomUtil")
         getlocal_3
         pushshort 200
         divide
         getlocal 8
         multiply
         callproperty Qname(PackageNamespace(""),"plusMinus") 1
         add
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 5
         ofs00e5:getlocal 5
         getlocal 4
         iflt ofs0051
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

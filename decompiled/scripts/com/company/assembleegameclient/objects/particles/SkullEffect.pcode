package com.company.assembleegameclient.objects.particles
{
   import com.company.assembleegameclient.objects.thrown.BitmapParticle;
   import flash.display.BitmapData;
   import flash.geom.Point;
   import kabam.lib.math.easing.Quart;
   
   public class SkullEffect extends BitmapParticle
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var target_:Point;
      
      private var images:Vector.<BitmapData>;
      
      private var percentDone:Number;
      
      private var lifeTimeMS:int = 1000;
      
      private var currentTime:int;
      
      public function SkullEffect(param1:Point, param2:Vector.<BitmapData>)
      {
         method
         name null
         param Qname(PackageNamespace("flash.geom"),"Point")
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("flash.display"),"BitmapData")>)
         returns null
         
         body
         maxstack 3
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"946"),PrivateNamespace(null,"1874"),PackageNamespace(""),PackageNamespace("com.company.assembleegameclient.objects.particles"),PackageInternalNs("com.company.assembleegameclient.objects.particles"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.objects.particles:SkullEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:SkullEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.thrown:BitmapParticle"),StaticProtectedNs("com.company.assembleegameclient.objects:BasicObject")])
         pushbyte 0
         constructsuper 2
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"target_")
         getlocal_0
         getlocal_2
         initproperty Qname(PrivateNamespace(null,"946"),"images")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"946"),"currentTime")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"946"),"percentDone")
         findproperty Qname(PackageNamespace(""),"z_")
         pushdouble 0.3
         initproperty Qname(PackageNamespace(""),"z_")
         findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"target_")
         getproperty Qname(PackageNamespace(""),"x")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"target_")
         getproperty Qname(PackageNamespace(""),"y")
         initproperty Qname(PackageNamespace(""),"y_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"currentTime")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"lifeTimeMS")
         divide
         initproperty Qname(PrivateNamespace(null,"946"),"percentDone")
         getlex Qname(PackageNamespace(""),"Math")
         getlex Qname(PackageNamespace(""),"Math")
         pushbyte 0
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"images")
         getproperty Qname(PackageNamespace(""),"length")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"percentDone")
         multiply
         callproperty Qname(PackageNamespace(""),"floor") 1
         callproperty Qname(PackageNamespace(""),"max") 2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"images")
         getproperty Qname(PackageNamespace(""),"length")
         decrement
         callproperty Qname(PackageNamespace(""),"min") 2
         convert_i
         setlocal_3
         findproperty Qname(PackageNamespace(""),"_bitmapData")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"images")
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"946"),PrivateNamespace(null,"1874"),PackageNamespace(""),PackageNamespace("com.company.assembleegameclient.objects.particles"),PackageInternalNs("com.company.assembleegameclient.objects.particles"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.objects.particles:SkullEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.particles:SkullEffect"),StaticProtectedNs("com.company.assembleegameclient.objects.thrown:BitmapParticle"),StaticProtectedNs("com.company.assembleegameclient.objects:BasicObject")])
         initproperty Qname(PackageNamespace(""),"_bitmapData")
         findproperty Qname(PackageNamespace(""),"z_")
         pushdouble 1.618
         getlex Qname(PackageNamespace("kabam.lib.math.easing"),"Quart")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"percentDone")
         callproperty Qname(PackageNamespace(""),"easeOut") 1
         multiply
         initproperty Qname(PackageNamespace(""),"z_")
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"currentTime")
         getlocal_2
         add
         initproperty Qname(PrivateNamespace(null,"946"),"currentTime")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"946"),"percentDone")
         pushbyte 1
         lessthan
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

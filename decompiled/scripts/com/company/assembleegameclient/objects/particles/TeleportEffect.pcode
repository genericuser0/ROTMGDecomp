package com.company.assembleegameclient.objects.particles
{
   public class TeleportEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function TeleportEffect()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function runNormalRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runNormalRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 7
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 5
         pushnan
         setlocal 6
         pushbyte 0
         setlocal 7
         pushnull
         coerce Qname(PrivateNamespace(null,"1047"),"TeleportParticle")
         setlocal 8
         pushbyte 20
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs009a
         ofs001d:label
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         convert_d
         setlocal 5
         pushdouble 0.7
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         convert_d
         setlocal 6
         pushshort 500
         pushshort 1000
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         add
         convert_i
         setlocal 7
         findpropstrict Qname(PrivateNamespace(null,"1047"),"TeleportParticle")
         pushshort 255
         pushbyte 50
         pushdouble 0.1
         getlocal 7
         constructprop Qname(PrivateNamespace(null,"1047"),"TeleportParticle") 4
         coerce Qname(PrivateNamespace(null,"1047"),"TeleportParticle")
         setlocal 8
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 8
         getlex Qname(PackageNamespace(""),"x_")
         getlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"cos") 1
         multiply
         add
         getlex Qname(PackageNamespace(""),"y_")
         getlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"sin") 1
         multiply
         add
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 4
         ofs009a:getlocal 4
         getlocal_3
         iflt ofs001d
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function runEasyRendering(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"runEasyRendering")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 7
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 5
         pushnan
         setlocal 6
         pushbyte 0
         setlocal 7
         pushnull
         coerce Qname(PrivateNamespace(null,"1047"),"TeleportParticle")
         setlocal 8
         pushbyte 10
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs0099
         ofs001d:label
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         convert_d
         setlocal 5
         pushdouble 0.7
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         convert_d
         setlocal 6
         pushbyte 5
         pushshort 500
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         multiply
         add
         convert_i
         setlocal 7
         findpropstrict Qname(PrivateNamespace(null,"1047"),"TeleportParticle")
         pushshort 255
         pushbyte 50
         pushdouble 0.1
         getlocal 7
         constructprop Qname(PrivateNamespace(null,"1047"),"TeleportParticle") 4
         coerce Qname(PrivateNamespace(null,"1047"),"TeleportParticle")
         setlocal 8
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 8
         getlex Qname(PackageNamespace(""),"x_")
         getlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"cos") 1
         multiply
         add
         getlex Qname(PackageNamespace(""),"y_")
         getlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal 5
         callproperty Qname(PackageNamespace(""),"sin") 1
         multiply
         add
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         inclocal_i 4
         ofs0099:getlocal 4
         getlocal_3
         iflt ofs001d
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

import com.company.assembleegameclient.objects.particles.Particle;
import flash.geom.Vector3D;

class TeleportParticle extends Particle
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public var timeLeft_:int;
   
   protected var moveVec_:Vector3D;
   
   function TeleportParticle(param1:uint, param2:int, param3:Number, param4:int)
   {
      method
      name null
      param Qname(PackageNamespace(""),"uint")
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"Number")
      param Qname(PackageNamespace(""),"int")
      returns null
      
      body
      maxstack 4
      localcount 5
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
      constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 0
      initproperty Qname(ProtectedNamespace("TeleportEffect.as$2086:TeleportParticle"),"moveVec_")
      getlocal_0
      getlocal_1
      pushbyte 0
      getlocal_2
      constructsuper 3
      getlocal_0
      getproperty Qname(ProtectedNamespace("TeleportEffect.as$2086:TeleportParticle"),"moveVec_")
      getlocal_3
      setproperty Qname(PackageNamespace(""),"z")
      getlocal_0
      getlocal 4
      initproperty Qname(PackageNamespace(""),"timeLeft_")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   override public function update(param1:int, param2:int) : Boolean
   {
      trait method Qname(PackageNamespace(""),"update")
      flag OVERRIDE
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"int")
      param Qname(PackageNamespace(""),"int")
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 4
      localcount 3
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_0
      getproperty Qname(PackageNamespace(""),"timeLeft_")
      getlocal_2
      subtract
      initproperty Qname(PackageNamespace(""),"timeLeft_")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"timeLeft_")
      pushbyte 0
      ifnle ofs0018
      pushfalse
      returnvalue
      ofs0018:findproperty Qname(PackageNamespace(""),"z_")
      getlex Qname(PackageNamespace(""),"z_")
      getlocal_0
      getproperty Qname(ProtectedNamespace("TeleportEffect.as$2086:TeleportParticle"),"moveVec_")
      getproperty Qname(PackageNamespace(""),"z")
      getlocal_2
      multiply
      pushdouble 0.008
      multiply
      add
      initproperty Qname(PackageNamespace(""),"z_")
      pushtrue
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

package com.company.assembleegameclient.objects.particles
{
   public class GasParticle extends SparkParticle
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var noise:Number;
      
      public function GasParticle(param1:int, param2:int, param3:int, param4:Number, param5:Number, param6:Number, param7:Number)
      {
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns null
         
         body
         maxstack 7
         localcount 8
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal 4
         initproperty Qname(PrivateNamespace(null,"1106"),"noise")
         getlocal_0
         getlocal_1
         getlocal_2
         getlocal_3
         getlocal 5
         getlocal 6
         getlocal 7
         constructsuper 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 4
         findproperty Qname(PackageNamespace(""),"timeLeft_")
         getlex Qname(PackageNamespace(""),"timeLeft_")
         getlocal_2
         subtract
         initproperty Qname(PackageNamespace(""),"timeLeft_")
         getlex Qname(PackageNamespace(""),"timeLeft_")
         pushbyte 0
         ifnle ofs001b
         pushfalse
         returnvalue
         ofs001b:getlex Qname(PackageNamespace(""),"square_")
         getproperty Qname(PackageNamespace(""),"obj_")
         convert_b
         dup
         iffalse ofs0035
         pop
         getlex Qname(PackageNamespace(""),"square_")
         getproperty Qname(PackageNamespace(""),"obj_")
         getproperty Qname(PackageNamespace(""),"props_")
         getproperty Qname(PackageNamespace(""),"static_")
         convert_b
         ofs0035:iffalse ofs003b
         pushfalse
         returnvalue
         ofs003b:getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1106"),"noise")
         multiply
         convert_d
         setlocal_3
         getlex Qname(PackageNamespace(""),"Math")
         callproperty Qname(PackageNamespace(""),"random") 0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1106"),"noise")
         multiply
         convert_d
         setlocal 4
         findproperty Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"dx_")
         getlocal_3
         multiply
         getlocal_2
         multiply
         pushshort 1000
         divide
         add
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlex Qname(PackageNamespace(""),"y_")
         getlex Qname(PackageNamespace(""),"dy_")
         getlocal 4
         multiply
         getlocal_2
         multiply
         pushshort 1000
         divide
         add
         initproperty Qname(PackageNamespace(""),"y_")
         findpropstrict Qname(PackageNamespace(""),"setSize")
         getlex Qname(PackageNamespace(""),"timeLeft_")
         getlex Qname(PackageNamespace(""),"lifetime_")
         divide
         getlex Qname(PackageNamespace(""),"initialSize_")
         multiply
         callpropvoid Qname(PackageNamespace(""),"setSize") 1
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

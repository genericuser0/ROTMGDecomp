package com.company.assembleegameclient.objects.thrown
{
   import com.company.assembleegameclient.objects.particles.ParticleEffect;
   import flash.geom.Point;
   
   public class ThrowProjectileEffect extends ParticleEffect
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var start_:Point;
      
      public var end_:Point;
      
      public var id_:uint;
      
      public var duration_:int;
      
      public function ThrowProjectileEffect(param1:int, param2:Point, param3:Point, param4:int = 1500)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace("flash.geom"),"Point")
         param Qname(PackageNamespace("flash.geom"),"Point")
         param Qname(PackageNamespace(""),"int")
         optional 1500
         returns null
         
         body
         maxstack 2
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"start_")
         getlocal_0
         getlocal_3
         initproperty Qname(PackageNamespace(""),"end_")
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"id_")
         getlocal_0
         getlocal 4
         initproperty Qname(PackageNamespace(""),"duration_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update(param1:int, param2:int) : Boolean
      {
         trait method Qname(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"x_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getproperty Qname(PackageNamespace(""),"x")
         initproperty Qname(PackageNamespace(""),"x_")
         findproperty Qname(PackageNamespace(""),"y_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getproperty Qname(PackageNamespace(""),"y")
         initproperty Qname(PackageNamespace(""),"y_")
         pushshort 10000
         setlocal_3
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects.thrown"),"ThrownProjectile")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"id_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"duration_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"start_")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"end_")
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.objects.thrown"),"ThrownProjectile") 4
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects.thrown"),"ThrownProjectile")
         setlocal 4
         getlex Qname(PackageNamespace(""),"map_")
         getlocal 4
         getlex Qname(PackageNamespace(""),"x_")
         getlex Qname(PackageNamespace(""),"y_")
         callpropvoid Qname(PackageNamespace(""),"addObj") 3
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

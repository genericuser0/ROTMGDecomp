package com.company.assembleegameclient.ui.panels.itemgrids
{
   import com.company.assembleegameclient.constants.InventoryOwnerTypes;
   import com.company.assembleegameclient.objects.Container;
   import com.company.assembleegameclient.objects.GameObject;
   import com.company.assembleegameclient.objects.Player;
   import com.company.assembleegameclient.ui.panels.Panel;
   import com.company.assembleegameclient.ui.panels.itemgrids.itemtiles.EquipmentTile;
   import com.company.assembleegameclient.ui.panels.itemgrids.itemtiles.ItemTile;
   import com.company.assembleegameclient.ui.tooltip.EquipmentToolTip;
   import com.company.assembleegameclient.ui.tooltip.TextToolTip;
   import com.company.assembleegameclient.ui.tooltip.ToolTip;
   import flash.events.MouseEvent;
   import kabam.rotmg.constants.ItemConstants;
   import kabam.rotmg.text.model.TextKey;
   import org.osflash.signals.Signal;
   
   public class ItemGrid extends Panel
   {
      
      private static const NO_CUT:Array;
      
      private static const CutsByNum:Object;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 21
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"244"),"NO_CUT")
         pushbyte 0
         dup
         dup
         pushbyte 0
         newarray 4
         initproperty Qname(PrivateNamespace(null,"244"),"NO_CUT")
         findproperty Qname(PrivateNamespace(null,"244"),"CutsByNum")
         pushbyte 1
         convert_s
         pushbyte 1
         pushbyte 0
         dup
         pushbyte 1
         newarray 4
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         pushbyte 0
         pushbyte 1
         dup
         pushbyte 0
         newarray 4
         newarray 4
         pushbyte 2
         convert_s
         pushbyte 1
         pushbyte 0
         dup
         dup
         newarray 4
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         pushbyte 0
         pushbyte 1
         pushbyte 0
         dup
         newarray 4
         pushbyte 0
         dup
         dup
         pushbyte 1
         newarray 4
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         pushbyte 0
         dup
         pushbyte 1
         pushbyte 0
         newarray 4
         newarray 8
         pushbyte 3
         convert_s
         pushbyte 1
         pushbyte 0
         dup
         pushbyte 1
         newarray 4
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         pushbyte 0
         pushbyte 1
         dup
         pushbyte 0
         newarray 4
         pushbyte 1
         pushbyte 0
         dup
         dup
         newarray 4
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         pushbyte 0
         pushbyte 1
         pushbyte 0
         dup
         newarray 4
         pushbyte 0
         dup
         dup
         pushbyte 1
         newarray 4
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         getlex Qname(PrivateNamespace(null,"244"),"NO_CUT")
         pushbyte 0
         dup
         pushbyte 1
         pushbyte 0
         newarray 4
         newarray 12
         newobject 3
         initproperty Qname(PrivateNamespace(null,"244"),"CutsByNum")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private const padding:uint = 4;
      
      private const rowLength:uint = 4;
      
      public var owner:GameObject;
      
      private var tooltip:ToolTip;
      
      private var tooltipFocusTile:ItemTile;
      
      public var curPlayer:Player;
      
      protected var indexOffset:int;
      
      public var interactive:Boolean;
      
      public const addToolTip:Signal;
      
      public function ItemGrid(param1:GameObject, param2:Player, param3:int)
      {
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"GameObject")
         param Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Player")
         param Qname(PackageNamespace(""),"int")
         returns null
         
         body
         maxstack 3
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         findpropstrict Qname(PackageNamespace("org.osflash.signals"),"Signal")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.tooltip"),"ToolTip")
         constructprop Qname(PackageNamespace("org.osflash.signals"),"Signal") 1
         initproperty Qname(PackageNamespace(""),"addToolTip")
         getlocal_0
         pushnull
         constructsuper 1
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"owner")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"curPlayer")
         getlocal_0
         getlocal_3
         initproperty Qname(ProtectedNamespace("com.company.assembleegameclient.ui.panels.itemgrids:ItemGrid"),"indexOffset")
         getlocal_1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Container")
         astypelate
         coerce Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Container")
         setlocal 4
         getlocal_1
         getlocal_2
         equals
         dup
         iftrue ofs0037
         pop
         getlocal 4
         convert_b
         ofs0037:iffalse ofs0040
         getlocal_0
         pushtrue
         initproperty Qname(PackageNamespace(""),"interactive")
         ofs0040:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hideTooltip() : void
      {
         trait method Qname(PackageNamespace(""),"hideTooltip")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         iffalse ofs001c
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         callpropvoid Qname(PackageNamespace(""),"detachFromTarget") 0
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"244"),"tooltipFocusTile")
         ofs001c:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function refreshTooltip() : void
      {
         trait method Qname(PackageNamespace(""),"refreshTooltip")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"stage")
         not
         dup
         iftrue ofs0011
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         not
         ofs0011:dup
         iftrue ofs001f
         pop
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         getproperty Qname(PackageNamespace(""),"stage")
         not
         ofs001f:iffalse ofs0024
         returnvoid
         ofs0024:getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltipFocusTile")
         iffalse ofs0042
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         callpropvoid Qname(PackageNamespace(""),"detachFromTarget") 0
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         getlocal_0
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltipFocusTile")
         callpropvoid Qname(PrivateNamespace(null,"244"),"addToolTipToTile") 1
         ofs0042:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onTileHover(param1:MouseEvent) : void
      {
         trait method Qname(PrivateNamespace(null,"244"),"onTileHover")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"MouseEvent")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"stage")
         iftrue ofs000a
         returnvoid
         ofs000a:getlocal_1
         getproperty Qname(PackageNamespace(""),"currentTarget")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"ItemTile")
         astypelate
         coerce Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"ItemTile")
         setlocal_2
         getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"244"),"addToolTipToTile") 1
         getlocal_0
         getlocal_2
         initproperty Qname(PrivateNamespace(null,"244"),"tooltipFocusTile")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function addToolTipToTile(param1:ItemTile) : void
      {
         trait method Qname(PrivateNamespace(null,"244"),"addToolTipToTile")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"ItemTile")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 10
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_2
         getlocal_1
         getproperty Qname(PackageNamespace(""),"itemSprite")
         getproperty Qname(PackageNamespace(""),"itemId")
         pushbyte 0
         ifngt ofs0047
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.ui.tooltip"),"EquipmentToolTip")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"itemSprite")
         getproperty Qname(PackageNamespace(""),"itemId")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"curPlayer")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"owner")
         iffalse ofs0035
         getlocal_0
         getproperty Qname(PackageNamespace(""),"owner")
         getproperty Qname(PackageNamespace(""),"objectType_")
         convert_i
         jump ofs0037
         ofs0035:pushbyte -1
         ofs0037:getlocal_0
         callproperty Qname(PrivateNamespace(null,"244"),"getCharacterType") 0
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.ui.tooltip"),"EquipmentToolTip") 4
         initproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         jump ofs0098
         ofs0047:getlocal_1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"EquipmentTile")
         istypelate
         iffalse ofs0066
         getlex Qname(PackageNamespace("kabam.rotmg.constants"),"ItemConstants")
         getlocal_1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"EquipmentTile")
         astypelate
         getproperty Qname(PackageNamespace(""),"itemType")
         callproperty Qname(PackageNamespace(""),"itemTypeToName") 1
         coerce_s
         setlocal_2
         jump ofs006f
         ofs0066:getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"ITEM")
         coerce_s
         setlocal_2
         ofs006f:getlocal_0
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.ui.tooltip"),"TextToolTip")
         pushint 3552822
         pushint 10197915
         pushnull
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getproperty Qname(PackageNamespace(""),"ITEM_EMPTY_SLOT")
         pushshort 200
         pushstring "itemType"
         getlex Qname(PackageNamespace("kabam.rotmg.text.model"),"TextKey")
         getlocal_2
         callproperty Qname(PackageNamespace(""),"wrapForTokenResolution") 1
         newobject 1
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.ui.tooltip"),"TextToolTip") 6
         initproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         ofs0098:getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"attachToTarget") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"addToolTip")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"tooltip")
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function getCharacterType() : String
      {
         trait method Qname(PrivateNamespace(null,"244"),"getCharacterType")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"owner")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"curPlayer")
         ifne ofs0016
         getlex Qname(PackageNamespace("com.company.assembleegameclient.constants"),"InventoryOwnerTypes")
         getproperty Qname(PackageNamespace(""),"CURRENT_PLAYER")
         returnvalue
         ofs0016:getlocal_0
         getproperty Qname(PackageNamespace(""),"owner")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Player")
         istypelate
         iffalse ofs002a
         getlex Qname(PackageNamespace("com.company.assembleegameclient.constants"),"InventoryOwnerTypes")
         getproperty Qname(PackageNamespace(""),"OTHER_PLAYER")
         returnvalue
         ofs002a:getlex Qname(PackageNamespace("com.company.assembleegameclient.constants"),"InventoryOwnerTypes")
         getproperty Qname(PackageNamespace(""),"NPC")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function addToGrid(param1:ItemTile, param2:uint, param3:uint) : void
      {
         trait method Qname(ProtectedNamespace("com.company.assembleegameclient.ui.panels.itemgrids:ItemGrid"),"addToGrid")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"ItemTile")
         param Qname(PackageNamespace(""),"uint")
         param Qname(PackageNamespace(""),"uint")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlex Qname(PrivateNamespace(null,"244"),"CutsByNum")
         getlocal_2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),ProtectedNamespace("com.company.assembleegameclient.ui.panels.itemgrids:ItemGrid"),PrivateNamespace(null,"1390"),PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids"),PackageInternalNs("com.company.assembleegameclient.ui.panels.itemgrids"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("com.company.assembleegameclient.ui.panels.itemgrids:ItemGrid"),StaticProtectedNs("com.company.assembleegameclient.ui.panels:Panel"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         getlocal_3
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),ProtectedNamespace("com.company.assembleegameclient.ui.panels.itemgrids:ItemGrid"),PrivateNamespace(null,"1390"),PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids"),PackageInternalNs("com.company.assembleegameclient.ui.panels.itemgrids"),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("com.company.assembleegameclient.ui.panels.itemgrids:ItemGrid"),StaticProtectedNs("com.company.assembleegameclient.ui.panels:Panel"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         callpropvoid Qname(PackageNamespace(""),"drawBackground") 1
         getlocal_1
         getlex Qname(PackageNamespace("flash.events"),"MouseEvent")
         getproperty Qname(PackageNamespace(""),"ROLL_OVER")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"onTileHover")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         getlocal_1
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"rowLength")
         modulo
         callproperty Qname(PackageNamespace(""),"int") 1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"ItemTile")
         getproperty Qname(PackageNamespace(""),"WIDTH")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"padding")
         add
         multiply
         setproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_3
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"rowLength")
         divide
         callproperty Qname(PackageNamespace(""),"int") 1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.ui.panels.itemgrids.itemtiles"),"ItemTile")
         getproperty Qname(PackageNamespace(""),"HEIGHT")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"244"),"padding")
         add
         multiply
         setproperty Qname(PackageNamespace(""),"y")
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setItems(param1:Vector.<int>, param2:int = 0) : void
      {
         trait method Qname(PackageNamespace(""),"setItems")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"int")>)
         param Qname(PackageNamespace(""),"int")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function enableInteraction(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"enableInteraction")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"mouseEnabled")
         getlocal_1
         initproperty Qname(PackageNamespace(""),"mouseEnabled")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function draw() : void
      {
         trait method Qname(PackageNamespace(""),"draw")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"owner")
         getproperty Qname(PackageNamespace(""),"equipment_")
         getlocal_0
         getproperty Qname(ProtectedNamespace("com.company.assembleegameclient.ui.panels.itemgrids:ItemGrid"),"indexOffset")
         callpropvoid Qname(PackageNamespace(""),"setItems") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

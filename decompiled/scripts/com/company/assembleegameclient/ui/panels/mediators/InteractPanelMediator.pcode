package com.company.assembleegameclient.ui.panels.mediators
{
   import com.company.assembleegameclient.objects.IInteractiveObject;
   import com.company.assembleegameclient.objects.Pet;
   import com.company.assembleegameclient.ui.panels.InteractPanel;
   import io.decagames.rotmg.pets.data.PetsModel;
   import kabam.rotmg.core.model.MapModel;
   import robotlegs.bender.bundles.mvcs.Mediator;
   
   public class InteractPanelMediator extends Mediator
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var view:InteractPanel;
      
      [Inject]
      public var mapModel:MapModel;
      
      [Inject]
      public var petsModel:PetsModel;
      
      private var currentInteractive:IInteractiveObject;
      
      public function InteractPanelMediator()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function initialize() : void
      {
         trait method Qname(PackageNamespace(""),"initialize")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"provideInteractive")
         setproperty Qname(PackageNamespace(""),"requestInteractive")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method Qname(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callsupervoid Qname(PackageNamespace(""),"destroy") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function provideInteractive() : IInteractiveObject
      {
         trait method Qname(PackageNamespace(""),"provideInteractive")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.company.assembleegameclient.objects"),"IInteractiveObject")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"255"),"isMapNameYardName") 0
         iftrue ofs0013
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mapModel")
         getproperty Qname(PackageNamespace(""),"currentInteractiveTarget")
         returnvalue
         ofs0013:getlocal_0
         callproperty Qname(PrivateNamespace(null,"255"),"doesNewPanelOverrideOld") 0
         iffalse ofs0027
         getlocal_0
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mapModel")
         getproperty Qname(PackageNamespace(""),"currentInteractiveTarget")
         initproperty Qname(PrivateNamespace(null,"255"),"currentInteractive")
         ofs0027:getlocal_0
         getproperty Qname(PrivateNamespace(null,"255"),"currentInteractive")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function doesNewPanelOverrideOld() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"255"),"doesNewPanelOverrideOld")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mapModel")
         getproperty Qname(PackageNamespace(""),"currentInteractiveTarget")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Pet")
         istypelate
         iffalse ofs001b
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"255"),"doShowPet") 0
         convert_b
         jump ofs001c
         ofs001b:pushtrue
         ofs001c:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function doShowPet() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"255"),"doShowPet")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"255"),"currentInteractive")
         not
         dup
         iffalse ofs0013
         pop
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"255"),"isMapNameYardName") 0
         convert_b
         ofs0013:iffalse ofs0019
         pushtrue
         returnvalue
         ofs0019:getlocal_0
         getproperty Qname(PrivateNamespace(null,"255"),"currentInteractive")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Pet")
         istypelate
         dup
         iffalse ofs002d
         pop
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"255"),"isMapNameYardName") 0
         convert_b
         ofs002d:dup
         iffalse ofs005c
         pop
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Pet")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mapModel")
         getproperty Qname(PackageNamespace(""),"currentInteractiveTarget")
         callproperty Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Pet") 1
         getproperty Qname(PackageNamespace(""),"vo")
         callproperty Qname(PackageNamespace(""),"getID") 0
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Pet")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"255"),"currentInteractive")
         callproperty Qname(PackageNamespace("com.company.assembleegameclient.objects"),"Pet") 1
         getproperty Qname(PackageNamespace(""),"vo")
         callproperty Qname(PackageNamespace(""),"getID") 0
         equals
         not
         ofs005c:iffalse ofs0062
         pushtrue
         returnvalue
         ofs0062:pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isMapNameYardName() : Boolean
      {
         trait method Qname(PrivateNamespace(null,"255"),"isMapNameYardName")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"view")
         getproperty Qname(PackageNamespace(""),"gs_")
         getproperty Qname(PackageNamespace(""),"map")
         getproperty Qname(PackageNamespace(""),"isPetYard")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

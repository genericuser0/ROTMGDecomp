package com.company.assembleegameclient.ui.options
{
   import com.company.assembleegameclient.parameters.Parameters;
   import com.company.util.MoreColorUtil;
   import flash.events.Event;
   import flash.geom.ColorTransform;
   
   public class KeyMapper extends BaseOption
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var keyCodeBox_:KeyCodeBox;
      
      private var disabled_:Boolean;
      
      public function KeyMapper(param1:String, param2:String, param3:String, param4:Boolean = false)
      {
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Boolean")
         optional false
         returns null
         
         body
         maxstack 4
         localcount 5
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         getlocal_2
         getlocal_3
         constructsuper 3
         getlocal_0
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.ui.options"),"KeyCodeBox")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.parameters"),"Parameters")
         getproperty Qname(PackageNamespace(""),"data_")
         getlex Qname(PackageNamespace(""),"paramName_")
         getproperty MultinameL([PrivateNamespace(null,"775"),PackageNamespace("com.company.assembleegameclient.ui.options"),PackageNamespace(""),PrivateNamespace(null,"1777"),PackageInternalNs("com.company.assembleegameclient.ui.options"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.ui.options:KeyMapper"),StaticProtectedNs("com.company.assembleegameclient.ui.options:KeyMapper"),StaticProtectedNs("com.company.assembleegameclient.ui.options:BaseOption"),StaticProtectedNs("com.company.assembleegameclient.ui.options:Option"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.ui.options"),"KeyCodeBox") 1
         initproperty Qname(PrivateNamespace(null,"775"),"keyCodeBox_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"keyCodeBox_")
         getlex Qname(PackageNamespace("flash.events"),"Event")
         getproperty Qname(PackageNamespace(""),"CHANGE")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"onChange")
         callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"keyCodeBox_")
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         getlocal_0
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"setDisabled") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setDisabled(param1:Boolean) : void
      {
         trait method Qname(PackageNamespace(""),"setDisabled")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"775"),"disabled_")
         getlex Qname(PackageNamespace(""),"transform")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"disabled_")
         iffalse ofs0020
         getlex Qname(PackageNamespace("com.company.util"),"MoreColorUtil")
         getproperty Qname(PackageNamespace(""),"darkCT")
         coerce Qname(PackageNamespace("flash.geom"),"ColorTransform")
         jump ofs002a
         ofs0020:getlex Qname(PackageNamespace("com.company.util"),"MoreColorUtil")
         getproperty Qname(PackageNamespace(""),"identity")
         coerce Qname(PackageNamespace("flash.geom"),"ColorTransform")
         ofs002a:setproperty Qname(PackageNamespace(""),"colorTransform")
         findproperty Qname(PackageNamespace(""),"mouseEnabled")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"disabled_")
         not
         initproperty Qname(PackageNamespace(""),"mouseEnabled")
         findproperty Qname(PackageNamespace(""),"mouseChildren")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"disabled_")
         not
         initproperty Qname(PackageNamespace(""),"mouseChildren")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function refresh() : void
      {
         trait method Qname(PackageNamespace(""),"refresh")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"keyCodeBox_")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.parameters"),"Parameters")
         getproperty Qname(PackageNamespace(""),"data_")
         getlex Qname(PackageNamespace(""),"paramName_")
         getproperty MultinameL([PrivateNamespace(null,"775"),PackageNamespace("com.company.assembleegameclient.ui.options"),PackageNamespace(""),PrivateNamespace(null,"1777"),PackageInternalNs("com.company.assembleegameclient.ui.options"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.ui.options:KeyMapper"),StaticProtectedNs("com.company.assembleegameclient.ui.options:KeyMapper"),StaticProtectedNs("com.company.assembleegameclient.ui.options:BaseOption"),StaticProtectedNs("com.company.assembleegameclient.ui.options:Option"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         callpropvoid Qname(PackageNamespace(""),"setKeyCode") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onChange(param1:Event) : void
      {
         trait method Qname(PrivateNamespace(null,"775"),"onChange")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.events"),"Event")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 11
         maxscopedepth 12
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("com.company.assembleegameclient.parameters"),"Parameters")
         getlex Qname(PackageNamespace(""),"paramName_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"775"),"keyCodeBox_")
         callproperty Qname(PackageNamespace(""),"value") 0
         callpropvoid Qname(PackageNamespace(""),"setKey") 2
         getlex Qname(PackageNamespace("com.company.assembleegameclient.parameters"),"Parameters")
         callpropvoid Qname(PackageNamespace(""),"save") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

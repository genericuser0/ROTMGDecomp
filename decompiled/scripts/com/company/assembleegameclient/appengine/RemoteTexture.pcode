package com.company.assembleegameclient.appengine
{
   import flash.display.BitmapData;
   import flash.net.URLLoaderDataFormat;
   import flash.utils.ByteArray;
   import ion.utils.png.PNGDecoder;
   import kabam.rotmg.appengine.api.RetryLoader;
   import kabam.rotmg.appengine.impl.AppEngineRetryLoader;
   import kabam.rotmg.core.StaticInjectorContext;
   import org.swiftsuspenders.Injector;
   import robotlegs.bender.framework.api.ILogger;
   
   public class RemoteTexture
   {
      
      private static const URL_PATTERN:String = "https://{DOMAIN}/picture/get";
      
      private static const ERROR_PATTERN:String = "Remote Texture Error: {ERROR} (id:{ID}, instance:{INSTANCE})";
      
      private static const START_TIME:int;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PrivateNamespace(null,"1065"),"URL_PATTERN")
         pushstring "https://{DOMAIN}/picture/get"
         initproperty Qname(PrivateNamespace(null,"1065"),"URL_PATTERN")
         findproperty Qname(PrivateNamespace(null,"1065"),"ERROR_PATTERN")
         pushstring "Remote Texture Error: {ERROR} (id:{ID}, instance:{INSTANCE})"
         initproperty Qname(PrivateNamespace(null,"1065"),"ERROR_PATTERN")
         findproperty Qname(PrivateNamespace(null,"1065"),"START_TIME")
         findpropstrict Qname(PackageNamespace(""),"int")
         findpropstrict Qname(PackageNamespace(""),"Date")
         constructprop Qname(PackageNamespace(""),"Date") 0
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"getTime") 0
         callproperty Qname(PackageNamespace(""),"int") 1
         initproperty Qname(PrivateNamespace(null,"1065"),"START_TIME")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var id_:String;
      
      public var instance_:String;
      
      public var callback_:Function;
      
      private var logger:ILogger;
      
      public function RemoteTexture(param1:String, param2:String, param3:Function)
      {
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Function")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"id_")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"instance_")
         getlocal_0
         getlocal_3
         initproperty Qname(PackageNamespace(""),"callback_")
         getlex Qname(PackageNamespace("kabam.rotmg.core"),"StaticInjectorContext")
         callproperty Qname(PackageNamespace(""),"getInjector") 0
         coerce Qname(PackageNamespace("org.swiftsuspenders"),"Injector")
         setlocal 4
         getlocal_0
         getlocal 4
         getlex Qname(PackageNamespace("robotlegs.bender.framework.api"),"ILogger")
         callproperty Qname(PackageNamespace(""),"getInstance") 1
         initproperty Qname(PrivateNamespace(null,"1065"),"logger")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function run() : void
      {
         trait method Qname(PackageNamespace(""),"run")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"instance_")
         pushstring "testing"
         ifne ofs0014
         pushstring "test.realmofthemadgod.com"
         jump ofs0018
         ofs0014:pushstring "realmofthemadgod.com"
         ofs0018:coerce_s
         setlocal_1
         getlex Qname(PrivateNamespace(null,"1065"),"URL_PATTERN")
         pushstring "{DOMAIN}"
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         coerce_s
         setlocal_2
         newobject 0
         coerce Qname(PackageNamespace(""),"Object")
         setlocal_3
         getlocal_3
         getlocal_0
         getproperty Qname(PackageNamespace(""),"id_")
         setproperty Multiname("id",[PrivateNamespace(null,"1065"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"2008"),PackageNamespace("com.company.assembleegameclient.appengine"),PackageInternalNs("com.company.assembleegameclient.appengine"),ProtectedNamespace("com.company.assembleegameclient.appengine:RemoteTexture"),StaticProtectedNs("com.company.assembleegameclient.appengine:RemoteTexture")])
         getlocal_3
         getlex Qname(PrivateNamespace(null,"1065"),"START_TIME")
         setproperty Multiname("time",[PrivateNamespace(null,"1065"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"2008"),PackageNamespace("com.company.assembleegameclient.appengine"),PackageInternalNs("com.company.assembleegameclient.appengine"),ProtectedNamespace("com.company.assembleegameclient.appengine:RemoteTexture"),StaticProtectedNs("com.company.assembleegameclient.appengine:RemoteTexture")])
         findpropstrict Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"AppEngineRetryLoader")
         constructprop Qname(PackageNamespace("kabam.rotmg.appengine.impl"),"AppEngineRetryLoader") 0
         coerce Qname(PackageNamespace("kabam.rotmg.appengine.api"),"RetryLoader")
         dup
         setlocal 4
         getlex Qname(PackageNamespace("flash.net"),"URLLoaderDataFormat")
         getproperty Qname(PackageNamespace(""),"BINARY")
         callpropvoid Qname(Namespace("kabam.rotmg.appengine.api:RetryLoader"),"setDataFormat") 1
         getlocal 4
         getproperty Qname(Namespace("kabam.rotmg.appengine.api:RetryLoader"),"complete")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1065"),"onComplete")
         callpropvoid Qname(PackageNamespace(""),"addOnce") 1
         getlocal 4
         getlocal_2
         getlocal_3
         callpropvoid Qname(Namespace("kabam.rotmg.appengine.api:RetryLoader"),"sendRequest") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onComplete(param1:Boolean, param2:*) : void
      {
         trait method Qname(PrivateNamespace(null,"1065"),"onComplete")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_1
         iffalse ofs0011
         getlocal_0
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"makeTexture") 1
         jump ofs0017
         ofs0011:getlocal_0
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"reportError") 1
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function makeTexture(param1:ByteArray) : void
      {
         trait method Qname(PackageNamespace(""),"makeTexture")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("ion.utils.png"),"PNGDecoder")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"decodeImage") 1
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_2
         getlocal_0
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"callback_") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function reportError(param1:String) : void
      {
         trait method Qname(PackageNamespace(""),"reportError")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1065"),"ERROR_PATTERN")
         pushstring "{ERROR}"
         getlocal_1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         pushstring "{ID}"
         getlocal_0
         getproperty Qname(PackageNamespace(""),"id_")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         pushstring "{INSTANCE}"
         getlocal_0
         getproperty Qname(PackageNamespace(""),"instance_")
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"replace") 2
         coerce_s
         setlocal_1
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1065"),"logger")
         pushstring "RemoteTexture.reportError: {0}"
         getlocal_1
         newarray 1
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILogger"),"warn") 2
         findpropstrict Qname(PackageNamespace(""),"BitmapDataSpy")
         pushbyte 1
         dup
         constructprop Qname(PackageNamespace(""),"BitmapDataSpy") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_2
         getlocal_0
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"callback_") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

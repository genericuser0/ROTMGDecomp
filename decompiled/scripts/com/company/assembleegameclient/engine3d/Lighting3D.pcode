package com.company.assembleegameclient.engine3d
{
   import flash.geom.Vector3D;
   
   public class Lighting3D
   {
      
      public static const LIGHT_VECTOR:Vector3D;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"LIGHT_VECTOR")
         findpropstrict Qname(PrivateNamespace(null,"1289"),"createLightVector")
         callproperty Qname(PrivateNamespace(null,"1289"),"createLightVector") 0
         initproperty Qname(PackageNamespace(""),"LIGHT_VECTOR")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Lighting3D()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function shadeValue(param1:Vector3D, param2:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"shadeValue")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"Math")
         pushbyte 0
         getlocal_1
         getlex Qname(PackageNamespace("com.company.assembleegameclient.engine3d"),"Lighting3D")
         getproperty Qname(PackageNamespace(""),"LIGHT_VECTOR")
         callproperty Qname(PackageNamespace(""),"dotProduct") 1
         callproperty Qname(PackageNamespace(""),"max") 2
         convert_d
         setlocal_3
         getlocal_2
         pushbyte 1
         getlocal_2
         subtract
         getlocal_3
         multiply
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function createLightVector() : Vector3D
      {
         trait method Qname(PrivateNamespace(null,"1289"),"createLightVector")
         flag FINAL
         dispid 4
         method
         name null
         returns Qname(PackageNamespace("flash.geom"),"Vector3D")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
         pushbyte 1
         pushbyte 3
         pushbyte 2
         constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 3
         coerce Qname(PackageNamespace("flash.geom"),"Vector3D")
         setlocal_1
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"normalize") 0
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

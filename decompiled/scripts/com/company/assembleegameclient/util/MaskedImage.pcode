package com.company.assembleegameclient.util
{
   import com.company.util.BitmapUtil;
   import flash.display.BitmapData;
   
   public class MaskedImage
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var image_:BitmapData;
      
      public var mask_:BitmapData;
      
      public function MaskedImage(param1:BitmapData, param2:BitmapData)
      {
         method
         name null
         param Qname(PackageNamespace("flash.display"),"BitmapData")
         param Qname(PackageNamespace("flash.display"),"BitmapData")
         returns null
         
         body
         maxstack 2
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"image_")
         getlocal_0
         getlocal_2
         initproperty Qname(PackageNamespace(""),"mask_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function width() : int
      {
         trait method Qname(PackageNamespace(""),"width")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"image_")
         getproperty Qname(PackageNamespace(""),"width")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function height() : int
      {
         trait method Qname(PackageNamespace(""),"height")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"image_")
         getproperty Qname(PackageNamespace(""),"height")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function mirror(param1:int = 0) : MaskedImage
      {
         trait method Qname(PackageNamespace(""),"mirror")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"int")
         optional 0
         returns Qname(PackageNamespace("com.company.assembleegameclient.util"),"MaskedImage")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("com.company.util"),"BitmapUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"image_")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"mirror") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_2
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mask_")
         pushnull
         equals
         iffalse ofs0022
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         jump ofs0030
         ofs0022:getlex Qname(PackageNamespace("com.company.util"),"BitmapUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"mask_")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"mirror") 2
         coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         ofs0030:coerce Qname(PackageNamespace("flash.display"),"BitmapData")
         setlocal_3
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.util"),"MaskedImage")
         getlocal_2
         getlocal_3
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.util"),"MaskedImage") 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function amountTransparent() : Number
      {
         trait method Qname(PackageNamespace(""),"amountTransparent")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("com.company.util"),"BitmapUtil")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"image_")
         callproperty Qname(PackageNamespace(""),"amountTransparent") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.company.assembleegameclient.constants
{
   public class ScreenTypes
   {
      
      public static const PLAY:String = "Screens.play";
      
      public static const SERVERS:String = "Screens.servers";
      
      public static const LEGENDS:String = "Screens.legends";
      
      public static const CREDITS:String = "Screens.credits";
      
      public static const ACCOUNT:String = "Screens.account";
      
      public static const EDITOR:String = "Screens.editor";
      
      public static const QUIT:String = "Screens.quit";
      
      public static const BACK:String = "Screens.back";
      
      public static const LANGUAGES:String = "Screens.languages";
      
      public static const SUPPORT:String = "Screens.support";
      
      public static const TRANSFER_ACCOUNT:String = "Screens.migrate";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"PLAY")
         pushstring "Screens.play"
         initproperty Qname(PackageNamespace(""),"PLAY")
         findproperty Qname(PackageNamespace(""),"SERVERS")
         pushstring "Screens.servers"
         initproperty Qname(PackageNamespace(""),"SERVERS")
         findproperty Qname(PackageNamespace(""),"LEGENDS")
         pushstring "Screens.legends"
         initproperty Qname(PackageNamespace(""),"LEGENDS")
         findproperty Qname(PackageNamespace(""),"CREDITS")
         pushstring "Screens.credits"
         initproperty Qname(PackageNamespace(""),"CREDITS")
         findproperty Qname(PackageNamespace(""),"ACCOUNT")
         pushstring "Screens.account"
         initproperty Qname(PackageNamespace(""),"ACCOUNT")
         findproperty Qname(PackageNamespace(""),"EDITOR")
         pushstring "Screens.editor"
         initproperty Qname(PackageNamespace(""),"EDITOR")
         findproperty Qname(PackageNamespace(""),"QUIT")
         pushstring "Screens.quit"
         initproperty Qname(PackageNamespace(""),"QUIT")
         findproperty Qname(PackageNamespace(""),"BACK")
         pushstring "Screens.back"
         initproperty Qname(PackageNamespace(""),"BACK")
         findproperty Qname(PackageNamespace(""),"LANGUAGES")
         pushstring "Screens.languages"
         initproperty Qname(PackageNamespace(""),"LANGUAGES")
         findproperty Qname(PackageNamespace(""),"SUPPORT")
         pushstring "Screens.support"
         initproperty Qname(PackageNamespace(""),"SUPPORT")
         findproperty Qname(PackageNamespace(""),"TRANSFER_ACCOUNT")
         pushstring "Screens.migrate"
         initproperty Qname(PackageNamespace(""),"TRANSFER_ACCOUNT")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ScreenTypes()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

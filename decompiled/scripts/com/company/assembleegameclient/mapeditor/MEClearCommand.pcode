package com.company.assembleegameclient.mapeditor
{
   import com.company.assembleegameclient.editor.Command;
   
   public class MEClearCommand extends Command
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var map_:MEMap;
      
      private var x_:int;
      
      private var y_:int;
      
      private var oldTile_:METile;
      
      public function MEClearCommand(param1:MEMap, param2:int, param3:int, param4:METile)
      {
         method
         name null
         param Qname(PackageInternalNs("com.company.assembleegameclient.mapeditor"),"MEMap")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace(""),"int")
         param Qname(PackageNamespace("com.company.assembleegameclient.mapeditor"),"METile")
         returns null
         
         body
         maxstack 2
         localcount 5
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"1003"),"map_")
         getlocal_0
         getlocal_2
         initproperty Qname(PrivateNamespace(null,"1003"),"x_")
         getlocal_0
         getlocal_3
         initproperty Qname(PrivateNamespace(null,"1003"),"y_")
         getlocal_0
         getlocal 4
         callproperty Qname(PackageNamespace(""),"clone") 0
         initproperty Qname(PrivateNamespace(null,"1003"),"oldTile_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function execute() : void
      {
         trait method Qname(PackageNamespace(""),"execute")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1003"),"map_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1003"),"x_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1003"),"y_")
         callpropvoid Qname(PackageNamespace(""),"eraseTile") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function unexecute() : void
      {
         trait method Qname(PackageNamespace(""),"unexecute")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1003"),"map_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1003"),"x_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1003"),"y_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1003"),"oldTile_")
         callpropvoid Qname(PackageNamespace(""),"setTile") 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.company.assembleegameclient.mapeditor
{
   import com.company.assembleegameclient.map.RegionLibrary;
   import com.company.assembleegameclient.ui.tooltip.ToolTip;
   import flash.display.Shape;
   
   public class RegionElement extends Element
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public var regionXML_:XML;
      
      public function RegionElement(param1:XML)
      {
         method
         name null
         param Qname(PackageNamespace(""),"XML")
         returns null
         
         body
         maxstack 6
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"Shape")
         setlocal_2
         getlocal_0
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_1
         getproperty MultinameA("type",[PrivateNamespace(null,"2055"),PackageNamespace(""),PrivateNamespace(null,"2056"),PackageNamespace("com.company.assembleegameclient.mapeditor"),PackageInternalNs("com.company.assembleegameclient.mapeditor"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.assembleegameclient.mapeditor:RegionElement"),StaticProtectedNs("com.company.assembleegameclient.mapeditor:RegionElement"),StaticProtectedNs("com.company.assembleegameclient.mapeditor:Element"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher")])
         callproperty Qname(PackageNamespace(""),"int") 1
         constructsuper 1
         getlocal_0
         getlocal_1
         initproperty Qname(PackageNamespace(""),"regionXML_")
         findpropstrict Qname(PackageNamespace("flash.display"),"Shape")
         constructprop Qname(PackageNamespace("flash.display"),"Shape") 0
         coerce Qname(PackageNamespace("flash.display"),"Shape")
         setlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"graphics")
         getlex Qname(PackageNamespace("com.company.assembleegameclient.map"),"RegionLibrary")
         getlex Qname(PackageNamespace(""),"type_")
         callproperty Qname(PackageNamespace(""),"getColor") 1
         pushdouble 0.5
         callpropvoid Qname(PackageNamespace(""),"beginFill") 2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"graphics")
         pushbyte 0
         dup
         getlex Qname(PackageNamespace(""),"WIDTH")
         pushbyte 8
         subtract
         getlex Qname(PackageNamespace(""),"HEIGHT")
         pushbyte 8
         subtract
         callpropvoid Qname(PackageNamespace(""),"drawRect") 4
         getlocal_2
         getproperty Qname(PackageNamespace(""),"graphics")
         callpropvoid Qname(PackageNamespace(""),"endFill") 0
         getlocal_2
         getlex Qname(PackageNamespace(""),"WIDTH")
         pushbyte 2
         divide
         getlocal_2
         getproperty Qname(PackageNamespace(""),"width")
         pushbyte 2
         divide
         subtract
         setproperty Qname(PackageNamespace(""),"x")
         getlocal_2
         getlex Qname(PackageNamespace(""),"HEIGHT")
         pushbyte 2
         divide
         getlocal_2
         getproperty Qname(PackageNamespace(""),"height")
         pushbyte 2
         divide
         subtract
         setproperty Qname(PackageNamespace(""),"y")
         findpropstrict Qname(PackageNamespace(""),"addChild")
         getlocal_2
         callpropvoid Qname(PackageNamespace(""),"addChild") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function getToolTip() : ToolTip
      {
         trait method Qname(ProtectedNamespace("com.company.assembleegameclient.mapeditor:RegionElement"),"getToolTip")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace("com.company.assembleegameclient.ui.tooltip"),"ToolTip")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("com.company.assembleegameclient.mapeditor"),"RegionTypeToolTip")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"regionXML_")
         constructprop Qname(PackageNamespace("com.company.assembleegameclient.mapeditor"),"RegionTypeToolTip") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

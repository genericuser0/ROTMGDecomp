package com.company.util
{
   public class Trig
   {
      
      public static const toDegrees:Number = 57.29577951308232;
      
      public static const toRadians:Number = 0.017453292519943295;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"toDegrees")
         pushshort 180
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         divide
         initproperty Qname(PackageNamespace(""),"toDegrees")
         findproperty Qname(PackageNamespace(""),"toRadians")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         pushshort 180
         divide
         initproperty Qname(PackageNamespace(""),"toRadians")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Trig(param1:StaticEnforcer#169)
      {
         method
         name null
         param Qname(PrivateNamespace(null,"7"),"StaticEnforcer")
         returns null
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function slerp(param1:Number, param2:Number, param3:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"slerp")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace(""),"Number")
         getproperty Qname(PackageNamespace(""),"MAX_VALUE")
         convert_d
         setlocal 4
         getlocal_1
         getlocal_2
         ifngt ofs004e
         getlocal_1
         getlocal_2
         subtract
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         ifngt ofs003d
         getlocal_1
         pushbyte 1
         getlocal_3
         subtract
         multiply
         getlocal_2
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         add
         getlocal_3
         multiply
         add
         convert_d
         setlocal 4
         jump ofs004a
         ofs003d:getlocal_1
         pushbyte 1
         getlocal_3
         subtract
         multiply
         getlocal_2
         getlocal_3
         multiply
         add
         convert_d
         setlocal 4
         ofs004a:jump ofs0087
         ofs004e:getlocal_2
         getlocal_1
         subtract
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         ifngt ofs007a
         getlocal_1
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         add
         pushbyte 1
         getlocal_3
         subtract
         multiply
         getlocal_2
         getlocal_3
         multiply
         add
         convert_d
         setlocal 4
         jump ofs0087
         ofs007a:getlocal_1
         pushbyte 1
         getlocal_3
         subtract
         multiply
         getlocal_2
         getlocal_3
         multiply
         add
         convert_d
         setlocal 4
         ofs0087:getlocal 4
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         lessthan
         dup
         iftrue ofs00a4
         pop
         getlocal 4
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         greaterthan
         ofs00a4:iffalse ofs00b6
         findpropstrict Qname(PackageNamespace(""),"boundToPI")
         getlocal 4
         callproperty Qname(PackageNamespace(""),"boundToPI") 1
         convert_d
         setlocal 4
         ofs00b6:getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function angleDiff(param1:Number, param2:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"angleDiff")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_2
         ifngt ofs002f
         getlocal_1
         getlocal_2
         subtract
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         ifngt ofs0027
         getlocal_2
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         add
         getlocal_1
         subtract
         returnvalue
         ofs0027:getlocal_1
         getlocal_2
         subtract
         returnvalue
         jump ofs002f
         ofs002f:getlocal_2
         getlocal_1
         subtract
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         ifngt ofs004e
         getlocal_1
         pushbyte 2
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         add
         getlocal_2
         subtract
         returnvalue
         ofs004e:getlocal_2
         getlocal_1
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function sin(param1:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"sin")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal_2
         getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         lessthan
         dup
         iftrue ofs001f
         pop
         getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         greaterthan
         ofs001f:iffalse ofs002f
         findpropstrict Qname(PackageNamespace(""),"boundToPI")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"boundToPI") 1
         convert_d
         setlocal_1
         ofs002f:getlocal_1
         pushbyte 0
         ifnlt ofs006b
         pushdouble 1.27323954
         getlocal_1
         multiply
         pushdouble 0.405284735
         getlocal_1
         multiply
         getlocal_1
         multiply
         add
         convert_d
         setlocal_2
         getlocal_2
         pushbyte 0
         ifnlt ofs005b
         pushdouble 0.225
         getlocal_2
         getlocal_2
         negate
         multiply
         getlocal_2
         subtract
         multiply
         getlocal_2
         add
         convert_d
         setlocal_2
         jump ofs0067
         ofs005b:pushdouble 0.225
         getlocal_2
         getlocal_2
         multiply
         getlocal_2
         subtract
         multiply
         getlocal_2
         add
         convert_d
         setlocal_2
         ofs0067:jump ofs009c
         ofs006b:pushdouble 1.27323954
         getlocal_1
         multiply
         pushdouble 0.405284735
         getlocal_1
         multiply
         getlocal_1
         multiply
         subtract
         convert_d
         setlocal_2
         getlocal_2
         pushbyte 0
         ifnlt ofs0090
         pushdouble 0.225
         getlocal_2
         getlocal_2
         negate
         multiply
         getlocal_2
         subtract
         multiply
         getlocal_2
         add
         convert_d
         setlocal_2
         jump ofs009c
         ofs0090:pushdouble 0.225
         getlocal_2
         getlocal_2
         multiply
         getlocal_2
         subtract
         multiply
         getlocal_2
         add
         convert_d
         setlocal_2
         ofs009c:getlocal_2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function cos(param1:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"cos")
         flag FINAL
         dispid 6
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"sin")
         getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         pushbyte 2
         divide
         add
         callproperty Qname(PackageNamespace(""),"sin") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function atan2(param1:Number, param2:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"atan2")
         flag FINAL
         dispid 7
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal_3
         getlocal_2
         pushdouble 0.0
         ifne ofs0037
         getlocal_1
         pushdouble 0.0
         ifnlt ofs001f
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         pushbyte 2
         divide
         returnvalue
         ofs001f:getlocal_1
         pushdouble 0.0
         ifngt ofs0032
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         pushbyte 2
         divide
         returnvalue
         ofs0032:getlex Qname(PackageNamespace(""),"undefined")
         returnvalue
         ofs0037:getlocal_1
         pushdouble 0.0
         ifne ofs0051
         getlocal_2
         pushdouble 0.0
         ifnlt ofs004e
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         returnvalue
         ofs004e:pushbyte 0
         returnvalue
         ofs0051:getlocal_2
         pushdouble 0.0
         greaterthan
         iffalse ofs005f
         getlocal_2
         coerce_a
         jump ofs0062
         ofs005f:getlocal_2
         negate
         coerce_a
         ofs0062:getlocal_1
         pushdouble 0.0
         greaterthan
         iffalse ofs0070
         getlocal_1
         coerce_a
         jump ofs0073
         ofs0070:getlocal_1
         negate
         coerce_a
         ofs0073:ifngt ofs00a2
         getlocal_2
         pushdouble 0.0
         lessthan
         iffalse ofs008d
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         coerce_a
         jump ofs0090
         ofs008d:pushbyte 0
         coerce_a
         ofs0090:findpropstrict Qname(PackageNamespace(""),"atan2Helper")
         getlocal_1
         getlocal_2
         callproperty Qname(PackageNamespace(""),"atan2Helper") 2
         add
         convert_d
         setlocal_3
         jump ofs00d5
         ofs00a2:getlocal_1
         pushbyte 0
         greaterthan
         iffalse ofs00ba
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         pushbyte 2
         divide
         coerce_a
         jump ofs00c7
         ofs00ba:getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         pushbyte 2
         divide
         coerce_a
         ofs00c7:findpropstrict Qname(PackageNamespace(""),"atan2Helper")
         getlocal_2
         getlocal_1
         callproperty Qname(PackageNamespace(""),"atan2Helper") 2
         subtract
         convert_d
         setlocal_3
         ofs00d5:getlocal_3
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         lessthan
         dup
         iftrue ofs00f0
         pop
         getlocal_3
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         greaterthan
         ofs00f0:iffalse ofs0100
         findpropstrict Qname(PackageNamespace(""),"boundToPI")
         getlocal_3
         callproperty Qname(PackageNamespace(""),"boundToPI") 1
         convert_d
         setlocal_3
         ofs0100:getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function atan2Helper(param1:Number, param2:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"atan2Helper")
         flag FINAL
         dispid 8
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getlocal_2
         divide
         convert_d
         setlocal_3
         getlocal_3
         convert_d
         setlocal 4
         getlocal_3
         convert_d
         setlocal 5
         pushbyte 1
         convert_d
         setlocal 6
         pushbyte 1
         setlocal 7
         jump ofs001d
         ofs001c:label
         ofs001d:getlocal 6
         pushbyte 2
         add
         convert_d
         setlocal 6
         getlocal 7
         pushbyte 0
         greaterthan
         iffalse ofs0034
         pushbyte -1
         jump ofs0036
         ofs0034:pushbyte 1
         ofs0036:convert_i
         setlocal 7
         getlocal 5
         getlocal_3
         multiply
         getlocal_3
         multiply
         convert_d
         setlocal 5
         getlocal 4
         getlocal 7
         getlocal 5
         multiply
         getlocal 6
         divide
         add
         convert_d
         setlocal 4
         getlocal 5
         pushdouble 0.01
         greaterthan
         dup
         iftrue ofs0060
         pop
         getlocal 5
         pushdouble -0.01
         lessthan
         ofs0060:dup
         iffalse ofs006b
         pop
         getlocal 6
         pushbyte 11
         lessequals
         ofs006b:iftrue ofs001c
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function boundToPI(param1:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"boundToPI")
         flag FINAL
         dispid 9
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         setlocal_2
         getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         ifnlt ofs0040
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         negate
         divide
         callproperty Qname(PackageNamespace(""),"int") 1
         pushbyte 1
         add
         pushbyte 2
         divide
         convert_i
         setlocal_2
         getlocal_1
         getlocal_2
         pushbyte 2
         multiply
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         add
         convert_d
         setlocal_1
         jump ofs0075
         ofs0040:getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         ifngt ofs0075
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_1
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         divide
         callproperty Qname(PackageNamespace(""),"int") 1
         pushbyte 1
         add
         pushbyte 2
         divide
         convert_i
         setlocal_2
         getlocal_1
         getlocal_2
         pushbyte 2
         multiply
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"PI")
         multiply
         subtract
         convert_d
         setlocal_1
         ofs0075:getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function boundTo180(param1:Number) : Number
      {
         trait method Qname(PackageNamespace(""),"boundTo180")
         flag FINAL
         dispid 10
         method
         name null
         param Qname(PackageNamespace(""),"Number")
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         setlocal_2
         getlocal_1
         pushshort -180
         ifnlt ofs0032
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_1
         pushshort -180
         divide
         callproperty Qname(PackageNamespace(""),"int") 1
         pushbyte 1
         add
         pushbyte 2
         divide
         convert_i
         setlocal_2
         getlocal_1
         getlocal_2
         pushshort 360
         multiply
         add
         convert_d
         setlocal_1
         jump ofs0055
         ofs0032:getlocal_1
         pushshort 180
         ifngt ofs0055
         findpropstrict Qname(PackageNamespace(""),"int")
         getlocal_1
         pushshort 180
         divide
         callproperty Qname(PackageNamespace(""),"int") 1
         pushbyte 1
         add
         pushbyte 2
         divide
         convert_i
         setlocal_2
         getlocal_1
         getlocal_2
         pushshort 360
         multiply
         subtract
         convert_d
         setlocal_1
         ofs0055:getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function unitTest() : Boolean
      {
         trait method Qname(PackageNamespace(""),"unitTest")
         flag FINAL
         dispid 11
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"trace")
         pushstring "STARTING UNITTEST: Trig"
         callpropvoid Qname(PackageNamespace(""),"trace") 1
         findpropstrict Qname(PackageNamespace(""),"testFunc1")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"sin")
         getlex Qname(PackageNamespace(""),"sin")
         callproperty Qname(PackageNamespace(""),"testFunc1") 2
         convert_b
         dup
         iffalse ofs0041
         pop
         findpropstrict Qname(PackageNamespace(""),"testFunc1")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"cos")
         getlex Qname(PackageNamespace(""),"cos")
         callproperty Qname(PackageNamespace(""),"testFunc1") 2
         convert_b
         ofs0041:dup
         iffalse ofs005d
         pop
         findpropstrict Qname(PackageNamespace(""),"testFunc2")
         getlex Qname(PackageNamespace(""),"Math")
         getproperty Qname(PackageNamespace(""),"atan2")
         getlex Qname(PackageNamespace(""),"atan2")
         callproperty Qname(PackageNamespace(""),"testFunc2") 2
         convert_b
         ofs005d:convert_b
         setlocal_1
         getlocal_1
         iftrue ofs0071
         findpropstrict Qname(PackageNamespace(""),"trace")
         pushstring "Trig Unit Test FAILED!"
         callpropvoid Qname(PackageNamespace(""),"trace") 1
         ofs0071:findpropstrict Qname(PackageNamespace(""),"trace")
         pushstring "FINISHED UNITTEST: Trig"
         callpropvoid Qname(PackageNamespace(""),"trace") 1
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function testFunc1(param1:Function, param2:Function) : Boolean
      {
         trait method Qname(PackageNamespace(""),"testFunc1")
         flag FINAL
         dispid 12
         method
         name null
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"Function")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 5
         pushnan
         setlocal 6
         findpropstrict Qname(PackageNamespace("com.company.util"),"Random")
         constructprop Qname(PackageNamespace("com.company.util"),"Random") 0
         coerce Qname(PackageNamespace("com.company.util"),"Random")
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs0055
         ofs001b:label
         getlocal_3
         callproperty Qname(PackageNamespace(""),"nextInt") 0
         pushshort 2000
         modulo
         pushshort 1000
         subtract
         getlocal_3
         callproperty Qname(PackageNamespace(""),"nextDouble") 0
         add
         convert_d
         setlocal 5
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_1
         getglobalscope
         getlocal 5
         call 1
         getlocal_2
         getglobalscope
         getlocal 5
         call 1
         subtract
         callproperty Qname(PackageNamespace(""),"abs") 1
         convert_d
         dup
         setlocal 6
         pushdouble 0.1
         ifngt ofs0053
         pushfalse
         returnvalue
         ofs0053:inclocal_i 4
         ofs0055:getlocal 4
         pushshort 1000
         iflt ofs001b
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function testFunc2(param1:Function, param2:Function) : Boolean
      {
         trait method Qname(PackageNamespace(""),"testFunc2")
         flag FINAL
         dispid 13
         method
         name null
         param Qname(PackageNamespace(""),"Function")
         param Qname(PackageNamespace(""),"Function")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 6
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 5
         pushnan
         setlocal 6
         pushnan
         setlocal 7
         findpropstrict Qname(PackageNamespace("com.company.util"),"Random")
         constructprop Qname(PackageNamespace("com.company.util"),"Random") 0
         coerce Qname(PackageNamespace("com.company.util"),"Random")
         setlocal_3
         pushbyte 0
         setlocal 4
         jump ofs0072
         ofs001e:label
         getlocal_3
         callproperty Qname(PackageNamespace(""),"nextInt") 0
         pushshort 2000
         modulo
         pushshort 1000
         subtract
         getlocal_3
         callproperty Qname(PackageNamespace(""),"nextDouble") 0
         add
         convert_d
         setlocal 5
         getlocal_3
         callproperty Qname(PackageNamespace(""),"nextInt") 0
         pushshort 2000
         modulo
         pushshort 1000
         subtract
         getlocal_3
         callproperty Qname(PackageNamespace(""),"nextDouble") 0
         add
         convert_d
         setlocal 6
         getlex Qname(PackageNamespace(""),"Math")
         getlocal_1
         getglobalscope
         getlocal 5
         getlocal 6
         call 2
         getlocal_2
         getglobalscope
         getlocal 5
         getlocal 6
         call 2
         subtract
         callproperty Qname(PackageNamespace(""),"abs") 1
         convert_d
         dup
         setlocal 7
         pushdouble 0.1
         ifngt ofs0070
         pushfalse
         returnvalue
         ofs0070:inclocal_i 4
         ofs0072:getlocal 4
         pushshort 1000
         iflt ofs001e
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

class StaticEnforcer#169
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   function StaticEnforcer#169()
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

package com.company.util
{
   public class ArrayIterator implements IIterator
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var objects_:Array;
      
      private var index_:int;
      
      public function ArrayIterator(param1:Array)
      {
         method
         name null
         param Qname(PackageNamespace(""),"Array")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_0
         getlocal_1
         initproperty Qname(PrivateNamespace(null,"759"),"objects_")
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"759"),"index_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function reset() : void
      {
         trait method Qname(PackageNamespace(""),"reset")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         pushbyte 0
         initproperty Qname(PrivateNamespace(null,"759"),"index_")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function next() : Object
      {
         trait method Qname(PackageNamespace(""),"next")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"759"),"objects_")
         getlocal_0
         dup
         setlocal_1
         getproperty Qname(PrivateNamespace(null,"759"),"index_")
         dup
         increment_i
         setlocal_2
         getlocal_1
         getlocal_2
         setproperty Qname(PrivateNamespace(null,"759"),"index_")
         kill 2
         kill 1
         getproperty MultinameL([PrivateNamespace(null,"759"),PackageNamespace(""),PrivateNamespace(null,"1752"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ArrayIterator"),StaticProtectedNs("com.company.util:ArrayIterator")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasNext() : Boolean
      {
         trait method Qname(PackageNamespace(""),"hasNext")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"759"),"index_")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"759"),"objects_")
         getproperty Qname(PackageNamespace(""),"length")
         lessthan
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package com.company.util
{
   import flash.geom.Point;
   import flash.geom.Rectangle;
   import flash.geom.Vector3D;
   
   public class ConversionUtil
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ConversionUtil(param1:StaticEnforcer#151)
      {
         method
         name null
         param Qname(PrivateNamespace(null,"3"),"StaticEnforcer")
         returns null
         
         body
         maxstack 1
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function toIntArray(param1:Object, param2:String = ",") : Array
      {
         trait method Qname(PackageNamespace(""),"toIntArray")
         flag FINAL
         dispid 3
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs000e
         findpropstrict Qname(PackageNamespace(""),"Array")
         constructprop Qname(PackageNamespace(""),"Array") 0
         returnvalue
         ofs000e:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseInt")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toNumberArray(param1:Object, param2:String = ",") : Array
      {
         trait method Qname(PackageNamespace(""),"toNumberArray")
         flag FINAL
         dispid 4
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs000e
         findpropstrict Qname(PackageNamespace(""),"Array")
         constructprop Qname(PackageNamespace(""),"Array") 0
         returnvalue
         ofs000e:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toIntVector(param1:Object, param2:String = ",") : Vector.<int>
      {
         trait method Qname(PackageNamespace(""),"toIntVector")
         flag FINAL
         dispid 5
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"int")>)
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs0013
         getlex Multiname("Vector",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"int")
         applytype 1
         construct 0
         returnvalue
         ofs0013:getlex Multiname("Vector",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"int")
         applytype 1
         getglobalscope
         getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseInt")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         call 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"int")>)
         setlocal_3
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toNumberVector(param1:Object, param2:String = ",") : Vector.<Number>
      {
         trait method Qname(PackageNamespace(""),"toNumberVector")
         flag FINAL
         dispid 6
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Number")>)
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs0013
         getlex Multiname("Vector",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"Number")
         applytype 1
         construct 0
         returnvalue
         ofs0013:getlex Multiname("Vector",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"Number")
         applytype 1
         getglobalscope
         getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         call 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Number")>)
         setlocal_3
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toStringArray(param1:Object, param2:String = ",") : Array
      {
         trait method Qname(PackageNamespace(""),"toStringArray")
         flag FINAL
         dispid 7
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs000e
         findpropstrict Qname(PackageNamespace(""),"Array")
         constructprop Qname(PackageNamespace(""),"Array") 0
         returnvalue
         ofs000e:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toRectangle(param1:Object, param2:String = ",") : Rectangle
      {
         trait method Qname(PackageNamespace(""),"toRectangle")
         flag FINAL
         dispid 8
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs000e
         findpropstrict Qname(PackageNamespace("flash.geom"),"Rectangle")
         constructprop Qname(PackageNamespace("flash.geom"),"Rectangle") 0
         returnvalue
         ofs000e:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_3
         pushnull
         equals
         dup
         iftrue ofs0036
         pop
         getlocal_3
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 4
         lessthan
         ofs0036:iffalse ofs0045
         findpropstrict Qname(PackageNamespace("flash.geom"),"Rectangle")
         constructprop Qname(PackageNamespace("flash.geom"),"Rectangle") 0
         coerce Qname(PackageNamespace("flash.geom"),"Rectangle")
         jump ofs0068
         ofs0045:findpropstrict Qname(PackageNamespace("flash.geom"),"Rectangle")
         getlocal_3
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal_3
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal_3
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal_3
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         constructprop Qname(PackageNamespace("flash.geom"),"Rectangle") 4
         coerce Qname(PackageNamespace("flash.geom"),"Rectangle")
         ofs0068:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toPoint(param1:Object, param2:String = ",") : Point
      {
         trait method Qname(PackageNamespace(""),"toPoint")
         flag FINAL
         dispid 9
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs0010
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 0
         returnvalue
         ofs0010:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getglobalscope
         getslot 1
         getproperty Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_3
         pushnull
         equals
         dup
         iftrue ofs003b
         pop
         getlocal_3
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 2
         lessthan
         ofs003b:iffalse ofs004d
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 0
         coerce Qname(PackageNamespace("flash.geom"),"Point")
         jump ofs0065
         ofs004d:findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         getlocal_3
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal_3
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 2
         coerce Qname(PackageNamespace("flash.geom"),"Point")
         ofs0065:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toPointPair(param1:Object, param2:String = ",") : Array
      {
         trait method Qname(PackageNamespace(""),"toPointPair")
         flag FINAL
         dispid 10
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"Array")
         constructprop Qname(PackageNamespace(""),"Array") 0
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_1
         pushnull
         ifne ofs002c
         getlocal_3
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 0
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_3
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 0
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_3
         returnvalue
         ofs002c:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getglobalscope
         getslot 1
         getproperty Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         dup
         setlocal 4
         pushnull
         equals
         dup
         iftrue ofs0059
         pop
         getlocal 4
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 4
         lessthan
         ofs0059:iffalse ofs0079
         getlocal_3
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 0
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_3
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 0
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_3
         returnvalue
         ofs0079:getlocal_3
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         getlocal 4
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal 4
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_3
         findpropstrict Qname(PackageNamespace("flash.geom"),"Point")
         getlocal 4
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal 4
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         constructprop Qname(PackageNamespace("flash.geom"),"Point") 2
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toVector3D(param1:Object, param2:String = ",") : Vector3D
      {
         trait method Qname(PackageNamespace(""),"toVector3D")
         flag FINAL
         dispid 11
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace("flash.geom"),"Vector3D")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs0010
         findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
         constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 0
         returnvalue
         ofs0010:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getglobalscope
         getslot 1
         getproperty Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal_3
         getlocal_3
         pushnull
         equals
         dup
         iftrue ofs003b
         pop
         getlocal_3
         getproperty Qname(PackageNamespace(""),"length")
         pushbyte 3
         lessthan
         ofs003b:iffalse ofs004d
         findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
         constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 0
         coerce Qname(PackageNamespace("flash.geom"),"Vector3D")
         jump ofs006c
         ofs004d:findpropstrict Qname(PackageNamespace("flash.geom"),"Vector3D")
         getlocal_3
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal_3
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         getlocal_3
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")])
         constructprop Qname(PackageNamespace("flash.geom"),"Vector3D") 3
         coerce Qname(PackageNamespace("flash.geom"),"Vector3D")
         ofs006c:returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function toCharCodesVector(param1:Object, param2:String = ",") : Vector.<int>
      {
         trait method Qname(PackageNamespace(""),"toCharCodesVector")
         flag FINAL
         dispid 12
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"int")>)
         
         body
         maxstack 4
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushnull
         ifne ofs0013
         getlex Multiname("Vector",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"int")
         applytype 1
         construct 0
         returnvalue
         ofs0013:getlex Multiname("Vector",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil"),PackageNamespace("__AS3__.vec")])
         getlex Qname(PackageNamespace(""),"int")
         applytype 1
         getglobalscope
         getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_2
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseCharCode")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         call 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"int")>)
         setlocal_3
         getlocal_3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function addToNumberVector(param1:Object, param2:Vector.<Number>, param3:String = ",") : void
      {
         trait method Qname(PackageNamespace(""),"addToNumberVector")
         flag FINAL
         dispid 13
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"Number")>)
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnan
         setlocal 5
         getlocal_1
         pushnull
         ifne ofs000c
         returnvoid
         ofs000c:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_3
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 4
         pushbyte 0
         setlocal 6
         getlocal 4
         coerce_a
         setlocal 7
         jump ofs0043
         ofs0032:label
         getlocal 7
         getlocal 6
         nextvalue
         convert_d
         setlocal 5
         getlocal_2
         getlocal 5
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0043:hasnext2 7 6
         iftrue ofs0032
         kill 7
         kill 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function addToIntVector(param1:Object, param2:Vector.<int>, param3:String = ",") : void
      {
         trait method Qname(PackageNamespace(""),"addToIntVector")
         flag FINAL
         dispid 14
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace(""),"Object")
         param TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace(""),"int")>)
         param Qname(PackageNamespace(""),"String")
         optional ","
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 8
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         setlocal 5
         getlocal_1
         pushnull
         ifne ofs000d
         returnvoid
         ofs000d:getlocal_1
         callproperty Multiname("toString",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 0
         getlocal_3
         callproperty Multiname("split",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         getlex Qname(PackageNamespace(""),"mapParseFloat")
         callproperty Multiname("map",[PrivateNamespace(null,"1588"),PackageNamespace(""),PrivateNamespace(null,"3"),PackageNamespace("com.company.util"),PackageInternalNs("com.company.util"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.company.util:ConversionUtil"),StaticProtectedNs("com.company.util:ConversionUtil")]) 1
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 4
         pushbyte 0
         setlocal 6
         getlocal 4
         coerce_a
         setlocal 7
         jump ofs0044
         ofs0033:label
         getlocal 7
         getlocal 6
         nextvalue
         convert_i
         setlocal 5
         getlocal_2
         getlocal 5
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"push") 1
         ofs0044:hasnext2 7 6
         iftrue ofs0033
         kill 7
         kill 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function mapParseFloat(param1:*, ... rest) : Number
      {
         trait method Qname(PackageNamespace(""),"mapParseFloat")
         flag FINAL
         dispid 15
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"parseFloat")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"parseFloat") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function mapParseInt(param1:*, ... rest) : Number
      {
         trait method Qname(PackageNamespace(""),"mapParseInt")
         flag FINAL
         dispid 16
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"parseInt") 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function mapParseCharCode(param1:*, ... rest) : Number
      {
         trait method Qname(PackageNamespace(""),"mapParseCharCode")
         flag FINAL
         dispid 17
         method
         name null
         flag NEED_REST
         param null
         returns Qname(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"String")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"String") 1
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt") 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function vector3DToShaderParameter(param1:Vector3D) : Array
      {
         trait method Qname(PackageNamespace(""),"vector3DToShaderParameter")
         flag FINAL
         dispid 18
         method
         name null
         param Qname(PackageNamespace("flash.geom"),"Vector3D")
         returns Qname(PackageNamespace(""),"Array")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"x")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"y")
         getlocal_1
         getproperty Qname(PackageNamespace(""),"z")
         newarray 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

class StaticEnforcer#151
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   function StaticEnforcer#151()
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

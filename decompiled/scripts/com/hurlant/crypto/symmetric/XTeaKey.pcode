package com.hurlant.crypto.symmetric
{
   import com.hurlant.crypto.prng.Random;
   import com.hurlant.util.Memory;
   import flash.utils.ByteArray;
   
   public class XTeaKey implements ISymmetricKey
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public const NUM_ROUNDS:uint = 64;
      
      private var k:Array;
      
      public function XTeaKey(param1:ByteArray)
      {
         method
         name null
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         returns null
         
         body
         maxstack 5
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         getlocal_1
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         newarray 4
         initproperty Qname(PrivateNamespace(null,"1138"),"k")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function parseKey(param1:String) : XTeaKey
      {
         trait method Qname(PackageNamespace(""),"parseKey")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("com.hurlant.crypto.symmetric"),"XTeaKey")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("flash.utils"),"ByteArray")
         constructprop Qname(PackageNamespace("flash.utils"),"ByteArray") 0
         coerce Qname(PackageNamespace("flash.utils"),"ByteArray")
         setlocal_2
         getlocal_2
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_1
         pushbyte 0
         pushbyte 8
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlocal_2
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_1
         pushbyte 8
         dup
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlocal_2
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_1
         pushbyte 16
         pushbyte 8
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlocal_2
         findpropstrict Qname(PackageNamespace(""),"parseInt")
         getlocal_1
         pushbyte 24
         pushbyte 8
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 2
         pushbyte 16
         callproperty Qname(PackageNamespace(""),"parseInt") 2
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlocal_2
         pushbyte 0
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_0
         getlocal_2
         construct 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getBlockSize() : uint
      {
         trait method Qname(PackageNamespace(""),"getBlockSize")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushbyte 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function encrypt(param1:ByteArray, param2:uint = 0) : void
      {
         trait method Qname(PackageNamespace(""),"encrypt")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 8
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 5
         getlocal_1
         getlocal_2
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         convert_u
         setlocal_3
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         convert_u
         setlocal 4
         pushbyte 0
         convert_u
         setlocal 6
         pushdouble 2.654435769E9
         convert_u
         setlocal 7
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs0088
         ofs0031:label
         getlocal_3
         getlocal 4
         pushbyte 4
         lshift
         getlocal 4
         pushbyte 5
         rshift
         bitxor
         getlocal 4
         add
         getlocal 6
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1138"),"k")
         getlocal 6
         pushbyte 3
         bitand
         getproperty MultinameL([PrivateNamespace(null,"1138"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2082"),PackageInternalNs("com.hurlant.crypto.symmetric"),ProtectedNamespace("com.hurlant.crypto.symmetric:XTeaKey"),StaticProtectedNs("com.hurlant.crypto.symmetric:XTeaKey")])
         add
         bitxor
         add
         convert_u
         setlocal_3
         getlocal 6
         getlocal 7
         add
         convert_u
         setlocal 6
         getlocal 4
         getlocal_3
         pushbyte 4
         lshift
         getlocal_3
         pushbyte 5
         rshift
         bitxor
         getlocal_3
         add
         getlocal 6
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1138"),"k")
         getlocal 6
         pushbyte 11
         rshift
         pushbyte 3
         bitand
         getproperty MultinameL([PrivateNamespace(null,"1138"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2082"),PackageInternalNs("com.hurlant.crypto.symmetric"),ProtectedNamespace("com.hurlant.crypto.symmetric:XTeaKey"),StaticProtectedNs("com.hurlant.crypto.symmetric:XTeaKey")])
         add
         bitxor
         add
         convert_u
         setlocal 4
         getlocal 5
         increment
         convert_u
         setlocal 5
         ofs0088:getlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"NUM_ROUNDS")
         iflt ofs0031
         getlocal_1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"position")
         pushbyte 8
         subtract
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlocal_1
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function decrypt(param1:ByteArray, param2:uint = 0) : void
      {
         trait method Qname(PackageNamespace(""),"decrypt")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param Qname(PackageNamespace("flash.utils"),"ByteArray")
         param Qname(PackageNamespace(""),"uint")
         optional 0
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 8
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushbyte 0
         convert_u
         setlocal 5
         getlocal_1
         getlocal_2
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         convert_u
         setlocal_3
         getlocal_1
         callproperty Qname(PackageNamespace(""),"readUnsignedInt") 0
         convert_u
         setlocal 4
         pushdouble 2.654435769E9
         convert_u
         dup
         setlocal 6
         getlocal_0
         getproperty Qname(PackageNamespace(""),"NUM_ROUNDS")
         multiply
         convert_u
         setlocal 7
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs008c
         ofs0035:label
         getlocal 4
         getlocal_3
         pushbyte 4
         lshift
         getlocal_3
         pushbyte 5
         rshift
         bitxor
         getlocal_3
         add
         getlocal 7
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1138"),"k")
         getlocal 7
         pushbyte 11
         rshift
         pushbyte 3
         bitand
         getproperty MultinameL([PrivateNamespace(null,"1138"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2082"),PackageInternalNs("com.hurlant.crypto.symmetric"),ProtectedNamespace("com.hurlant.crypto.symmetric:XTeaKey"),StaticProtectedNs("com.hurlant.crypto.symmetric:XTeaKey")])
         add
         bitxor
         subtract
         convert_u
         setlocal 4
         getlocal 7
         getlocal 6
         subtract
         convert_u
         setlocal 7
         getlocal_3
         getlocal 4
         pushbyte 4
         lshift
         getlocal 4
         pushbyte 5
         rshift
         bitxor
         getlocal 4
         add
         getlocal 7
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1138"),"k")
         getlocal 7
         pushbyte 3
         bitand
         getproperty MultinameL([PrivateNamespace(null,"1138"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2082"),PackageInternalNs("com.hurlant.crypto.symmetric"),ProtectedNamespace("com.hurlant.crypto.symmetric:XTeaKey"),StaticProtectedNs("com.hurlant.crypto.symmetric:XTeaKey")])
         add
         bitxor
         subtract
         convert_u
         setlocal_3
         getlocal 5
         increment
         convert_u
         setlocal 5
         ofs008c:getlocal 5
         getlocal_0
         getproperty Qname(PackageNamespace(""),"NUM_ROUNDS")
         iflt ofs0035
         getlocal_1
         getlocal_1
         getproperty Qname(PackageNamespace(""),"position")
         pushbyte 8
         subtract
         setproperty Qname(PackageNamespace(""),"position")
         getlocal_1
         getlocal_3
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         getlocal_1
         getlocal 4
         callpropvoid Qname(PackageNamespace(""),"writeUnsignedInt") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function dispose() : void
      {
         trait method Qname(PackageNamespace(""),"dispose")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         constructprop Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random") 0
         coerce Qname(PackageNamespace("com.hurlant.crypto.prng"),"Random")
         setlocal_1
         pushbyte 0
         convert_u
         setlocal_2
         jump ofs0032
         ofs0015:label
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1138"),"k")
         getlocal_2
         getlocal_1
         callproperty Qname(PackageNamespace(""),"nextByte") 0
         setproperty MultinameL([PrivateNamespace(null,"1138"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2082"),PackageInternalNs("com.hurlant.crypto.symmetric"),ProtectedNamespace("com.hurlant.crypto.symmetric:XTeaKey"),StaticProtectedNs("com.hurlant.crypto.symmetric:XTeaKey")])
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1138"),"k")
         getlocal_2
         deleteproperty MultinameL([PrivateNamespace(null,"1138"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("com.hurlant.crypto.symmetric"),PrivateNamespace(null,"2082"),PackageInternalNs("com.hurlant.crypto.symmetric"),ProtectedNamespace("com.hurlant.crypto.symmetric:XTeaKey"),StaticProtectedNs("com.hurlant.crypto.symmetric:XTeaKey")])
         pop
         getlocal_2
         increment
         convert_u
         setlocal_2
         ofs0032:getlocal_2
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1138"),"k")
         getproperty Qname(PackageNamespace(""),"length")
         iflt ofs0015
         getlocal_0
         pushnull
         initproperty Qname(PrivateNamespace(null,"1138"),"k")
         getlex Qname(PackageNamespace("com.hurlant.util"),"Memory")
         callpropvoid Qname(PackageNamespace(""),"gc") 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method Qname(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         pushstring "xtea"
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

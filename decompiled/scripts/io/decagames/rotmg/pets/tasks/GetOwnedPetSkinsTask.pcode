package io.decagames.rotmg.pets.tasks
{
   import com.company.util.MoreObjectUtil;
   import io.decagames.rotmg.pets.data.PetsModel;
   import io.decagames.rotmg.seasonalEvent.data.SeasonalEventModel;
   import kabam.lib.tasks.BaseTask;
   import kabam.rotmg.account.core.Account;
   import kabam.rotmg.appengine.api.AppEngineClient;
   import robotlegs.bender.framework.api.ILogger;
   
   public class GetOwnedPetSkinsTask extends BaseTask
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var account:Account;
      
      [Inject]
      public var client:AppEngineClient;
      
      [Inject]
      public var logger:ILogger;
      
      [Inject]
      public var petModel:PetsModel;
      
      [Inject]
      public var seasonalEventModel:SeasonalEventModel;
      
      public function GetOwnedPetSkinsTask()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function startTask() : void
      {
         trait method Qname(ProtectedNamespace("io.decagames.rotmg.pets.tasks:GetOwnedPetSkinsTask"),"startTask")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"logger")
         pushstring "GetOwnedPetSkinsTask start"
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILogger"),"info") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"account")
         callproperty Qname(Namespace("kabam.rotmg.account.core:Account"),"isRegistered") 0
         iftrue ofs0034
         getlocal_0
         getproperty Qname(PackageNamespace(""),"logger")
         pushstring "Guest account - skip skins check"
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILogger"),"info") 1
         findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         pushtrue
         pushstring ""
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 2
         jump ofs0054
         ofs0034:getlocal_0
         getproperty Qname(PackageNamespace(""),"client")
         getproperty Qname(Namespace("kabam.rotmg.appengine.api:AppEngineClient"),"complete")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"264"),"onComplete")
         callpropvoid Qname(PackageNamespace(""),"addOnce") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"client")
         pushstring "/account/getOwnedPetSkins"
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"264"),"makeDataPacket") 0
         callpropvoid Qname(Namespace("kabam.rotmg.appengine.api:AppEngineClient"),"sendRequest") 2
         ofs0054:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function makeDataPacket() : Object
      {
         trait method Qname(PrivateNamespace(null,"264"),"makeDataPacket")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         newobject 0
         coerce Qname(PackageNamespace(""),"Object")
         setlocal_1
         getlex Qname(PackageNamespace("com.company.util"),"MoreObjectUtil")
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"account")
         callproperty Qname(Namespace("kabam.rotmg.account.core:Account"),"getCredentials") 0
         callpropvoid Qname(PackageNamespace(""),"addToObject") 2
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalEventModel")
         getproperty Qname(PackageNamespace(""),"isChallenger")
         setproperty Multiname("isChallenger",[PrivateNamespace(null,"264"),PackageNamespace(""),PrivateNamespace(null,"1397"),PackageNamespace("io.decagames.rotmg.pets.tasks"),PackageInternalNs("io.decagames.rotmg.pets.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("io.decagames.rotmg.pets.tasks:GetOwnedPetSkinsTask"),StaticProtectedNs("io.decagames.rotmg.pets.tasks:GetOwnedPetSkinsTask"),StaticProtectedNs("kabam.lib.tasks:BaseTask")])
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function onComplete(param1:Boolean, param2:*) : void
      {
         trait method Qname(PrivateNamespace(null,"264"),"onComplete")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param Qname(PackageNamespace(""),"Boolean")
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 6
         maxscopedepth 11
         try from ofs0031 to ofs0042 target ofs0046 type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"e")
         
         code
         getlocal_0
         pushscope
         newactivation
         dup
         setlocal_3
         pushscope
         getscopeobject 1
         getlocal_1
         setslot 1
         getscopeobject 1
         getlocal_2
         setslot 2
         getscopeobject 1
         getscopeobject 1
         getslot 1
         convert_b
         dup
         iftrue ofs0026
         pop
         getscopeobject 1
         getslot 2
         pushstring "<Success/>"
         equals
         ofs0026:convert_b
         setslot 1
         getscopeobject 1
         getslot 1
         iffalse ofs007c
         ofs0031:getlocal_0
         getproperty Qname(PackageNamespace(""),"petModel")
         findpropstrict Qname(PackageNamespace(""),"XML")
         getscopeobject 1
         getslot 2
         callproperty Qname(PackageNamespace(""),"XML") 1
         callpropvoid Qname(PackageNamespace(""),"parseOwnedSkins") 1
         ofs0042:jump ofs0074
         ofs0046:getlocal_0
         pushscope
         getlocal_3
         pushscope
         newcatch 0
         dup
         setlocal 4
         dup
         pushscope
         swap
         setslot 1
         getlex Qname(PackageNamespace(""),"logger")
         getscopeobject 2
         getslot 1
         getproperty Qname(PackageNamespace(""),"message")
         pushstring " "
         add
         getscopeobject 2
         getslot 1
         callproperty Qname(PackageNamespace(""),"getStackTrace") 0
         add
         callpropvoid Qname(Namespace("robotlegs.bender.framework.api:ILogger"),"error") 1
         popscope
         kill 4
         ofs0074:getlocal_0
         getproperty Qname(PackageNamespace(""),"petModel")
         callpropvoid Qname(PackageNamespace(""),"parsePetsData") 0
         ofs007c:findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         getscopeobject 1
         getslot 1
         getscopeobject 1
         getslot 2
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

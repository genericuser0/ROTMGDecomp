package io.decagames.rotmg.seasonalEvent.tasks
{
   import io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard.SeasonalItemDataFactory;
   import io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard.SeasonalLeaderBoard;
   import io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard.SeasonalLeaderBoardItemData;
   import io.decagames.rotmg.seasonalEvent.data.SeasonalEventModel;
   import io.decagames.rotmg.seasonalEvent.signals.SeasonalLeaderBoardErrorSignal;
   import kabam.lib.tasks.BaseTask;
   import kabam.rotmg.account.core.Account;
   import kabam.rotmg.appengine.api.AppEngineClient;
   import kabam.rotmg.core.model.PlayerModel;
   import kabam.rotmg.legends.model.LegendFactory;
   import kabam.rotmg.legends.model.LegendsModel;
   import kabam.rotmg.legends.model.Timespan;
   
   public class GetChallengerListTask extends BaseTask
   {
      
      public static const REFRESH_INTERVAL_IN_MILLISECONDS:Number = 300000.0;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 3
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         findproperty Qname(PackageNamespace(""),"REFRESH_INTERVAL_IN_MILLISECONDS")
         pushbyte 5
         pushbyte 60
         multiply
         pushshort 1000
         multiply
         initproperty Qname(PackageNamespace(""),"REFRESH_INTERVAL_IN_MILLISECONDS")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Inject]
      public var account:Account;
      
      [Inject]
      public var client:AppEngineClient;
      
      [Inject]
      public var player:PlayerModel;
      
      [Inject]
      public var model:LegendsModel;
      
      [Inject]
      public var seasonalEventModel:SeasonalEventModel;
      
      [Inject]
      public var factory:LegendFactory;
      
      [Inject]
      public var seasonalItemDataFactory:SeasonalItemDataFactory;
      
      [Inject]
      public var timespan:Timespan;
      
      [Inject]
      public var listType:String;
      
      [Inject]
      public var seasonalLeaderBoardErrorSignal:SeasonalLeaderBoardErrorSignal;
      
      public var charId:int;
      
      public function GetChallengerListTask()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function startTask() : void
      {
         trait method Qname(ProtectedNamespace("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),"startTask")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"client")
         getproperty Qname(Namespace("kabam.rotmg.appengine.api:AppEngineClient"),"complete")
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1107"),"onComplete")
         callpropvoid Qname(PackageNamespace(""),"addOnce") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"listType")
         getlex Qname(PackageNamespace("io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard"),"SeasonalLeaderBoard")
         getproperty Qname(PackageNamespace(""),"TOP_20_TAB_LABEL")
         ifne ofs0035
         getlocal_0
         getproperty Qname(PackageNamespace(""),"client")
         pushstring "/fame/challengerLeaderboard"
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"1107"),"makeRequestObject") 0
         callpropvoid Qname(Namespace("kabam.rotmg.appengine.api:AppEngineClient"),"sendRequest") 2
         jump ofs005e
         ofs0035:getlocal_0
         getproperty Qname(PackageNamespace(""),"listType")
         getlex Qname(PackageNamespace("io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard"),"SeasonalLeaderBoard")
         getproperty Qname(PackageNamespace(""),"PLAYER_TAB_LABEL")
         ifne ofs005e
         getlocal_0
         getproperty Qname(PackageNamespace(""),"client")
         pushstring "/fame/challengerAccountLeaderboard?account="
         getlocal_0
         getproperty Qname(PackageNamespace(""),"account")
         callproperty Qname(Namespace("kabam.rotmg.account.core:Account"),"getUserName") 0
         add
         getlocal_0
         callproperty Qname(PrivateNamespace(null,"1107"),"makeRequestObject") 0
         callpropvoid Qname(Namespace("kabam.rotmg.appengine.api:AppEngineClient"),"sendRequest") 2
         ofs005e:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onComplete(param1:Boolean, param2:*) : void
      {
         trait method Qname(PrivateNamespace(null,"1107"),"onComplete")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Boolean")
         param null
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_1
         iffalse ofs0011
         getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"1107"),"updateFameListData") 1
         jump ofs0017
         ofs0011:getlocal_0
         getlocal_2
         callpropvoid Qname(PrivateNamespace(null,"1107"),"onFameListError") 1
         ofs0017:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function onFameListError(param1:String) : void
      {
         trait method Qname(PrivateNamespace(null,"1107"),"onFameListError")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalLeaderBoardErrorSignal")
         getlocal_1
         callpropvoid Qname(PackageNamespace(""),"dispatch") 1
         findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         pushtrue
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function updateFameListData(param1:String) : void
      {
         trait method Qname(PrivateNamespace(null,"1107"),"updateFameListData")
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PackageNamespace(""),"XML")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"XML") 1
         coerce Qname(PackageNamespace(""),"XML")
         setlocal_2
         findpropstrict Qname(PackageNamespace(""),"Date")
         getlocal_2
         getproperty Multiname("GeneratedOn",[PrivateNamespace(null,"1107"),PackageNamespace(""),PrivateNamespace(null,"2040"),PackageNamespace("io.decagames.rotmg.seasonalEvent.tasks"),PackageInternalNs("io.decagames.rotmg.seasonalEvent.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("kabam.lib.tasks:BaseTask")])
         pushshort 1000
         multiply
         constructprop Qname(PackageNamespace(""),"Date") 1
         coerce Qname(PackageNamespace(""),"Date")
         setlocal_3
         getlocal_3
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"getTimezoneOffset") 0
         pushbyte 60
         multiply
         pushshort 1000
         multiply
         convert_d
         setlocal 4
         getlocal_3
         getlocal_3
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"getTime") 0
         getlocal 4
         subtract
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"setTime") 1
         findpropstrict Qname(PackageNamespace(""),"Date")
         constructprop Qname(PackageNamespace(""),"Date") 0
         coerce Qname(PackageNamespace(""),"Date")
         dup
         dup
         setlocal 5
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"getTime") 0
         getlex Qname(PackageNamespace(""),"REFRESH_INTERVAL_IN_MILLISECONDS")
         add
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"setTime") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalItemDataFactory")
         findpropstrict Qname(PackageNamespace(""),"XML")
         getlocal_1
         callproperty Qname(PackageNamespace(""),"XML") 1
         callproperty Qname(PackageNamespace(""),"createSeasonalLeaderBoardItemDatas") 1
         coerce TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard"),"SeasonalLeaderBoardItemData")>)
         setlocal 6
         getlocal_0
         getproperty Qname(PackageNamespace(""),"listType")
         getlex Qname(PackageNamespace("io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard"),"SeasonalLeaderBoard")
         getproperty Qname(PackageNamespace(""),"TOP_20_TAB_LABEL")
         ifne ofs0094
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalEventModel")
         getlocal 6
         setproperty Qname(PackageNamespace(""),"leaderboardTop20ItemDatas")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalEventModel")
         getlocal 5
         setproperty Qname(PackageNamespace(""),"leaderboardTop20RefreshTime")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalEventModel")
         getlocal_3
         setproperty Qname(PackageNamespace(""),"leaderboardTop20CreateTime")
         jump ofs00c8
         ofs0094:getlocal_0
         getproperty Qname(PackageNamespace(""),"listType")
         getlex Qname(PackageNamespace("io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard"),"SeasonalLeaderBoard")
         getproperty Qname(PackageNamespace(""),"PLAYER_TAB_LABEL")
         ifne ofs00c8
         getlocal 6
         getlocal_0
         getproperty Qname(PrivateNamespace(null,"1107"),"fameSort")
         callpropvoid Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"sort") 1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalEventModel")
         getlocal 6
         setproperty Qname(PackageNamespace(""),"leaderboardPlayerItemDatas")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalEventModel")
         getlocal 5
         setproperty Qname(PackageNamespace(""),"leaderboardPlayerRefreshTime")
         getlocal_0
         getproperty Qname(PackageNamespace(""),"seasonalEventModel")
         getlocal_3
         setproperty Qname(PackageNamespace(""),"leaderboardPlayerCreateTime")
         ofs00c8:findpropstrict Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask")
         pushtrue
         callpropvoid Qname(ProtectedNamespace("kabam.lib.tasks:BaseTask"),"completeTask") 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function fameSort(param1:SeasonalLeaderBoardItemData, param2:SeasonalLeaderBoardItemData) : int
      {
         trait method Qname(PrivateNamespace(null,"1107"),"fameSort")
         dispid 0
         method
         name null
         param Qname(PackageNamespace("io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard"),"SeasonalLeaderBoardItemData")
         param Qname(PackageNamespace("io.decagames.rotmg.seasonalEvent.SeasonalLeaderBoard"),"SeasonalLeaderBoardItemData")
         returns Qname(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         getlocal_1
         getproperty Qname(PackageNamespace(""),"totalFame")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"totalFame")
         ifngt ofs0011
         pushbyte -1
         returnvalue
         ofs0011:getlocal_1
         getproperty Qname(PackageNamespace(""),"totalFame")
         getlocal_2
         getproperty Qname(PackageNamespace(""),"totalFame")
         ifnlt ofs0020
         pushbyte 1
         returnvalue
         ofs0020:pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function makeRequestObject() : Object
      {
         trait method Qname(PrivateNamespace(null,"1107"),"makeRequestObject")
         dispid 0
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         newobject 0
         coerce Qname(PackageNamespace(""),"Object")
         setlocal_1
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"timespan")
         callproperty Qname(PackageNamespace(""),"getId") 0
         setproperty Multiname("timespan",[PrivateNamespace(null,"1107"),PackageNamespace(""),PrivateNamespace(null,"2040"),PackageNamespace("io.decagames.rotmg.seasonalEvent.tasks"),PackageInternalNs("io.decagames.rotmg.seasonalEvent.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("kabam.lib.tasks:BaseTask")])
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"player")
         callproperty Qname(PackageNamespace(""),"getAccountId") 0
         setproperty Multiname("accountId",[PrivateNamespace(null,"1107"),PackageNamespace(""),PrivateNamespace(null,"2040"),PackageNamespace("io.decagames.rotmg.seasonalEvent.tasks"),PackageInternalNs("io.decagames.rotmg.seasonalEvent.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("kabam.lib.tasks:BaseTask")])
         getlocal_1
         getlocal_0
         getproperty Qname(PackageNamespace(""),"charId")
         setproperty Multiname("charId",[PrivateNamespace(null,"1107"),PackageNamespace(""),PrivateNamespace(null,"2040"),PackageNamespace("io.decagames.rotmg.seasonalEvent.tasks"),PackageInternalNs("io.decagames.rotmg.seasonalEvent.tasks"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("io.decagames.rotmg.seasonalEvent.tasks:GetChallengerListTask"),StaticProtectedNs("kabam.lib.tasks:BaseTask")])
         getlocal_1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

package org.hamcrest.core
{
   import org.hamcrest.Matcher;
   
   public function allOf(... rest) : Matcher
   {
      trait method Qname(PackageNamespace("org.hamcrest.core"),"allOf")
      dispid 34
      method
      name null
      flag NEED_REST
      returns Qname(PackageNamespace("org.hamcrest"),"Matcher")
      
      body
      maxstack 2
      localcount 3
      initscopedepth 1
      maxscopedepth 2
      
      code
      getlocal_0
      pushscope
      getlocal_1
      coerce Qname(PackageNamespace(""),"Array")
      setlocal_2
      getlocal_1
      getproperty Qname(PackageNamespace(""),"length")
      pushbyte 1
      equals
      dup
      iffalse ofs001d
      pop
      getlocal_1
      pushbyte 0
      getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"1833"),PackageNamespace("org.hamcrest.core"),PackageInternalNs("org.hamcrest.core"),Namespace("http://adobe.com/AS3/2006/builtin")])
      getlex Qname(PackageNamespace(""),"Array")
      istypelate
      ofs001d:iffalse ofs002b
      getlocal_1
      pushbyte 0
      getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"1833"),PackageNamespace("org.hamcrest.core"),PackageInternalNs("org.hamcrest.core"),Namespace("http://adobe.com/AS3/2006/builtin")])
      coerce Qname(PackageNamespace(""),"Array")
      setlocal_2
      ofs002b:findpropstrict Qname(PackageNamespace("org.hamcrest.core"),"AllOfMatcher")
      getlocal_2
      constructprop Qname(PackageNamespace("org.hamcrest.core"),"AllOfMatcher") 1
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

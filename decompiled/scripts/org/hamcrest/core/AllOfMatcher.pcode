package org.hamcrest.core
{
   import org.hamcrest.Description;
   import org.hamcrest.DiagnosingMatcher;
   import org.hamcrest.Matcher;
   
   public class AllOfMatcher extends DiagnosingMatcher
   {
      
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal_0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private var _matchers:Array;
      
      public function AllOfMatcher(param1:Array)
      {
         method
         name null
         param Qname(PackageNamespace(""),"Array")
         returns null
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         findproperty Qname(PrivateNamespace(null,"1076"),"_matchers")
         getlocal_1
         coerce Qname(PackageNamespace(""),"Array")
         dup
         iftrue ofs0015
         pop
         newarray 0
         coerce Qname(PackageNamespace(""),"Array")
         ofs0015:initproperty Qname(PrivateNamespace(null,"1076"),"_matchers")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function matchesOrDescribesMismatch(param1:Object, param2:Description) : Boolean
      {
         trait method Qname(ProtectedNamespace("org.hamcrest.core:AllOfMatcher"),"matchesOrDescribesMismatch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         param Qname(PackageNamespace("org.hamcrest"),"Description")
         returns Qname(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce Qname(PackageNamespace("org.hamcrest"),"Matcher")
         setlocal_3
         pushbyte 0
         setlocal 4
         getlex Qname(PrivateNamespace(null,"1076"),"_matchers")
         coerce_a
         setlocal 5
         jump ofs003d
         ofs0014:label
         getlocal 5
         getlocal 4
         nextvalue
         coerce Qname(PackageNamespace("org.hamcrest"),"Matcher")
         setlocal_3
         getlocal_3
         getlocal_1
         callproperty Qname(Namespace("org.hamcrest:Matcher"),"matches") 1
         iftrue ofs003d
         getlocal_2
         getlocal_3
         callproperty Qname(Namespace("org.hamcrest:Description"),"appendDescriptionOf") 1
         pushstring " "
         callproperty Qname(Namespace("org.hamcrest:Description"),"appendText") 1
         getlocal_3
         getlocal_1
         callpropvoid Qname(Namespace("org.hamcrest:Description"),"appendMismatchOf") 2
         pushfalse
         returnvalue
         ofs003d:hasnext2 5 4
         iftrue ofs0014
         kill 5
         kill 4
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function describeTo(param1:Description) : void
      {
         trait method Qname(PackageNamespace(""),"describeTo")
         flag OVERRIDE
         dispid 0
         method
         name null
         param Qname(PackageNamespace("org.hamcrest"),"Description")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal_0
         pushscope
         getlocal_1
         pushstring "("
         pushstring " and "
         pushstring ")"
         getlex Qname(PrivateNamespace(null,"1076"),"_matchers")
         callpropvoid Qname(Namespace("org.hamcrest:Description"),"appendList") 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

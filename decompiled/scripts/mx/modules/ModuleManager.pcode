package mx.modules
{
   import mx.core.IFlexModuleFactory;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class ModuleManager
   {
      
      mx_internal static const VERSION:String = "4.6.0.23201";
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.6.0.23201"
         initproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ModuleManager()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getModule(param1:String) : IModuleInfo
      {
         trait method Qname(PackageNamespace(""),"getModule")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace("mx.modules"),"IModuleInfo")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PrivateNamespace(null,"1293"),"getSingleton")
         callproperty Qname(PrivateNamespace(null,"1293"),"getSingleton") 0
         getlocal_1
         callproperty Multiname("getModule",[PrivateNamespace(null,"1293"),PrivateNamespace(null,"16"),PackageNamespace(""),PackageNamespace("mx.modules"),PackageInternalNs("mx.modules"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.modules:ModuleManager"),StaticProtectedNs("mx.modules:ModuleManager")]) 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getAssociatedFactory(param1:Object) : IFlexModuleFactory
      {
         trait method Qname(PackageNamespace(""),"getAssociatedFactory")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findpropstrict Qname(PrivateNamespace(null,"1293"),"getSingleton")
         callproperty Qname(PrivateNamespace(null,"1293"),"getSingleton") 0
         getlocal_1
         callproperty Multiname("getAssociatedFactory",[PrivateNamespace(null,"1293"),PrivateNamespace(null,"16"),PackageNamespace(""),PackageNamespace("mx.modules"),PackageInternalNs("mx.modules"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.modules:ModuleManager"),StaticProtectedNs("mx.modules:ModuleManager")]) 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function getSingleton() : Object
      {
         trait method Qname(PrivateNamespace(null,"1293"),"getSingleton")
         flag FINAL
         dispid 5
         method
         name null
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PackageNamespace("mx.modules"),"ModuleManagerGlobals")
         getproperty Qname(PackageNamespace(""),"managerSingleton")
         iftrue ofs001d
         getlex Qname(PackageNamespace("mx.modules"),"ModuleManagerGlobals")
         findpropstrict Qname(PrivateNamespace(null,"16"),"ModuleManagerImpl")
         constructprop Qname(PrivateNamespace(null,"16"),"ModuleManagerImpl") 0
         setproperty Qname(PackageNamespace(""),"managerSingleton")
         ofs001d:getlex Qname(PackageNamespace("mx.modules"),"ModuleManagerGlobals")
         getproperty Qname(PackageNamespace(""),"managerSingleton")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

import flash.events.EventDispatcher;
import flash.system.ApplicationDomain;
import flash.utils.Dictionary;
import flash.utils.getQualifiedClassName;
import mx.core.IFlexModuleFactory;
import mx.modules.IModuleInfo;

class ModuleManagerImpl extends EventDispatcher
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private var moduleDictionary:Dictionary;
   
   function ModuleManagerImpl()
   {
      method
      name null
      returns null
      
      body
      maxstack 3
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      findpropstrict Qname(PackageNamespace("flash.utils"),"Dictionary")
      pushtrue
      constructprop Qname(PackageNamespace("flash.utils"),"Dictionary") 1
      initproperty Qname(PrivateNamespace(null,"1175"),"moduleDictionary")
      getlocal_0
      constructsuper 0
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function getAssociatedFactory(param1:Object) : IFlexModuleFactory
   {
      trait method Qname(PackageNamespace(""),"getAssociatedFactory")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"Object")
      returns Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      
      body
      maxstack 3
      localcount 9
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      pushnull
      coerce Qname(PackageNamespace(""),"Object")
      setlocal_3
      pushnull
      coerce Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      setlocal 4
      pushnull
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      setlocal 5
      pushnull
      coerce Qname(PackageNamespace(""),"Class")
      setlocal 6
      findpropstrict Qname(PackageNamespace("flash.utils"),"getQualifiedClassName")
      getlocal_1
      callproperty Qname(PackageNamespace("flash.utils"),"getQualifiedClassName") 1
      coerce_s
      setlocal_2
      pushbyte 0
      setlocal 7
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1175"),"moduleDictionary")
      coerce_a
      setlocal 8
      jump ofs008b
      ofs0031:label
      getlocal 8
      getlocal 7
      nextname
      coerce Qname(PackageNamespace(""),"Object")
      setlocal_3
      getlocal_3
      getlex Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      astypelate
      coerce Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      dup
      setlocal 4
      getproperty Qname(PackageNamespace(""),"ready")
      iftrue ofs0050
      jump ofs008b
      ofs0050:getlocal 4
      getproperty Qname(PackageNamespace(""),"applicationDomain")
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      dup
      setlocal 5
      getlocal_2
      callproperty Qname(PackageNamespace(""),"hasDefinition") 1
      iffalse ofs008b
      findpropstrict Qname(PackageNamespace(""),"Class")
      getlocal 5
      getlocal_2
      callproperty Qname(PackageNamespace(""),"getDefinition") 1
      callproperty Qname(PackageNamespace(""),"Class") 1
      coerce Qname(PackageNamespace(""),"Class")
      dup
      setlocal 6
      convert_b
      dup
      iffalse ofs0081
      pop
      getlocal_1
      getlocal 6
      istypelate
      ofs0081:iffalse ofs008b
      getlocal 4
      getproperty Qname(PackageNamespace(""),"factory")
      returnvalue
      ofs008b:hasnext2 8 7
      iftrue ofs0031
      kill 8
      kill 7
      pushnull
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function getModule(param1:String) : IModuleInfo
   {
      trait method Qname(PackageNamespace(""),"getModule")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"String")
      returns Qname(PackageNamespace("mx.modules"),"IModuleInfo")
      
      body
      maxstack 3
      localcount 7
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      pushnull
      coerce Qname(PackageNamespace(""),"Object")
      setlocal_3
      pushnull
      coerce Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      setlocal 4
      pushnull
      coerce Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      setlocal_2
      pushbyte 0
      setlocal 5
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1175"),"moduleDictionary")
      coerce_a
      setlocal 6
      jump ofs004c
      ofs0020:label
      getlocal 6
      getlocal 5
      nextname
      coerce Qname(PackageNamespace(""),"Object")
      setlocal_3
      getlocal_3
      getlex Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      astypelate
      coerce Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      setlocal 4
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1175"),"moduleDictionary")
      getlocal 4
      getproperty MultinameL([PrivateNamespace(null,"16"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1175"),ProtectedNamespace("ModuleManager.as$29:ModuleManagerImpl"),StaticProtectedNs("ModuleManager.as$29:ModuleManagerImpl"),StaticProtectedNs("flash.events:EventDispatcher")])
      getlocal_1
      ifne ofs004c
      getlocal 4
      coerce Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      setlocal_2
      jump ofs0053
      ofs004c:hasnext2 6 5
      iftrue ofs0020
      ofs0053:kill 6
      kill 5
      getlocal_2
      iftrue ofs0072
      findpropstrict Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      getlocal_1
      constructprop Qname(PrivateNamespace(null,"16"),"ModuleInfo") 1
      coerce Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      setlocal_2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1175"),"moduleDictionary")
      getlocal_2
      getlocal_1
      setproperty MultinameL([PrivateNamespace(null,"16"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"1175"),ProtectedNamespace("ModuleManager.as$29:ModuleManagerImpl"),StaticProtectedNs("ModuleManager.as$29:ModuleManagerImpl"),StaticProtectedNs("flash.events:EventDispatcher")])
      ofs0072:findpropstrict Qname(PrivateNamespace(null,"16"),"ModuleInfoProxy")
      getlocal_2
      constructprop Qname(PrivateNamespace(null,"16"),"ModuleInfoProxy") 1
      returnvalue
      end ; code
      end ; body
      end ; method
   }
}

import flash.display.Loader;
import flash.events.ErrorEvent;
import flash.events.Event;
import flash.events.EventDispatcher;
import flash.events.IOErrorEvent;
import flash.events.ProgressEvent;
import flash.events.SecurityErrorEvent;
import flash.net.URLRequest;
import flash.system.ApplicationDomain;
import flash.system.LoaderContext;
import flash.system.Security;
import flash.system.SecurityDomain;
import flash.utils.ByteArray;
import mx.core.IFlexModuleFactory;
import mx.events.ModuleEvent;
import mx.events.Request;

class ModuleInfo extends EventDispatcher
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private var factoryInfo:FactoryInfo;
   
   private var loader:Loader;
   
   private var numReferences:int = 0;
   
   private var parentModuleFactory:IFlexModuleFactory;
   
   private var _error:Boolean = false;
   
   private var _loaded:Boolean = false;
   
   private var _ready:Boolean = false;
   
   private var _setup:Boolean = false;
   
   private var _url:String;
   
   function ModuleInfo(param1:String)
   {
      method
      name null
      param Qname(PackageNamespace(""),"String")
      returns null
      
      body
      maxstack 2
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      getlocal_0
      getlocal_1
      initproperty Qname(PrivateNamespace(null,"1176"),"_url")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function get applicationDomain() : ApplicationDomain
   {
      trait getter Qname(PackageNamespace(""),"applicationDomain")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      iffalse ofs0017
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getproperty Qname(PackageNamespace(""),"applicationDomain")
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      jump ofs001a
      ofs0017:pushnull
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      ofs001a:returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get error() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"error")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_error")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get factory() : IFlexModuleFactory
   {
      trait getter Qname(PackageNamespace(""),"factory")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      iffalse ofs0018
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getproperty Qname(PackageNamespace(""),"factory")
      coerce Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      jump ofs001c
      ofs0018:pushnull
      coerce Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      ofs001c:returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get loaded() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"loaded")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get ready() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"ready")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get setup() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"setup")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_setup")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get size() : int
   {
      trait getter Qname(PackageNamespace(""),"size")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"int")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      iffalse ofs0016
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getproperty Qname(PackageNamespace(""),"bytesTotal")
      convert_i
      jump ofs0018
      ofs0016:pushbyte 0
      ofs0018:returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get url() : String
   {
      trait getter Qname(PackageNamespace(""),"url")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"String")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_url")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function load(param1:ApplicationDomain = null, param2:SecurityDomain = null, param3:ByteArray = null, param4:IFlexModuleFactory = null) : void
   {
      trait method Qname(PackageNamespace(""),"load")
      dispid 0
      method
      name null
      flag HAS_OPTIONAL
      param Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      param Qname(PackageNamespace("flash.system"),"SecurityDomain")
      param Qname(PackageNamespace("flash.utils"),"ByteArray")
      param Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      optional null
      optional null
      optional null
      optional null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 3
      localcount 7
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      iffalse ofs000b
      returnvoid
      ofs000b:getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      getlocal_0
      getlocal 4
      initproperty Qname(PrivateNamespace(null,"1176"),"parentModuleFactory")
      getlocal_3
      iffalse ofs0023
      getlocal_0
      getlocal_1
      getlocal_3
      callpropvoid Qname(PrivateNamespace(null,"1176"),"loadBytes") 2
      returnvoid
      ofs0023:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_url")
      pushstring "published://"
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
      pushbyte 0
      ifne ofs0037
      returnvoid
      ofs0037:findpropstrict Qname(PackageNamespace("flash.net"),"URLRequest")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_url")
      constructprop Qname(PackageNamespace("flash.net"),"URLRequest") 1
      coerce Qname(PackageNamespace("flash.net"),"URLRequest")
      setlocal 5
      findpropstrict Qname(PackageNamespace("flash.system"),"LoaderContext")
      constructprop Qname(PackageNamespace("flash.system"),"LoaderContext") 0
      coerce Qname(PackageNamespace("flash.system"),"LoaderContext")
      dup
      setlocal 6
      getlocal_1
      iffalse ofs005d
      getlocal_1
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      jump ofs006a
      ofs005d:findpropstrict Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      getlex Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      getproperty Qname(PackageNamespace(""),"currentDomain")
      constructprop Qname(PackageNamespace("flash.system"),"ApplicationDomain") 1
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      ofs006a:setproperty Qname(PackageNamespace(""),"applicationDomain")
      getlocal_2
      pushnull
      equals
      not
      dup
      iffalse ofs0088
      pop
      getlex Qname(PackageNamespace("flash.system"),"Security")
      getproperty Qname(PackageNamespace(""),"sandboxType")
      getlex Qname(PackageNamespace("flash.system"),"Security")
      getproperty Qname(PackageNamespace(""),"REMOTE")
      equals
      ofs0088:iffalse ofs0093
      getlocal 6
      getlocal_2
      setproperty Qname(PackageNamespace(""),"securityDomain")
      ofs0093:getlocal_0
      findpropstrict Qname(PackageNamespace("flash.display"),"Loader")
      constructprop Qname(PackageNamespace("flash.display"),"Loader") 0
      initproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"Event")
      getproperty Qname(PackageNamespace(""),"INIT")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"initHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"Event")
      getproperty Qname(PackageNamespace(""),"COMPLETE")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"completeHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"ProgressEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"progressHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"IOErrorEvent")
      getproperty Qname(PackageNamespace(""),"IO_ERROR")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"errorHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"SecurityErrorEvent")
      getproperty Qname(PackageNamespace(""),"SECURITY_ERROR")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"errorHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getlocal 5
      getlocal 6
      callpropvoid Qname(PackageNamespace(""),"load") 2
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private function loadBytes(param1:ApplicationDomain, param2:ByteArray) : void
   {
      trait method Qname(PrivateNamespace(null,"1176"),"loadBytes")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      param Qname(PackageNamespace("flash.utils"),"ByteArray")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 3
      localcount 4
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      findpropstrict Qname(PackageNamespace("flash.system"),"LoaderContext")
      constructprop Qname(PackageNamespace("flash.system"),"LoaderContext") 0
      coerce Qname(PackageNamespace("flash.system"),"LoaderContext")
      setlocal_3
      getlocal_3
      getlocal_1
      iffalse ofs001a
      getlocal_1
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      jump ofs0027
      ofs001a:findpropstrict Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      getlex Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      getproperty Qname(PackageNamespace(""),"currentDomain")
      constructprop Qname(PackageNamespace("flash.system"),"ApplicationDomain") 1
      coerce Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      ofs0027:setproperty Qname(PackageNamespace(""),"applicationDomain")
      pushstring "allowLoadBytesCodeExecution"
      getlocal_3
      in
      iffalse ofs003e
      getlocal_3
      pushstring "allowLoadBytesCodeExecution"
      pushtrue
      setproperty MultinameL([PrivateNamespace(null,"16"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),StaticProtectedNs("flash.events:EventDispatcher"),PrivateNamespace(null,"1176"),ProtectedNamespace("ModuleManager.as$29:ModuleInfo"),StaticProtectedNs("ModuleManager.as$29:ModuleInfo")])
      ofs003e:getlocal_0
      findpropstrict Qname(PackageNamespace("flash.display"),"Loader")
      constructprop Qname(PackageNamespace("flash.display"),"Loader") 0
      initproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"Event")
      getproperty Qname(PackageNamespace(""),"INIT")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"initHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"Event")
      getproperty Qname(PackageNamespace(""),"COMPLETE")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"completeHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"IOErrorEvent")
      getproperty Qname(PackageNamespace(""),"IO_ERROR")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"errorHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"SecurityErrorEvent")
      getproperty Qname(PackageNamespace(""),"SECURITY_ERROR")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"errorHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getlocal_2
      getlocal_3
      callpropvoid Qname(PackageNamespace(""),"loadBytes") 2
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function resurrect() : void
   {
      trait method Qname(PackageNamespace(""),"resurrect")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 3
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      iftrue ofs000b
      returnvoid
      ofs000b:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      iftrue ofs0049
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      iffalse ofs0030
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"UNLOAD")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      ofs0030:getlocal_0
      pushnull
      initproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_setup")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_error")
      ofs0049:returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function release() : void
   {
      trait method Qname(PackageNamespace(""),"release")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      iftrue ofs000f
      getlocal_0
      callpropvoid Qname(PackageNamespace(""),"unload") 0
      ofs000f:returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private function clearLoader() : void
   {
      trait method Qname(PrivateNamespace(null,"1176"),"clearLoader")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 3
      localcount 2
      initscopedepth 5
      maxscopedepth 9
      try from ofs007f to ofs00ae target ofs00b2 type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"error")
      try from ofs00c8 to ofs00d0 target ofs00d4 type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"error")
      try from ofs00e2 to ofs00ea target ofs00ee type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"error")
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      iffalse ofs0101
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      iffalse ofs007f
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"Event")
      getproperty Qname(PackageNamespace(""),"INIT")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"initHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"Event")
      getproperty Qname(PackageNamespace(""),"COMPLETE")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"completeHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"ProgressEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"progressHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"IOErrorEvent")
      getproperty Qname(PackageNamespace(""),"IO_ERROR")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"errorHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getlex Qname(PackageNamespace("flash.events"),"SecurityErrorEvent")
      getproperty Qname(PackageNamespace(""),"SECURITY_ERROR")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"errorHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      ofs007f:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"content")
      iffalse ofs00ae
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"content")
      pushstring "ready"
      getlocal_0
      getproperty Qname(PackageNamespace(""),"readyHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"content")
      pushstring "error"
      getlocal_0
      getproperty Qname(PackageNamespace(""),"moduleErrorHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      ofs00ae:jump ofs00c0
      ofs00b2:getlocal_0
      pushscope
      newcatch 0
      dup
      setlocal_1
      dup
      pushscope
      swap
      setslot 1
      popscope
      kill 1
      ofs00c0:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      iffalse ofs00e2
      ofs00c8:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      callpropvoid Qname(PackageNamespace(""),"close") 0
      ofs00d0:jump ofs00e2
      ofs00d4:getlocal_0
      pushscope
      newcatch 1
      dup
      setlocal_1
      dup
      pushscope
      swap
      setslot 1
      popscope
      kill 1
      ofs00e2:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      callpropvoid Qname(PackageNamespace(""),"unload") 0
      ofs00ea:jump ofs00fc
      ofs00ee:getlocal_0
      pushscope
      newcatch 2
      dup
      setlocal_1
      dup
      pushscope
      swap
      setslot 1
      popscope
      kill 1
      ofs00fc:getlocal_0
      pushnull
      initproperty Qname(PrivateNamespace(null,"1176"),"loader")
      ofs0101:returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function unload() : void
   {
      trait method Qname(PackageNamespace(""),"unload")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 3
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      callpropvoid Qname(PrivateNamespace(null,"1176"),"clearLoader") 0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      iffalse ofs0024
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"UNLOAD")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      ofs0024:getlocal_0
      pushnull
      initproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getlocal_0
      pushnull
      initproperty Qname(PrivateNamespace(null,"1176"),"parentModuleFactory")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_setup")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_error")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function publish(param1:IFlexModuleFactory) : void
   {
      trait method Qname(PackageNamespace(""),"publish")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 3
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      iffalse ofs000b
      returnvoid
      ofs000b:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"_url")
      pushstring "published://"
      callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
      pushbyte 0
      ifeq ofs001f
      returnvoid
      ofs001f:getlocal_0
      findpropstrict Qname(PrivateNamespace(null,"16"),"FactoryInfo")
      constructprop Qname(PrivateNamespace(null,"16"),"FactoryInfo") 0
      initproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getlocal_1
      setproperty Qname(PackageNamespace(""),"factory")
      getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_loaded")
      getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_setup")
      getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1176"),"_error")
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"SETUP")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"READY")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function addReference() : void
   {
      trait method Qname(PackageNamespace(""),"addReference")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 3
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      dup
      setlocal_1
      getproperty Qname(PrivateNamespace(null,"1176"),"numReferences")
      increment_i
      setlocal_2
      getlocal_1
      getlocal_2
      setproperty Qname(PrivateNamespace(null,"1176"),"numReferences")
      kill 2
      kill 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function removeReference() : void
   {
      trait method Qname(PackageNamespace(""),"removeReference")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 3
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      dup
      setlocal_1
      getproperty Qname(PrivateNamespace(null,"1176"),"numReferences")
      decrement_i
      setlocal_2
      getlocal_1
      getlocal_2
      setproperty Qname(PrivateNamespace(null,"1176"),"numReferences")
      kill 2
      kill 1
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"numReferences")
      pushbyte 0
      ifne ofs0022
      getlocal_0
      callpropvoid Qname(PackageNamespace(""),"release") 0
      ofs0022:returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function initHandler(param1:Event) : void
   {
      trait method Qname(PackageNamespace(""),"initHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("flash.events"),"Event")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 6
      localcount 4
      initscopedepth 5
      maxscopedepth 9
      try from ofs0012 to ofs0024 target ofs0028 type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"error")
      try from ofs00b9 to ofs00ca target ofs00ce type Qname(PackageNamespace(""),"Error") name Qname(PackageNamespace(""),"error")
      
      code
      getlocal_0
      pushscope
      pushnull
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      getlocal_0
      findpropstrict Qname(PrivateNamespace(null,"16"),"FactoryInfo")
      constructprop Qname(PrivateNamespace(null,"16"),"FactoryInfo") 0
      initproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      ofs0012:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"content")
      getlex Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      astypelate
      setproperty Qname(PackageNamespace(""),"factory")
      ofs0024:jump ofs0036
      ofs0028:getlocal_0
      pushscope
      newcatch 0
      dup
      setlocal_3
      dup
      pushscope
      swap
      setslot 1
      popscope
      kill 3
      ofs0036:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getproperty Qname(PackageNamespace(""),"factory")
      iftrue ofs007b
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"ERROR")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"bubbles")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"cancelable")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 3
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      getlocal_2
      pushbyte 0
      setproperty Qname(PackageNamespace(""),"bytesLoaded")
      getlocal_2
      pushbyte 0
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      getlocal_2
      pushstring "SWF is not a loadable module"
      setproperty Qname(PackageNamespace(""),"errorText")
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal_2
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      ofs007b:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"content")
      pushstring "ready"
      getlocal_0
      getproperty Qname(PackageNamespace(""),"readyHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"content")
      pushstring "error"
      getlocal_0
      getproperty Qname(PackageNamespace(""),"moduleErrorHandler")
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"content")
      getlex Qname(PackageNamespace("mx.events"),"Request")
      getproperty Qname(PackageNamespace(""),"GET_PARENT_FLEX_MODULE_FACTORY_REQUEST")
      getlocal_0
      getproperty Qname(PackageNamespace(""),"getFlexModuleFactoryRequestHandler")
      pushfalse
      pushbyte 0
      pushtrue
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
      ofs00b9:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getproperty Qname(PackageNamespace(""),"applicationDomain")
      setproperty Qname(PackageNamespace(""),"applicationDomain")
      ofs00ca:jump ofs00dc
      ofs00ce:getlocal_0
      pushscope
      newcatch 1
      dup
      setlocal_3
      dup
      pushscope
      swap
      setslot 1
      popscope
      kill 3
      ofs00dc:getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_setup")
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"SETUP")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function progressHandler(param1:ProgressEvent) : void
   {
      trait method Qname(PackageNamespace(""),"progressHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("flash.events"),"ProgressEvent")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 4
      localcount 3
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"bubbles")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"cancelable")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 3
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      getlocal_2
      getlocal_1
      getproperty Qname(PackageNamespace(""),"bytesLoaded")
      setproperty Qname(PackageNamespace(""),"bytesLoaded")
      getlocal_2
      getlocal_1
      getproperty Qname(PackageNamespace(""),"bytesTotal")
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal_2
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function completeHandler(param1:Event) : void
   {
      trait method Qname(PackageNamespace(""),"completeHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("flash.events"),"Event")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 4
      localcount 3
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"bubbles")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"cancelable")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 3
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      getlocal_2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getproperty Qname(PackageNamespace(""),"bytesLoaded")
      setproperty Qname(PackageNamespace(""),"bytesLoaded")
      getlocal_2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getproperty Qname(PackageNamespace(""),"bytesTotal")
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal_2
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function errorHandler(param1:ErrorEvent) : void
   {
      trait method Qname(PackageNamespace(""),"errorHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("flash.events"),"ErrorEvent")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 4
      localcount 3
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_error")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"ERROR")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"bubbles")
      getlocal_1
      getproperty Qname(PackageNamespace(""),"cancelable")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 3
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      getlocal_2
      pushbyte 0
      setproperty Qname(PackageNamespace(""),"bytesLoaded")
      getlocal_2
      pushbyte 0
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      getlocal_2
      getlocal_1
      getproperty Qname(PackageNamespace(""),"text")
      setproperty Qname(PackageNamespace(""),"errorText")
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal_2
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function getFlexModuleFactoryRequestHandler(param1:Request) : void
   {
      trait method Qname(PackageNamespace(""),"getFlexModuleFactoryRequestHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("mx.events"),"Request")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_1
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"parentModuleFactory")
      setproperty Qname(PackageNamespace(""),"value")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function readyHandler(param1:Event) : void
   {
      trait method Qname(PackageNamespace(""),"readyHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("flash.events"),"Event")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 3
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getproperty Qname(PackageNamespace(""),"bytesTotal")
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"READY")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      getlocal_2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getproperty Qname(PackageNamespace(""),"bytesLoaded")
      setproperty Qname(PackageNamespace(""),"bytesLoaded")
      getlocal_2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getproperty Qname(PackageNamespace(""),"bytesTotal")
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      getlocal_0
      callpropvoid Qname(PrivateNamespace(null,"1176"),"clearLoader") 0
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal_2
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function moduleErrorHandler(param1:Event) : void
   {
      trait method Qname(PackageNamespace(""),"moduleErrorHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("flash.events"),"Event")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 3
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      pushnull
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1176"),"_ready")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"factoryInfo")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1176"),"loader")
      getproperty Qname(PackageNamespace(""),"contentLoaderInfo")
      getproperty Qname(PackageNamespace(""),"bytesTotal")
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      getlocal_0
      callpropvoid Qname(PrivateNamespace(null,"1176"),"clearLoader") 0
      getlocal_1
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      istypelate
      iffalse ofs003b
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlocal_1
      callproperty Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      jump ofs004d
      ofs003b:findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"ERROR")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal_2
      ofs004d:findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal_2
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

import flash.system.ApplicationDomain;
import mx.core.IFlexModuleFactory;

class FactoryInfo
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public var factory:IFlexModuleFactory;
   
   public var applicationDomain:ApplicationDomain;
   
   public var bytesTotal:int = 0;
   
   function FactoryInfo()
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

import flash.events.EventDispatcher;
import flash.system.ApplicationDomain;
import flash.system.SecurityDomain;
import flash.utils.ByteArray;
import mx.core.IFlexModuleFactory;
import mx.events.ModuleEvent;
import mx.modules.IModuleInfo;

class ModuleInfoProxy extends EventDispatcher implements IModuleInfo
{
   
   {
      method
      name null
      returns null
      
      body
      maxstack 1
      localcount 1
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal_0
      pushscope
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private var info:ModuleInfo;
   
   private var referenced:Boolean = false;
   
   private var _data:Object;
   
   function ModuleInfoProxy(param1:ModuleInfo)
   {
      method
      name null
      param Qname(PrivateNamespace(null,"16"),"ModuleInfo")
      returns null
      
      body
      maxstack 6
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      constructsuper 0
      getlocal_0
      getlocal_1
      initproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlocal_1
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"SETUP")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      pushfalse
      pushbyte 0
      pushtrue
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
      getlocal_1
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      pushfalse
      pushbyte 0
      pushtrue
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
      getlocal_1
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"READY")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      pushfalse
      pushbyte 0
      pushtrue
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
      getlocal_1
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"ERROR")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      pushfalse
      pushbyte 0
      pushtrue
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
      getlocal_1
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"UNLOAD")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      pushfalse
      pushbyte 0
      pushtrue
      callpropvoid Qname(PackageNamespace(""),"addEventListener") 5
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function get data() : Object
   {
      trait getter Qname(PackageNamespace(""),"data")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Object")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"_data")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function set data(param1:Object) : void
   {
      trait setter Qname(PackageNamespace(""),"data")
      dispid 0
      method
      name null
      param Qname(PackageNamespace(""),"Object")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getlocal_1
      initproperty Qname(PrivateNamespace(null,"1177"),"_data")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function get error() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"error")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"error")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get factory() : IFlexModuleFactory
   {
      trait getter Qname(PackageNamespace(""),"factory")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"factory")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get loaded() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"loaded")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"loaded")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get ready() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"ready")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"ready")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get setup() : Boolean
   {
      trait getter Qname(PackageNamespace(""),"setup")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"Boolean")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"setup")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function get url() : String
   {
      trait getter Qname(PackageNamespace(""),"url")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"String")
      
      body
      maxstack 1
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"url")
      returnvalue
      end ; code
      end ; body
      end ; method
   }
   
   public function publish(param1:IFlexModuleFactory) : void
   {
      trait method Qname(PackageNamespace(""),"publish")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlocal_1
      callpropvoid Qname(PackageNamespace(""),"publish") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function load(param1:ApplicationDomain = null, param2:SecurityDomain = null, param3:ByteArray = null, param4:IFlexModuleFactory = null) : void
   {
      trait method Qname(PackageNamespace(""),"load")
      dispid 0
      method
      name null
      flag HAS_OPTIONAL
      param Qname(PackageNamespace("flash.system"),"ApplicationDomain")
      param Qname(PackageNamespace("flash.system"),"SecurityDomain")
      param Qname(PackageNamespace("flash.utils"),"ByteArray")
      param Qname(PackageNamespace("mx.core"),"IFlexModuleFactory")
      optional null
      optional null
      optional null
      optional null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 5
      localcount 6
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      pushnull
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      setlocal 5
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      callpropvoid Qname(PackageNamespace(""),"resurrect") 0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"referenced")
      iftrue ofs0025
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      callpropvoid Qname(PackageNamespace(""),"addReference") 0
      getlocal_0
      pushtrue
      initproperty Qname(PrivateNamespace(null,"1177"),"referenced")
      ofs0025:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"error")
      iffalse ofs0049
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"ERROR")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      jump ofs00d9
      ofs0049:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"loaded")
      iffalse ofs00cc
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"setup")
      iffalse ofs00c8
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"SETUP")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"ready")
      iffalse ofs00c8
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      coerce Qname(PackageNamespace("mx.events"),"ModuleEvent")
      dup
      setlocal 5
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"size")
      setproperty Qname(PackageNamespace(""),"bytesLoaded")
      getlocal 5
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getproperty Qname(PackageNamespace(""),"size")
      setproperty Qname(PackageNamespace(""),"bytesTotal")
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal 5
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      findpropstrict Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"READY")
      constructprop Qname(PackageNamespace("mx.events"),"ModuleEvent") 1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      ofs00c8:jump ofs00d9
      ofs00cc:getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlocal_1
      getlocal_2
      getlocal_3
      getlocal 4
      callpropvoid Qname(PackageNamespace(""),"load") 4
      ofs00d9:returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function release() : void
   {
      trait method Qname(PackageNamespace(""),"release")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"referenced")
      iffalse ofs0017
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      callpropvoid Qname(PackageNamespace(""),"removeReference") 0
      getlocal_0
      pushfalse
      initproperty Qname(PrivateNamespace(null,"1177"),"referenced")
      ofs0017:returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   public function unload() : void
   {
      trait method Qname(PackageNamespace(""),"unload")
      dispid 0
      method
      name null
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 3
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      callpropvoid Qname(PackageNamespace(""),"unload") 0
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"SETUP")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"PROGRESS")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"READY")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"ERROR")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"info")
      getlex Qname(PackageNamespace("mx.events"),"ModuleEvent")
      getproperty Qname(PackageNamespace(""),"UNLOAD")
      getlocal_0
      getproperty Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      callpropvoid Qname(PackageNamespace(""),"removeEventListener") 2
      returnvoid
      end ; code
      end ; body
      end ; method
   }
   
   private function moduleEventHandler(param1:ModuleEvent) : void
   {
      trait method Qname(PrivateNamespace(null,"1177"),"moduleEventHandler")
      dispid 0
      method
      name null
      param Qname(PackageNamespace("mx.events"),"ModuleEvent")
      returns Qname(PackageNamespace(""),"void")
      
      body
      maxstack 2
      localcount 2
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal_0
      pushscope
      findpropstrict Qname(PackageNamespace(""),"dispatchEvent")
      getlocal_1
      callpropvoid Qname(PackageNamespace(""),"dispatchEvent") 1
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

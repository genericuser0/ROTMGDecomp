package mx.utils
{
   import flash.display.DisplayObject;
   import flash.utils.getQualifiedClassName;
   import mx.core.IRepeaterClient;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class NameUtil
   {
      
      mx_internal static const VERSION:String = "4.6.0.23201";
      
      private static var counter:int = 0;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.6.0.23201"
         initproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty Qname(PrivateNamespace(null,"1267"),"counter")
         pushbyte 0
         setproperty Qname(PrivateNamespace(null,"1267"),"counter")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function NameUtil()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function createUniqueName(param1:Object) : String
      {
         trait method Qname(PackageNamespace(""),"createUniqueName")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlocal_1
         iftrue ofs0009
         pushnull
         returnvalue
         ofs0009:findpropstrict Qname(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal_1
         callproperty Qname(PackageNamespace("flash.utils"),"getQualifiedClassName") 1
         coerce_s
         setlocal_2
         getlocal_2
         pushstring "::"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         convert_i
         setlocal_3
         getlocal_3
         pushbyte -1
         ifeq ofs0034
         getlocal_2
         getlocal_3
         pushbyte 2
         add
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 1
         coerce_s
         setlocal_2
         ofs0034:getlocal_2
         getlocal_2
         getproperty Qname(PackageNamespace(""),"length")
         decrement
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"charCodeAt") 1
         convert_i
         dup
         setlocal 4
         pushbyte 48
         greaterequals
         dup
         iffalse ofs0051
         pop
         getlocal 4
         pushbyte 57
         lessequals
         ofs0051:iffalse ofs005c
         getlocal_2
         pushstring "_"
         add
         setlocal_2
         ofs005c:getlocal_2
         findpropstrict Qname(PrivateNamespace(null,"1267"),"counter")
         dup
         setlocal 5
         getproperty Qname(PrivateNamespace(null,"1267"),"counter")
         dup
         increment_i
         setlocal 6
         getlocal 5
         getlocal 6
         setproperty Qname(PrivateNamespace(null,"1267"),"counter")
         kill 6
         kill 5
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function displayObjectToString(param1:DisplayObject) : String
      {
         trait method Qname(PackageNamespace(""),"displayObjectToString")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace("flash.display"),"DisplayObject")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 3
         maxscopedepth 6
         try from ofs0012 to ofs00d0 target ofs00d4 type Qname(PackageNamespace(""),"SecurityError") name Qname(PackageNamespace(""),"e")
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_2
         pushnull
         coerce Qname(PackageNamespace("flash.display"),"DisplayObject")
         setlocal_3
         pushnull
         coerce_s
         setlocal 4
         pushnull
         coerce Qname(PackageNamespace(""),"Array")
         setlocal 5
         ofs0012:getlocal_1
         coerce Qname(PackageNamespace("flash.display"),"DisplayObject")
         setlocal_3
         jump ofs00ca
         ofs001a:label
         getlocal_3
         getproperty Qname(PackageNamespace(""),"parent")
         coerce_a
         convert_b
         dup
         iffalse ofs002d
         pop
         getlocal_3
         getproperty Qname(PackageNamespace(""),"stage")
         coerce_a
         convert_b
         ofs002d:dup
         iffalse ofs003c
         pop
         getlocal_3
         getproperty Qname(PackageNamespace(""),"parent")
         getlocal_3
         getproperty Qname(PackageNamespace(""),"stage")
         equals
         ofs003c:iffalse ofs0044
         jump ofs00d0
         ofs0044:pushstring "id"
         getlocal_3
         in
         dup
         iffalse ofs0058
         pop
         getlocal_3
         pushstring "id"
         getproperty MultinameL([PrivateNamespace(null,"1267"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace(""),PrivateNamespace(null,"1879"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:NameUtil"),StaticProtectedNs("mx.utils:NameUtil")])
         convert_b
         ofs0058:iffalse ofs0069
         getlocal_3
         pushstring "id"
         getproperty MultinameL([PrivateNamespace(null,"1267"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace(""),PrivateNamespace(null,"1879"),PackageNamespace("mx.utils"),PackageInternalNs("mx.utils"),ProtectedNamespace("mx.utils:NameUtil"),StaticProtectedNs("mx.utils:NameUtil")])
         coerce_s
         jump ofs006e
         ofs0069:getlocal_3
         getproperty Qname(PackageNamespace(""),"name")
         coerce_s
         ofs006e:coerce_s
         setlocal 4
         getlocal_3
         getlex Qname(PackageNamespace("mx.core"),"IRepeaterClient")
         istypelate
         iffalse ofs00a9
         findpropstrict Qname(PackageNamespace("mx.core"),"IRepeaterClient")
         getlocal_3
         callproperty Qname(PackageNamespace("mx.core"),"IRepeaterClient") 1
         getproperty Qname(Namespace("mx.core:IRepeaterClient"),"instanceIndices")
         coerce Qname(PackageNamespace(""),"Array")
         dup
         setlocal 5
         iffalse ofs00a9
         getlocal 4
         pushstring "["
         getlocal 5
         pushstring "]["
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"join") 1
         add
         pushstring "]"
         add
         add
         coerce_s
         setlocal 4
         ofs00a9:getlocal_2
         pushnull
         equals
         iffalse ofs00b7
         getlocal 4
         coerce_s
         jump ofs00c1
         ofs00b7:getlocal 4
         pushstring "."
         add
         getlocal_2
         add
         coerce_s
         ofs00c1:coerce_s
         setlocal_2
         getlocal_3
         getproperty Qname(PackageNamespace(""),"parent")
         coerce Qname(PackageNamespace("flash.display"),"DisplayObject")
         setlocal_3
         ofs00ca:getlocal_3
         pushnull
         ifne ofs001a
         ofs00d0:jump ofs00e3
         ofs00d4:getlocal_0
         pushscope
         newcatch 0
         dup
         setlocal 6
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 6
         ofs00e3:getlocal_2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getUnqualifiedClassName(param1:Object) : String
      {
         trait method Qname(PackageNamespace(""),"getUnqualifiedClassName")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"Object")
         returns Qname(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         pushnull
         coerce_s
         setlocal_2
         getlocal_1
         getlex Qname(PackageNamespace(""),"String")
         istypelate
         iffalse ofs0017
         getlocal_1
         getlex Qname(PackageNamespace(""),"String")
         astypelate
         coerce_s
         setlocal_2
         jump ofs0023
         ofs0017:findpropstrict Qname(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal_1
         callproperty Qname(PackageNamespace("flash.utils"),"getQualifiedClassName") 1
         coerce_s
         setlocal_2
         ofs0023:getlocal_2
         pushstring "::"
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf") 1
         convert_i
         setlocal_3
         getlocal_3
         pushbyte -1
         ifeq ofs0042
         getlocal_2
         getlocal_3
         pushbyte 2
         add
         callproperty Qname(Namespace("http://adobe.com/AS3/2006/builtin"),"substr") 1
         coerce_s
         setlocal_2
         ofs0042:getlocal_2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

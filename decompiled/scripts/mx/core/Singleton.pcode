package mx.core
{
   use namespace mx_internal;
   
   public class Singleton
   {
      
      mx_internal static const VERSION:String = "4.6.0.23201";
      
      private static var classMap:Object;
      
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         findproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         pushstring "4.6.0.23201"
         initproperty Qname(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
         findproperty Qname(PrivateNamespace(null,"1283"),"classMap")
         newobject 0
         setproperty Qname(PrivateNamespace(null,"1283"),"classMap")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function Singleton()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal_0
         pushscope
         getlocal_0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerClass(param1:String, param2:Class) : void
      {
         trait method Qname(PackageNamespace(""),"registerClass")
         flag FINAL
         dispid 3
         method
         name null
         param Qname(PackageNamespace(""),"String")
         param Qname(PackageNamespace(""),"Class")
         returns Qname(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1283"),"classMap")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1283"),PrivateNamespace(null,"2041"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton")])
         coerce Qname(PackageNamespace(""),"Class")
         setlocal_3
         getlocal_3
         iftrue ofs001d
         getlex Qname(PrivateNamespace(null,"1283"),"classMap")
         getlocal_1
         getlocal_2
         setproperty MultinameL([PrivateNamespace(null,"1283"),PrivateNamespace(null,"2041"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton")])
         ofs001d:returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function getClass(param1:String) : Class
      {
         trait method Qname(PackageNamespace(""),"getClass")
         flag FINAL
         dispid 4
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Class")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1283"),"classMap")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1283"),PrivateNamespace(null,"2041"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getInstance(param1:String) : Object
      {
         trait method Qname(PackageNamespace(""),"getInstance")
         flag FINAL
         dispid 5
         method
         name null
         param Qname(PackageNamespace(""),"String")
         returns Qname(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal_0
         pushscope
         getlex Qname(PrivateNamespace(null,"1283"),"classMap")
         getlocal_1
         getproperty MultinameL([PrivateNamespace(null,"1283"),PrivateNamespace(null,"2041"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton")])
         coerce Qname(PackageNamespace(""),"Class")
         setlocal_2
         getlocal_2
         iftrue ofs0026
         findpropstrict Qname(PackageNamespace(""),"Error")
         pushstring "No class registered for interface \'"
         getlocal_1
         add
         pushstring "\'."
         add
         constructprop Qname(PackageNamespace(""),"Error") 1
         throw
         ofs0026:getlocal_2
         dup
         setlocal_3
         pushstring "getInstance"
         getproperty MultinameL([PrivateNamespace(null,"1283"),PrivateNamespace(null,"2041"),PackageNamespace(""),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:Singleton"),StaticProtectedNs("mx.core:Singleton")])
         getlocal_3
         call 0
         kill 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}
